(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    246690,       4752]
NotebookOptionsPosition[    198236,       3868]
NotebookOutlinePosition[    244560,       4722]
CellTagsIndexPosition[    244517,       4719]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$PlotTheme", "=", "\"\<Scientific\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PositivePart", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">=", "0"}], ",", "x", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"x", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"y", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"z", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"\[Rho]", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Theta]", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"\[Phi]", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"k", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Omega]", " ", ">", " ", "0"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"R", " ", ".", " ", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "\[Omega]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"predecessor", "[", "\[Alpha]_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], ",", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", "\n", "   ", 
     RowBox[{
      RowBox[{"Select", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", "-", " ", 
           RowBox[{"UnitVector", "[", 
            RowBox[{"3", ",", " ", "j"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", 
        "\n", "     ", 
        RowBox[{
         RowBox[{"NonNegative", "@", 
          RowBox[{"Min", "@", "#"}]}], " ", "&"}], ",", "\n", "     ", "1"}], 
       "\n", "     ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "\n", "   ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"firstNonzeroDim", "[", "\[Alpha]_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", "\n", "     ", 
      RowBox[{"\[Alpha]", ",", "\n", "     ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", " ", ">", " ", "0"}], " ", "&"}], ")"}]}], ",", "\n", 
       "     ", "Infinity", ",", " ", "1"}], "\n", "     ", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"\[Alpha]_", ",", "direction_"}], "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "<", 
     RowBox[{"\[Alpha]", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "direction"}], 
        "]"}], "/.", 
       RowBox[{"x", "->", "y1"}]}], "/.", 
      RowBox[{"y", "->", "x"}]}], "/.", 
     RowBox[{"y1", "->", "y"}]}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "4"}], "/", "\[Pi]"}], "/", "r"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "\[Alpha]1", ",", " ", "ga"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Alpha]1", " ", "=", " ", "\[Alpha]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"j", " ", "=", " ", 
          RowBox[{"firstNonzeroDim", "[", "\[Alpha]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Alpha]1", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"\[Alpha]1", "[", 
            RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ga", " ", "=", " ", 
          RowBox[{"g", "[", 
           RowBox[{"\[Alpha]1", ",", "direction"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"ga", ",", " ", 
             RowBox[{"R", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "-", 
           RowBox[{"direction", " ", "\[ImaginaryJ]", " ", "k", " ", 
            RowBox[{
             RowBox[{"R", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "/", "r"}], " ", "ga"}]}], " ", 
          "//", "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"\[Alpha]_", ",", "direction_"}], "]"}], " ", ":=", 
   RowBox[{"g", "[", 
    RowBox[{"\[Alpha]", ",", "direction"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplifiedHeaviside", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", " ", ">=", " ", "0"}], ",", " ", "1", ",", " ", "0"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SafeMoment", "[", 
    RowBox[{"CurrentMoment_", ",", "\[Alpha]_", ",", "dim_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AllTrue", "[", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{
        RowBox[{"#", ">=", "0"}], "&"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"CurrentMoment", "[", 
      RowBox[{"\[Alpha]", ",", "dim"}], "]"}], ",", "\[IndentingNewLine]", 
     "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChargeMoment", "[", 
   RowBox[{
   "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
    "direction_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", 
    RowBox[{"(", 
     RowBox[{"direction", " ", "\[ImaginaryJ]", " ", "\[Omega]"}], ")"}]}], 
   " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dim", " ", "==", " ", "j"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"SimplifiedHeaviside", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "2"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], " ", 
        RowBox[{"SafeMoment", "[", 
         RowBox[{"CurrentMoment", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "2"}], ")"}], 
            " ", 
            RowBox[{"UnitVector", "[", 
             RowBox[{"3", ",", " ", "j"}], "]"}]}], " ", "+", 
           RowBox[{"Total", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", "#", "]"}], "]"}], " ", 
               RowBox[{"UnitVector", "[", 
                RowBox[{"3", ",", " ", "#"}], "]"}]}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
               
               RowBox[{"{", "j", " ", "}"}]}], "]"}]}], "]"}]}], ",", " ", 
          "j"}], "]"}]}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "dim", "]"}], "]"}], " ", 
        RowBox[{"SimplifiedHeaviside", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}], "]"}], " ", 
        RowBox[{"SimplifiedHeaviside", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "dim", "]"}], "]"}], " ", "-", " ", "1"}], "]"}], " ", 
        RowBox[{"SafeMoment", "[", 
         RowBox[{"CurrentMoment", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], 
            " ", 
            RowBox[{"UnitVector", "[", 
             RowBox[{"3", ",", " ", "j"}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "dim", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], 
            " ", 
            RowBox[{"UnitVector", "[", 
             RowBox[{"3", ",", " ", "dim"}], "]"}]}], " ", "+", " ", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", "#", "]"}], "]"}], " ", 
               RowBox[{"UnitVector", "[", 
                RowBox[{"3", ",", " ", "#"}], "]"}]}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
               
               RowBox[{"{", 
                RowBox[{"dim", ",", " ", "j"}], "}"}]}], "]"}]}], "]"}]}], 
          ",", " ", "j"}], "]"}]}]}], "\n", "    ", "]"}], ",", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"ElectricMoment", "[", 
   RowBox[{
   "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
    "direction_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"direction", " ", "\[ImaginaryJ]", " ", "\[Omega]", " ", 
    RowBox[{"CurrentMoment", "[", 
     RowBox[{"\[Alpha]", ",", " ", "dim"}], "]"}]}], " ", "+", 
   RowBox[{"ChargeMoment", "[", 
    RowBox[{
    "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "dim", ",", 
     "direction"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"MagneticMoment", "[", 
   RowBox[{
   "\[Alpha]_", ",", "CurrentMoment_", ",", " ", "dim_", ",", "direction_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"-", "direction"}], " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"LeviCivitaTensor", "[", "3", "]"}], "[", 
         RowBox[{"[", "dim", "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}], " ", 
      RowBox[{"SimplifiedHeaviside", "[", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", "1"}], "]"}], " ", 
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"CurrentMoment", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], " ", 
          RowBox[{"UnitVector", "[", 
           RowBox[{"3", ",", " ", "i"}], "]"}]}], " ", "+", 
         RowBox[{"Total", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", "#", "]"}], "]"}], " ", 
             RowBox[{"UnitVector", "[", 
              RowBox[{"3", ",", " ", "#"}], "]"}]}], " ", "&"}], " ", "/@", 
           " ", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
             RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}]}], ",", " ", "j"}], 
       "]"}]}], ",", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Field", "[", 
   RowBox[{
   "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "MomentFunction_", ",", 
    " ", "dim_", ",", "direction_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[Beta]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Beta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"Norm", "[", 
          RowBox[{"\[Alpha]", ",", " ", "1"}], "]"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"Times", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{"Factorial", "/@", " ", "\[Alpha]"}], ")"}]}], ")"}]}], 
       " ", 
       RowBox[{"MomentFunction", "[", 
        RowBox[{
        "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "dim", ",", 
         "direction"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "===", "0"}], "||", 
        RowBox[{"\[Beta]", "===", "0."}]}], ",", "\[IndentingNewLine]", "0", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"h", "[", 
         RowBox[{"\[Alpha]", ",", "direction"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ElectricField", "[", 
    RowBox[{
    "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
     "direction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Field", "[", 
    RowBox[{
    "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "ElectricMoment", ",", 
     " ", "dim", ",", "direction"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MagneticField", "[", 
    RowBox[{
    "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
     "direction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Field", "[", 
    RowBox[{
    "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "MagneticMoment", ",", 
     " ", "dim", ",", "direction"}], "]"}]}], ";"}], "\n", 
 RowBox[{"On", "[", "Assert", "]"}], "\n", 
 RowBox[{
  RowBox[{"CurrentMoment", "[", 
   RowBox[{"\[Alpha]_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], " ", "&&", " ", 
     RowBox[{"dim", " ", "==", " ", "3"}]}], ",", "\n", "  ", 
    RowBox[{"\[ImaginaryJ]", " ", "\[Omega]", " ", "p"}], ",", " ", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EfieldThis", " ", "=", " ", 
   RowBox[{"Simplify", "@", 
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"ElectricField", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ax", ",", " ", "ay", ",", " ", "az"}], "}"}], ",", " ", 
            "CurrentMoment", ",", " ", "dim", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "\n", "      ", 
          RowBox[{"{", 
           RowBox[{"ax", ",", " ", "0", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ay", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"az", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax", " ", "-", " ", "ay"}]}], 
           "}"}]}], "]"}], ",", "\n", "     ", 
        RowBox[{"{", 
         RowBox[{"dim", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BfieldThis", " ", "=", " ", 
   RowBox[{"Simplify", "@", 
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"MagneticField", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ax", ",", " ", "ay", ",", " ", "az"}], "}"}], ",", " ", 
            "CurrentMoment", ",", " ", "dim", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "\n", "      ", 
          RowBox[{"{", 
           RowBox[{"ax", ",", " ", "0", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ay", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"az", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax", " ", "-", " ", "ay"}]}], 
           "}"}]}], "]"}], ",", "\n", "     ", 
        RowBox[{"{", 
         RowBox[{"dim", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "p"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"R", "/", "r"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HJackson", " ", "=", " ", 
   RowBox[{
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "^", "2"}], "/", "4"}], "/", "\[Pi]"}], " ", 
       RowBox[{
        RowBox[{"n", "\[Cross]", "P"}], "/", "r"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "\[ImaginaryJ]"}], "/", "k"}], "/", "r"}]}], 
        ")"}]}], ",", "\n", "    ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}], "//", " ", "Simplify"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EJackson", " ", "=", " ", 
   RowBox[{
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "4"}], "/", "\[Pi]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k", "^", "2"}], "/", "r"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "\[Cross]", "P"}], ")"}], "\[Cross]", "n"}]}], " ", 
         "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{"n", " ", ".", " ", "P"}], ")"}]}], " ", "-", " ", 
            "P"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"r", "^", "3"}]}], " ", "-", " ", 
            RowBox[{"\[ImaginaryJ]", " ", 
             RowBox[{"k", "/", 
              RowBox[{"r", "^", "2"}]}]}]}], ")"}]}]}], ")"}]}], ",", "\n", 
      "    ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}], " ", "//", " ", "Simplify"}]}], ";"}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"BfieldThis", " ", "-", " ", "HJackson"}], "]"}], " ", "==", " ", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"EfieldThis", " ", "-", " ", "EJackson"}], "]"}], " ", "==", " ", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "CurrentMoment", ",", " ", "EfieldThis", ",", " ", "BfieldThis", ",", " ", 
   "P", ",", " ", "n", ",", " ", "HJackson", ",", " ", "EJackson"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.884000609634778*^9, 3.8840006968866787`*^9}, {
   3.8840007319590607`*^9, 3.884000829418873*^9}, {3.884001028710011*^9, 
   3.8840011333372183`*^9}, {3.884001278524447*^9, 3.884001299518766*^9}, {
   3.884001348335174*^9, 3.884001366873633*^9}, {3.884001803993787*^9, 
   3.884002066049169*^9}, {3.884002108198312*^9, 3.884002132057137*^9}, {
   3.884002178414555*^9, 3.884002179051227*^9}, {3.884002214065489*^9, 
   3.8840023591157627`*^9}, {3.884002413749641*^9, 3.884002486477878*^9}, {
   3.884002538957056*^9, 3.884002602966361*^9}, {3.884003603165002*^9, 
   3.8840036048793697`*^9}, {3.8840601006885157`*^9, 3.884060108751841*^9}, {
   3.884060196558689*^9, 3.884060205357373*^9}, 3.8840603667628307`*^9, {
   3.884060498702962*^9, 3.8840605021344137`*^9}, {3.884060717504346*^9, 
   3.8840607200037203`*^9}, {3.88406083830529*^9, 3.8840608407481823`*^9}, {
   3.8840608715415707`*^9, 3.88406087311456*^9}, {3.8840609159792128`*^9, 
   3.884060948884097*^9}, {3.884061474472909*^9, 3.884061474876706*^9}, 
   3.8840634959752893`*^9, {3.884073629612423*^9, 3.8840736925443277`*^9}, {
   3.8840738126934137`*^9, 3.884073850562505*^9}, 3.8840738929738293`*^9, {
   3.88407392555429*^9, 3.8840740563439913`*^9}, {3.884074170241288*^9, 
   3.884074171444996*^9}, {3.884074581926303*^9, 3.884074582030273*^9}, {
   3.8840748610096684`*^9, 3.884074884743609*^9}, {3.8840749315100317`*^9, 
   3.884074982814138*^9}, {3.884075162586122*^9, 3.884075235779271*^9}, {
   3.8840753118960648`*^9, 3.8840753172894917`*^9}, {3.884075365605968*^9, 
   3.884075418367305*^9}, {3.884075479747862*^9, 3.8840755464143457`*^9}, {
   3.884075579243285*^9, 3.884075607752714*^9}, {3.884075650931262*^9, 
   3.884075727611594*^9}, {3.8840757724111767`*^9, 3.8840758192333193`*^9}, {
   3.884075921696726*^9, 3.8840759331259527`*^9}, {3.884076251145833*^9, 
   3.884076273557016*^9}, {3.8840764158788023`*^9, 3.8840764379412537`*^9}, {
   3.884076485382244*^9, 3.884076726009431*^9}, {3.88407677442914*^9, 
   3.884076827943948*^9}, {3.8840768678926373`*^9, 3.8840769039136353`*^9}, {
   3.884076944146253*^9, 3.884077065476281*^9}, {3.8840771853458652`*^9, 
   3.884077195362556*^9}, {3.884077231839224*^9, 3.884077236133525*^9}, {
   3.884077458519541*^9, 3.884077461693578*^9}, {3.884078284344028*^9, 
   3.8840783002273617`*^9}, {3.884078372323215*^9, 3.884078379720745*^9}, 
   3.8840784325537167`*^9, {3.88407847235771*^9, 3.884078507140992*^9}, {
   3.884078885897027*^9, 3.884078900756678*^9}, {3.884079136447398*^9, 
   3.884079247137995*^9}, {3.884079287875126*^9, 3.8840793062880783`*^9}, {
   3.884079411983532*^9, 3.884079678539888*^9}, {3.884079732069956*^9, 
   3.884079782964764*^9}, {3.884079848252571*^9, 3.884079890778102*^9}, {
   3.884079950320771*^9, 3.884080057313257*^9}, {3.884080099972632*^9, 
   3.884080104674906*^9}, {3.884080204888905*^9, 3.884080261766551*^9}, {
   3.8840803000854263`*^9, 3.8840803067022963`*^9}, {3.884080503959408*^9, 
   3.884080527425723*^9}, {3.884080579545789*^9, 3.884080582395371*^9}, {
   3.884080630006164*^9, 3.884080762948007*^9}, {3.884080821969322*^9, 
   3.884080865871112*^9}, {3.884081250998461*^9, 3.8840813124964647`*^9}, {
   3.88408134583077*^9, 3.884081713816759*^9}, {3.884081791232839*^9, 
   3.884081840961857*^9}, {3.884082156565094*^9, 3.884082176766017*^9}, {
   3.884082369579973*^9, 3.884082386232759*^9}, {3.884082444817554*^9, 
   3.884082476771557*^9}, {3.884082508068297*^9, 3.884082598993812*^9}, {
   3.884082721345482*^9, 3.8840827489860363`*^9}, {3.884082880759396*^9, 
   3.88408295167666*^9}, {3.884082990083599*^9, 3.884083083577067*^9}, {
   3.8840831470703573`*^9, 3.884083219632862*^9}, {3.8840837016101513`*^9, 
   3.884083759241652*^9}, {3.884083806607751*^9, 3.884083921005423*^9}, {
   3.884083953834231*^9, 3.884083954350896*^9}, 3.884084038118771*^9, {
   3.884084299685438*^9, 3.884084402464469*^9}, {3.884084496966902*^9, 
   3.884084499237751*^9}, {3.88408522836012*^9, 3.88408527455453*^9}, {
   3.884085341417341*^9, 3.884085448086464*^9}, {3.884085484228407*^9, 
   3.884085504359106*^9}, {3.8840855647354507`*^9, 3.884085565887127*^9}, {
   3.884085629371173*^9, 3.884085652099423*^9}, {3.884088343453698*^9, 
   3.884088363233407*^9}, {3.884088413972342*^9, 3.8840884631006002`*^9}, {
   3.884088495069064*^9, 3.884088510707528*^9}, {3.8841465570042267`*^9, 
   3.884146594132523*^9}, {3.884315446655189*^9, 3.884315450074999*^9}, {
   3.884323241452577*^9, 3.884323281049721*^9}, {3.884419580129754*^9, 
   3.884419595486574*^9}, {3.884421969006374*^9, 3.884421976167272*^9}, {
   3.884422013950158*^9, 3.884422078949073*^9}, {3.884424391629668*^9, 
   3.884424395746438*^9}, {3.884425884650653*^9, 3.884425887640292*^9}, {
   3.884431320310212*^9, 3.88443132616331*^9}, {3.88443151276901*^9, 
   3.8844315153782587`*^9}, {3.8844315779448423`*^9, 3.884431589741139*^9}, {
   3.8846922563560867`*^9, 3.8846924400715933`*^9}, {3.884692491266904*^9, 
   3.8846925058731833`*^9}, {3.884692564069639*^9, 3.884692569795225*^9}, {
   3.884692604937263*^9, 3.884692611667431*^9}, {3.884692647787157*^9, 
   3.884692649786775*^9}, {3.884751679055972*^9, 3.884751681566633*^9}, {
   3.884842090293371*^9, 3.884842227024643*^9}, 3.884927513757187*^9, {
   3.8924673062661858`*^9, 3.892467485297538*^9}, {3.892467571933621*^9, 
   3.892467649847211*^9}, {3.89246771024794*^9, 3.892467765269552*^9}, {
   3.892467850596301*^9, 3.892467912909047*^9}, {3.89246798307332*^9, 
   3.892468039608452*^9}, {3.892468072985154*^9, 3.892468146515061*^9}, {
   3.8924681886324863`*^9, 3.8924683865706167`*^9}, {3.8924684308683023`*^9, 
   3.8924685441829453`*^9}, {3.8924685934884987`*^9, 3.892468629703683*^9}, 
   3.892468671857461*^9, {3.892468714852641*^9, 3.8924688007788057`*^9}, {
   3.892468883058585*^9, 3.89246890290711*^9}, {3.892468968087084*^9, 
   3.892469064756022*^9}, {3.8924691659092627`*^9, 3.892469188212769*^9}, {
   3.8924692237365303`*^9, 3.892469267490225*^9}, {3.892469327509776*^9, 
   3.892469577440151*^9}, {3.8924697157782793`*^9, 3.892469730600913*^9}, {
   3.892469810468482*^9, 3.8924698523822727`*^9}, {3.8924699075604153`*^9, 
   3.892469975394009*^9}, {3.892552834618821*^9, 3.8925528379577637`*^9}, {
   3.892553111451232*^9, 3.892553120175617*^9}, {3.892553371903566*^9, 
   3.892553393526924*^9}, {3.8925534457262497`*^9, 3.89255352270033*^9}, {
   3.892553568485506*^9, 3.892553633378276*^9}, {3.89255380658475*^9, 
   3.8925538148744917`*^9}, {3.892553848256592*^9, 3.892554115602652*^9}, {
   3.892554158671852*^9, 3.892554188864911*^9}, {3.892604890335157*^9, 
   3.892604913002264*^9}, {3.892604943701871*^9, 3.8926049509450207`*^9}, {
   3.892605150461391*^9, 3.892605252901423*^9}, {3.8926053872072277`*^9, 
   3.892605394109665*^9}, {3.892910471078517*^9, 3.892910478090201*^9}, {
   3.892910554868037*^9, 3.892910646502221*^9}, {3.892910735478388*^9, 
   3.8929107466713133`*^9}, {3.892910887690152*^9, 3.8929108930049458`*^9}, 
   3.8929111144575977`*^9, {3.892911198602079*^9, 3.892911215864217*^9}, {
   3.892911247778859*^9, 3.8929113295436697`*^9}, {3.892911411383336*^9, 
   3.8929114838801126`*^9}, {3.892911596689867*^9, 3.8929116075394993`*^9}, {
   3.892911774145183*^9, 3.892911813871189*^9}, {3.892911976040004*^9, 
   3.892911980975912*^9}, {3.892912023885827*^9, 3.892912026368594*^9}, {
   3.892912096637796*^9, 3.892912098749069*^9}, {3.893043795369556*^9, 
   3.893043822576976*^9}, {3.893131107184662*^9, 3.893131174361981*^9}, {
   3.893131533841667*^9, 3.893131564238133*^9}, 3.893208375140933*^9, {
   3.894093837549528*^9, 3.894093847395047*^9}, {3.894093954224983*^9, 
   3.8940939579489822`*^9}, {3.894094070224328*^9, 3.8940940717567368`*^9}, {
   3.8940945078974543`*^9, 3.8940945164964037`*^9}, {3.8940947430573053`*^9, 
   3.894094816854249*^9}, {3.8940948826671047`*^9, 3.894094887187581*^9}, {
   3.8940949250363617`*^9, 3.8940949476025543`*^9}, {3.8940950083977222`*^9, 
   3.894095096476222*^9}, {3.8940978151786137`*^9, 3.8940978631477547`*^9}, 
   3.8940979030859423`*^9, {3.894097940728183*^9, 3.894097963397852*^9}, {
   3.8940980247019672`*^9, 3.894098055930475*^9}, {3.894098088487417*^9, 
   3.89409808861064*^9}, {3.894105539626463*^9, 3.894105540255934*^9}, {
   3.8941055746370487`*^9, 3.894105582354734*^9}, {3.894105620203109*^9, 
   3.894105725707698*^9}, {3.894106637501421*^9, 3.8941067152630672`*^9}, 
   3.8941884620414343`*^9, {3.895411220580402*^9, 3.8954112667150087`*^9}, {
   3.895411350147106*^9, 3.895411434289341*^9}, {3.895411470774928*^9, 
   3.895411602482841*^9}, {3.8954117304400663`*^9, 3.8954118275624847`*^9}, {
   3.895413096174123*^9, 3.895413101690811*^9}, 3.895560283184165*^9, {
   3.895560522648332*^9, 3.8955605609993*^9}, {3.8955606381869507`*^9, 
   3.8955607432848673`*^9}, 3.896015124512705*^9},
 CellLabel->
  "In[204]:=",ExpressionUUID->"0769664e-eca7-425a-bd9c-aa18d11e94d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CurrentMoment", "[", 
   RowBox[{"\[Alpha]_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], " ", "&&", " ", 
     RowBox[{"dim", " ", "==", " ", "3"}]}], ",", "\n", "  ", 
    RowBox[{"mom", "[", 
     RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "==", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "2"}], "}"}]}], "&&", 
       RowBox[{"dim", "==", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"mom", "[", 
       RowBox[{"0", ",", "0", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      "0"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"EfieldThis", " ", "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"ElectricField", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ax", ",", " ", "ay", ",", " ", "az"}], "}"}], ",", " ", 
      "CurrentMoment", ",", " ", "3", ",", 
      RowBox[{"-", "1"}]}], "]"}], ",", "\n", "      ", 
    RowBox[{"{", 
     RowBox[{"ax", ",", " ", "0", ",", " ", "2"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"ay", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "-", " ", "ax"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"az", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "-", " ", "ax", " ", "-", " ", "ay"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.9380685666368217`*^9, 3.938068685616835*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"804c27a4-ef89-412d-929a-103b3a5fa8e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
     RowBox[{"mom", "[", 
      RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], 
    RowBox[{"4", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}]]}]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["z", "2"]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}], 
        RowBox[{"5", "/", "2"}]]}]], "-", 
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "-", 
     FractionBox[
      RowBox[{"3", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["z", "2"], " ", "\[Omega]"}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"], "+", 
         SuperscriptBox["z", "2"]}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["z", "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          SuperscriptBox["z", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"mom", "[", 
         RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "\[Omega]"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
      RowBox[{"mom", "[", 
       RowBox[{"0", ",", "0", ",", "2"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.938068601221703*^9, {3.938068642076926*^9, 3.938068655401803*^9}, 
   3.938068686202598*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"8cfbe708-1962-46ca-a53e-664952b71b72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dirName", "=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", "=", 
   RowBox[{"2", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1s", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"0", ",", "0", ",", "10", ",", "0", ",", "0", ",", 
     RowBox[{"(*", "P", "*)"}], "45", ",", "45", ",", "55", ",", "68", ",", 
     "55", ",", 
     RowBox[{"(*", "F", "*)"}], "91", ",", "91", ",", "101", ",", "91", ",", 
     RowBox[{"(*", "L", "*)"}], "136", ",", "136"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"x2s", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"0", ",", "10", ",", "20", ",", "30", ",", "40", ",", 
     RowBox[{"(*", "P", "*)"}], "0", ",", "20", ",", "20", ",", "30", ",", 
     "40", ",", 
     RowBox[{"(*", "F", "*)"}], "0", ",", "30", ",", "20", ",", "40", ",", 
     RowBox[{"(*", "L", "*)"}], "10", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ws", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"35", ",", "10", ",", "23", ",", "10", ",", "35", ",", 
     RowBox[{"(*", "P", "*)"}], "10", ",", "10", ",", "23", ",", "10", ",", 
     "23", ",", 
     RowBox[{"(*", "F", "*)"}], "10", ",", "10", ",", "23", ",", "35", ",", 
     RowBox[{"(*", "L", "*)"}], "10", ",", "35"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hs", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
     RowBox[{"(*", "P", "*)"}], "20", ",", "30", ",", "10", ",", "10", ",", 
     "10", ",", 
     RowBox[{"(*", "F", "*)"}], "20", ",", "10", ",", "10", ",", "10", ",", 
     RowBox[{"(*", "L", "*)"}], "40", ",", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitudes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "8", ",", 
     RowBox[{"6", "/", "2"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"(*", "P", "*)"}], 
     RowBox[{"8", "/", "5"}], ",", 
     RowBox[{"4", "/", "5"}], ",", 
     RowBox[{"4", "/", "5"}], ",", 
     RowBox[{
      RowBox[{"-", "4"}], "/", "5"}], ",", 
     RowBox[{"8", "/", "5"}], ",", 
     RowBox[{"(*", "F", "*)"}], 
     RowBox[{"14", "/", "5"}], ",", 
     RowBox[{"14", "/", "5"}], ",", 
     RowBox[{"14", "/", "5"}], ",", 
     RowBox[{
      RowBox[{"-", "14"}], "/", "5"}], ",", 
     RowBox[{"(*", "L", "*)"}], 
     RowBox[{"7", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"-", "7"}], "/", "4"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"polarities", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2", ",", "1", ",", 
     RowBox[{"(*", "P", "*)"}], "2", ",", "2", ",", "1", ",", "2", ",", "1", 
     ",", 
     RowBox[{"(*", "F", "*)"}], "2", ",", "2", ",", "1", ",", "1", ",", 
     RowBox[{"(*", "L", "*)"}], "2", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d1", " ", "=", " ", "a"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lengthLogo", " ", "=", " ", "171"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d1", "=", 
   RowBox[{"a", "/", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"slice", "=", 
   RowBox[{";;", "5"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"x1s", "=", 
   RowBox[{"x1s", "[", 
    RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2s", "=", 
   RowBox[{"x2s", "[", 
    RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ws", "=", 
   RowBox[{"ws", "[", 
    RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hs", "=", 
   RowBox[{"hs", "[", 
    RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitudes", "=", 
   RowBox[{"amplitudes", "[", 
    RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarities", "=", 
    RowBox[{"polarities", "[", 
     RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2", " ", "=", " ", 
   RowBox[{"a", " ", "*", " ", 
    RowBox[{"50", " ", "/", " ", "lengthLogo"}]}]}], ";"}], "\n", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "Red", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#1", "+", "#3"}], ",", 
               RowBox[{"#2", "+", "#4"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#5", ",", "#6", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "[", 
                RowBox[{"[", "#7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x1s", "/", "lengthLogo"}], " ", "length"}], "-", "d1"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x2s", "/", "lengthLogo"}], " ", "length"}], "-", "d2"}], 
        ",", 
        RowBox[{
         RowBox[{"ws", "/", "lengthLogo"}], " ", "length"}], ",", 
        RowBox[{
         RowBox[{"hs", "/", "lengthLogo"}], " ", "length"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "x1s"}], "]"}], ",", "amplitudes", ",", 
        "polarities"}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntJ", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "\[Sigma]", ",", "m"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"m", "+", "1"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "+", 
           RowBox[{"\[Sigma]", "/", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "-", 
           RowBox[{"\[Sigma]", "/", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}]}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CJ", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "x1", ",", "x2", ",", "w", ",", "h"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntJ", "[", 
       RowBox[{
        RowBox[{"x1", "+", 
         RowBox[{"w", "/", "2"}]}], ",", "w", ",", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
      RowBox[{"IntJ", "[", 
       RowBox[{
        RowBox[{"x2", "+", 
         RowBox[{"h", "/", "2"}]}], ",", "h", ",", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "CurrentMoment", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CurrentMoment", "[", 
    RowBox[{"\[Alpha]_", ",", "dim_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CurrentMoment", "[", 
     RowBox[{"\[Alpha]", ",", "dim"}], "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "==", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
       RowBox[{"Sum", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"polarities", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "==", "dim"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CJ", "[", 
             RowBox[{"\[Alpha]", ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x1s", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
                "length"}], "-", "d1"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x2s", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
                "length"}], "-", "d2"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"ws", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
               "length"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"hs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
               "length"}]}], "]"}], 
            RowBox[{"amplitudes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           "0"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "x1s"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxOrder", "=", "80"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8924699830780573`*^9, 3.89247018231215*^9}, {
   3.892470228850005*^9, 3.892470582579604*^9}, {3.8924706647340593`*^9, 
   3.89247068673919*^9}, {3.892470725818749*^9, 3.892470884573215*^9}, {
   3.892470929904375*^9, 3.89247112014157*^9}, {3.8924711644811563`*^9, 
   3.892471170174965*^9}, 3.892471204199339*^9, {3.892471279112486*^9, 
   3.892471331659861*^9}, {3.8924713643095284`*^9, 3.892471383208806*^9}, {
   3.892471424645151*^9, 3.892471480401073*^9}, {3.892471513546616*^9, 
   3.892471546723427*^9}, {3.892471579825458*^9, 3.8924716003399277`*^9}, {
   3.8924716340961657`*^9, 3.89247173035151*^9}, {3.8924720381186953`*^9, 
   3.892472038425529*^9}, {3.892472659158371*^9, 3.8924726869739*^9}, {
   3.892473169173513*^9, 3.892473317474956*^9}, {3.892473559854026*^9, 
   3.892473563396908*^9}, {3.892534263469088*^9, 3.8925343700127897`*^9}, {
   3.8925344096663427`*^9, 3.892534680714419*^9}, {3.892534717295529*^9, 
   3.892535097016313*^9}, {3.892535226344713*^9, 3.8925352276158943`*^9}, {
   3.892535285299474*^9, 3.892535330159309*^9}, {3.892535391585253*^9, 
   3.8925354545622*^9}, {3.892535499876837*^9, 3.892535533793997*^9}, {
   3.892535954687216*^9, 3.8925360077976*^9}, {3.8925360529969273`*^9, 
   3.892536114849571*^9}, {3.892536152628727*^9, 3.892536213064453*^9}, {
   3.892536245430011*^9, 3.89253635114607*^9}, {3.892536391476233*^9, 
   3.8925365129236917`*^9}, {3.892536565930716*^9, 3.892536568969715*^9}, {
   3.8925366109334517`*^9, 3.892536844664453*^9}, {3.892537755421611*^9, 
   3.89253787558458*^9}, {3.8925380138378067`*^9, 3.892538068807405*^9}, {
   3.8925381490415783`*^9, 3.892538269368656*^9}, 3.892538307149173*^9, {
   3.892538356198453*^9, 3.892538357076528*^9}, {3.892538479610544*^9, 
   3.8925385093172703`*^9}, 3.892541768351252*^9, {3.89255424064634*^9, 
   3.892554241350721*^9}, {3.892554342398281*^9, 3.8925543450217733`*^9}, {
   3.892603903699616*^9, 3.89260405540491*^9}, {3.892604457539147*^9, 
   3.892604457571178*^9}, {3.892604595171578*^9, 3.892604597284048*^9}, 
   3.892604671717272*^9, {3.892604794726025*^9, 3.892604812094214*^9}, {
   3.892605519252791*^9, 3.892605521329522*^9}, {3.8926056730591917`*^9, 
   3.892605702519664*^9}, {3.8926058121845207`*^9, 3.89260581639511*^9}, {
   3.892606025192808*^9, 3.892606025844755*^9}, 3.892606174952083*^9, {
   3.8926064395756617`*^9, 3.892606439617577*^9}, {3.8926175820262547`*^9, 
   3.892617618253188*^9}, {3.892620042359761*^9, 3.892620042555163*^9}, {
   3.8927126283335247`*^9, 3.8927126625327787`*^9}, {3.892712693561925*^9, 
   3.892712715350934*^9}, {3.892712752868766*^9, 3.892712789955256*^9}, {
   3.892716142081061*^9, 3.892716149815473*^9}, {3.892720490622231*^9, 
   3.892720521918181*^9}, {3.89272056902479*^9, 3.892720578451721*^9}, 
   3.892720749657956*^9, 3.8927207991442347`*^9, {3.8927210475508623`*^9, 
   3.892721047666835*^9}, 3.892721089171493*^9, {3.892723481654175*^9, 
   3.8927234822150793`*^9}, {3.8927237512972927`*^9, 3.892723777633348*^9}, 
   3.892723879529311*^9, {3.89272885093661*^9, 3.892728879961473*^9}, {
   3.8927289557190866`*^9, 3.892729073540205*^9}, {3.892778913076109*^9, 
   3.892778918172077*^9}, {3.8927792420211773`*^9, 3.892779246185834*^9}, {
   3.892779545271763*^9, 3.8927796113313932`*^9}, {3.892779646813056*^9, 
   3.8927796778059187`*^9}, {3.892779707946611*^9, 3.892779899394536*^9}, {
   3.8927805939222717`*^9, 3.8927806818944283`*^9}, {3.892781089001679*^9, 
   3.892781090193611*^9}, {3.892781446176318*^9, 3.892781505666193*^9}, {
   3.892781599706452*^9, 3.892781613067668*^9}, {3.892781696318074*^9, 
   3.892781697948388*^9}, 3.89278178290858*^9, 3.89278189229109*^9, {
   3.892781968364368*^9, 3.892782044075358*^9}, {3.892782551182124*^9, 
   3.892782576650601*^9}, {3.892782607184216*^9, 3.8927826075868196`*^9}, {
   3.892782644659403*^9, 3.8927827151586647`*^9}, {3.892782869972055*^9, 
   3.892782870268029*^9}, {3.892782943571352*^9, 3.892782944287817*^9}, {
   3.89278303280304*^9, 3.8927830361336517`*^9}, {3.892783070922124*^9, 
   3.8927830817749853`*^9}, {3.892783165161522*^9, 3.8927831660520153`*^9}, 
   3.892783264274108*^9, {3.892783335590049*^9, 3.8927833466370573`*^9}, 
   3.892783418941921*^9, 3.892783488960793*^9, 3.892783557622055*^9, 
   3.892783631262759*^9, {3.892783699572384*^9, 3.892783704850072*^9}, {
   3.89278378151903*^9, 3.892783782622398*^9}, {3.892783859899169*^9, 
   3.892783862295594*^9}, {3.892783936522676*^9, 3.892783949022234*^9}, 
   3.892784019326366*^9, 3.892784115152978*^9, 3.8927845854647818`*^9, {
   3.892784661717691*^9, 3.892784663121562*^9}, {3.892784785733423*^9, 
   3.892784786362808*^9}, 3.8927848565545683`*^9, {3.892784937286747*^9, 
   3.8927849423371973`*^9}, 3.89278533305907*^9, {3.892785410618473*^9, 
   3.892785540116275*^9}, 3.892785777109626*^9, {3.892785922671089*^9, 
   3.892785948886092*^9}, {3.892802438690164*^9, 3.892802447137385*^9}, {
   3.892805565223373*^9, 3.8928055707363577`*^9}, {3.892877411012669*^9, 
   3.892877428569592*^9}, {3.892879217888638*^9, 3.89287925200854*^9}, {
   3.8928802206059027`*^9, 3.892880224497159*^9}, {3.892882185344121*^9, 
   3.892882236485929*^9}, 3.892887987987059*^9, 3.892888755353424*^9, {
   3.8928903934072323`*^9, 3.892890394528607*^9}, {3.892982747589015*^9, 
   3.8929828760611486`*^9}, {3.8929829489276733`*^9, 3.892982952091558*^9}, 
   3.892983097877902*^9, 3.892983331045706*^9, {3.893129844256976*^9, 
   3.893129849947349*^9}, 3.8931298978740473`*^9, {3.8931301492970257`*^9, 
   3.8931301938502607`*^9}, {3.893131360749626*^9, 3.8931313625135813`*^9}, {
   3.8931317390498447`*^9, 3.89313174074341*^9}, {3.8931369544222097`*^9, 
   3.893136959145856*^9}, 3.893137651091721*^9, {3.8936542557187433`*^9, 
   3.893654279597539*^9}, {3.893654455935363*^9, 3.893654460215735*^9}, 
   3.893654518616959*^9, 3.893654662725006*^9, 3.893654918980032*^9, {
   3.894093862583768*^9, 3.894093873680612*^9}, 3.894095156031728*^9, {
   3.894096158067211*^9, 3.894096161550856*^9}, {3.894105746601873*^9, 
   3.8941057524852743`*^9}, {3.8941058629396563`*^9, 
   3.8941063156628847`*^9}, {3.8941063540814857`*^9, 3.8941064535792837`*^9}, 
   3.894106531813365*^9, {3.8941065646639442`*^9, 3.894106564708083*^9}, 
   3.8941065982585983`*^9, 3.894106694863759*^9, 3.894106808222067*^9, 
   3.894106842568624*^9, {3.894179371388049*^9, 3.894179373966011*^9}, 
   3.894179545930748*^9, 3.894179828003138*^9, {3.894179883454838*^9, 
   3.8941798835211067`*^9}, {3.894180179892003*^9, 3.894180182089591*^9}, {
   3.8941803307744007`*^9, 3.894180330873653*^9}, {3.8941884176339903`*^9, 
   3.894188417971533*^9}, {3.894188505094781*^9, 3.894188519161525*^9}, {
   3.894189223469081*^9, 3.894189223917157*^9}, {3.894189426094364*^9, 
   3.894189458629487*^9}, {3.8941895085103416`*^9, 3.894189526018969*^9}, {
   3.894189583683049*^9, 3.89418958393442*^9}, {3.894189993746097*^9, 
   3.894190015199729*^9}, {3.894190094277293*^9, 3.894190099595339*^9}, {
   3.894693024648138*^9, 3.894693025536696*^9}, {3.894698311364753*^9, 
   3.8946983116432734`*^9}, {3.895118680242474*^9, 3.8951186866184587`*^9}, 
   3.8951188465073767`*^9, {3.8951369421673613`*^9, 3.895136948162023*^9}, {
   3.895137134275805*^9, 3.895137134533493*^9}, {3.8951373406672583`*^9, 
   3.8951373689189157`*^9}, {3.895138051038962*^9, 3.895138059902824*^9}, {
   3.895138105590035*^9, 3.895138106239567*^9}, {3.895411124651306*^9, 
   3.895411136622301*^9}, {3.89541117338066*^9, 3.8954112130234957`*^9}, {
   3.895411848346971*^9, 3.895411889973048*^9}, {3.895411966999748*^9, 
   3.8954119886528587`*^9}, 3.8954132558793983`*^9, 3.895414354502701*^9, {
   3.895415664878909*^9, 3.8954156673074017`*^9}, {3.89541578319868*^9, 
   3.895415785249238*^9}, {3.8954158695294237`*^9, 3.8954159335218287`*^9}, 
   3.895465286265793*^9, 3.895467332049993*^9, 3.895467448709587*^9, 
   3.895467505975737*^9, 3.896014741678632*^9, 3.896146972986812*^9, {
   3.8961470324277763`*^9, 3.896147032584414*^9}, {3.8966428397555647`*^9, 
   3.896642885727208*^9}, {3.89664291611948*^9, 3.8966429482444057`*^9}, {
   3.896673032329246*^9, 3.896673042341378*^9}, 3.897032122542247*^9, 
   3.897045752180345*^9, 3.909047419080103*^9, {3.909047469014835*^9, 
   3.909047470564423*^9}, {3.9090476945835876`*^9, 3.909047694632038*^9}, {
   3.909050687632723*^9, 3.909050687834285*^9}, {3.9090560968605757`*^9, 
   3.909056117537305*^9}, 3.9092026868995943`*^9, 3.9092029644761972`*^9, 
   3.9092031054721813`*^9, {3.909203169978815*^9, 3.909203170096789*^9}, {
   3.909204553002472*^9, 3.909204562521525*^9}, {3.9092064569282017`*^9, 
   3.90920647695919*^9}, 3.909211282194068*^9, {3.909211330743487*^9, 
   3.909211340060543*^9}},
 CellLabel->
  "In[706]:=",ExpressionUUID->"b1664fb8-8d64-4d75-b4de-c141720ce0d0"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
   RectangleBox[NCache[{-2, Rational[-500, 171]}, {-2, -2.9239766081871346`}],
     NCache[{Rational[358, 171], Rational[-100, 57]}, {
     2.0935672514619883`, -1.7543859649122806`}]], 
   {GrayLevel[0], InsetBox[
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", "x"}], "}"}], 
     NCache[{-2, Rational[-500, 171]}, {-2, -2.9239766081871346`}]]}, 
   {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
    RectangleBox[NCache[{-2, Rational[-100, 57]}, {-2, -1.7543859649122806`}],
      NCache[{Rational[-142, 171], 
       Rational[-100, 171]}, {-0.8304093567251462, -0.5847953216374269}]], 
    {GrayLevel[0], InsetBox[
      RowBox[{"{", 
       RowBox[{"2", ",", "8", ",", "y"}], "}"}], 
      NCache[{-2, Rational[-100, 57]}, {-2, -1.7543859649122806`}]]}, 
    {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
     RectangleBox[
      NCache[{Rational[-142, 171], 
        Rational[-100, 171]}, {-0.8304093567251462, -0.5847953216374269}], 
      NCache[{Rational[106, 57], Rational[100, 171]}, {1.8596491228070176`, 
       0.5847953216374269}]], 
     {GrayLevel[0], InsetBox[
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "x"}], "}"}], 
       NCache[{Rational[-142, 171], 
         Rational[-100, 
          171]}, {-0.8304093567251462, -0.5847953216374269}]]}, 
     {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
      RectangleBox[NCache[{-2, Rational[100, 171]}, {-2, 0.5847953216374269}],
        NCache[{Rational[-142, 171], Rational[100, 57]}, {-0.8304093567251462,
         1.7543859649122806`}]], 
      {GrayLevel[0], InsetBox[
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "8"}], ",", "y"}], "}"}], 
        NCache[{-2, Rational[100, 171]}, {-2, 0.5847953216374269}]]}, 
      {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
       RectangleBox[
        NCache[{-2, Rational[100, 57]}, {-2, 1.7543859649122806`}], 
        NCache[{Rational[358, 171], Rational[500, 171]}, {2.0935672514619883`,
          2.9239766081871346`}]], 
       {GrayLevel[0], InsetBox[
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "2"}], ",", "x"}], "}"}], 
         NCache[{-2, Rational[100, 57]}, {-2, 1.7543859649122806`}]]}}}}}},
  Frame->True,
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.896673034142425*^9, 3.896673084746319*^9}, 
   3.897032123344733*^9, 3.897045753045747*^9, 3.897273686563325*^9, 
   3.897273859903472*^9, 3.897354834747205*^9, 3.8976973835938787`*^9, 
   3.8977802815485897`*^9, 3.898138681573009*^9, 3.898215514561998*^9, 
   3.898299440364389*^9, 3.909047419801981*^9, 3.909047470875654*^9, 
   3.909047694890477*^9, 3.909050689844822*^9, {3.909056097844638*^9, 
   3.909056117840556*^9}, 3.909202687751835*^9, 3.9092029654942913`*^9, 
   3.90920310666082*^9, 3.909203170640267*^9, {3.909204553843966*^9, 
   3.9092045644090157`*^9}, {3.909206457483642*^9, 3.909206477627325*^9}, 
   3.909211282996595*^9, {3.90921133131649*^9, 3.909211340622967*^9}},
 CellLabel->
  "Out[726]=",ExpressionUUID->"e339ed97-5d3d-4b6c-9c2a-3295255639c6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rz", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"antiderivative", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"t", "^", "2"}]}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"derivatives", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "dir"}], "}"}], "->", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"FunctionExpand", "[", "\[IndentingNewLine]", 
          RowBox[{"D", "[", 
           RowBox[{"antiderivative", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "i"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
          "]"}], "/.", 
         RowBox[{"t", "->", 
          RowBox[{
           RowBox[{"-", "dir"}], " ", "rz"}]}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"maxOrder", "+", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dir", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"CurrentMoment", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ax", ",", "ay", ",", "0"}], "}"}], ",", "dim"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"ax", ",", "0", ",", "maxOrder"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ay", ",", "0", ",", 
      RowBox[{"maxOrder", "-", "ax"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"dim", ",", "1", ",", "2"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ax", ",", "ay", ",", "0"}], "}"}], ",", "direction"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ax", ",", "ay", ",", "direction"}], "}"}]}], "]"}], ";"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ax", ",", "0", ",", "maxOrder"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ay", ",", "0", ",", 
        RowBox[{"maxOrder", "-", "ax"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"direction", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DumpSave", "[", 
     RowBox[{
      RowBox[{"dirName", "<>", "\"\<data/g-up-to-order-\>\"", "<>", 
       RowBox[{"ToString", "@", "maxOrder"}], "<>", "\"\<.mx\>\""}], ",", 
      "g"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8954119976792183`*^9, 3.895412114266631*^9}, {
   3.8954123567072983`*^9, 3.895412467746973*^9}, {3.895412532712007*^9, 
   3.895412534228692*^9}, {3.895412579053987*^9, 3.8954126388071833`*^9}, {
   3.895412678042005*^9, 3.895412847894438*^9}, {3.895412902641633*^9, 
   3.8954129112521048`*^9}, {3.895412955833856*^9, 3.8954129949775143`*^9}, {
   3.895413112028097*^9, 3.8954131880435047`*^9}, {3.895413240041317*^9, 
   3.895413240110908*^9}, {3.8954139784338408`*^9, 3.895413978514344*^9}, {
   3.895414361312785*^9, 3.895414362827806*^9}, {3.895414671588735*^9, 
   3.8954146716744747`*^9}, {3.895414911285056*^9, 3.8954149115941353`*^9}, {
   3.895415874509721*^9, 3.895415888695859*^9}, {3.895464543368121*^9, 
   3.895464557190534*^9}, {3.895466350234277*^9, 3.895466354953039*^9}, {
   3.8954670404003267`*^9, 3.895467068429077*^9}, 3.8954673346440983`*^9, 
   3.895467455642125*^9, 3.8954675122964563`*^9, {3.895467681793458*^9, 
   3.895467682067389*^9}, {3.895467917584579*^9, 3.89546792262615*^9}, {
   3.895551571251649*^9, 3.895551571869899*^9}, {3.895559513713397*^9, 
   3.895559571736042*^9}, {3.895560206273587*^9, 3.895560384180313*^9}, {
   3.895561137437896*^9, 3.895561138999639*^9}, {3.895561170939907*^9, 
   3.895561192628498*^9}, 3.895628916166914*^9, 3.8959973845898237`*^9, {
   3.896014953539823*^9, 3.896014953665546*^9}, {3.896146980230316*^9, 
   3.8961469804980583`*^9}, {3.8961470294583197`*^9, 3.896147029751204*^9}, 
   3.896149470597869*^9, {3.896642858965343*^9, 3.896642860161903*^9}, {
   3.897273665319078*^9, 3.897273666713008*^9}, {3.897780284504801*^9, 
   3.897780297008663*^9}, {3.897780327550128*^9, 3.897780329452758*^9}, 
   3.897780387026094*^9, {3.898138687437899*^9, 3.898138692736287*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"19f345e5-4f94-4349-98cf-03059ec09d2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"f", "=", 
  RowBox[{"D", "[", 
   RowBox[{"antiderivative", ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fFd", "=", 
   RowBox[{"FourierTransform", "[", 
    RowBox[{"f", ",", "t", ",", "\[Omega]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "@", "fFd"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", "4"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"\[Omega]", "^", "2"}]}]]}], "\[Equal]", 
    FractionBox["1", "4"]}], ",", "\[Omega]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"wavelength0", "=", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "2", "]"}]}]], "/", "2"}], "/", "\[Pi]"}], 
     ")"}]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.909205141330615*^9, 3.909205267053917*^9}, {
  3.909205302764263*^9, 3.909205413470462*^9}, {3.909205466179412*^9, 
  3.909205466563119*^9}, {3.909205750193739*^9, 3.909205803897767*^9}, {
  3.909205944440303*^9, 3.9092059498167963`*^9}, {3.909206413162325*^9, 
  3.9092064151628923`*^9}, {3.909211265068261*^9, 3.909211268488843*^9}},
 CellLabel->
  "In[646]:=",ExpressionUUID->"e9fd5abb-4c8c-40ea-a092-c743c0696a87"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   SuperscriptBox["t", "2"]}]]], "Output",
 CellChangeTimes->{{3.9092051499159822`*^9, 3.909205267667769*^9}, {
   3.909205325337973*^9, 3.909205414217832*^9}, 3.909205467018454*^9, {
   3.909205758245447*^9, 3.909205768684304*^9}, {3.909205799577529*^9, 
   3.909205804080151*^9}, 3.909205950344755*^9, 3.9092064159545183`*^9, 
   3.909211269938636*^9},
 CellLabel->
  "Out[646]=",ExpressionUUID->"029adde3-0692-481b-9075-34e584abd03f"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
         CapForm["Butt"], LineBox[CompressedData["
1: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
dGQ=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
dGQ=
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {All, All}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {All, All}, "Frame" -> {{True, True}, {True, True}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
dGQ=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {All, All}, "Frame" -> {{True, True}, {True, True}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {False, False}, "LabelStyle" -> {FontFamily -> "Times"}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9092051499159822`*^9, 3.909205267667769*^9}, {
   3.909205325337973*^9, 3.909205414217832*^9}, 3.909205467018454*^9, {
   3.909205758245447*^9, 3.909205768684304*^9}, {3.909205799577529*^9, 
   3.909205804080151*^9}, 3.909205950344755*^9, 3.9092064159545183`*^9, 
   3.909211269970708*^9},
 CellLabel->
  "Out[647]=",ExpressionUUID->"9a6c54a2-bc1e-4b9b-97c7-f7bc094ea443"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
         CapForm["Butt"], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 4}, {0., 0.7071067811865462}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
          "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.9, 0.36, 0.054], 
             CapForm["Butt"], 
             AbsoluteThickness[1.6]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 4}, {0., 0.7071067811865462}}, 
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
         "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
         GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.9, 0.36, 0.054], 
            CapForm["Butt"], 
            AbsoluteThickness[1.6]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV0mk4lgkXB3BbPNnuKDMvkZQlS0+aKbT530YopmasRcjWQpGoEY2kIstj
SfZ9jyT7rqgeTCTZIvt6D43inSyJeO/3w7nO9bvOl7PJ2F0xOsfFwcERS8f/
s/65qfb66euaLw75nE9OpcCjLeE6LG4Ck5DMniTaP6fEJpaIO6DGaJtyIu0J
SVlfD3kXWLXM2MTRNmjtKU4Sv4Zxm02eUbRlWVJZ69KeOPQo0D2c9qq+fYyt
/C1EW5r/HkT7470utm20Ly463ibu0j7lsPQsQvweLo6sF3rRZmtLVLxK9Ef4
Wu++q7RVdx4pnJcOhJSyUMJ52olcNrlyGcEIWUoat6DNGLuTbiYfihTpEOGT
tKtHOlpfmYTDLHBgK0nb9XcHfcvoB5g/Giqwl/bgnvvaIeKR2N0oE0HQjkz5
T73cmSgE+zAUv6dQ0CceH36eGI1TbmfSp2mXf36zf1Y6Dk61hofraF+2ti6+
bxsPO/MVyxzaO97OMrdnJEC5RsomnHZovuguQ/lkSCr2C1nR1pHKzJy+kILW
N96VWrRvNcZvemGSijMOOTpytPepqYSYR6ch0CWbbzqZQqrYb/5B4pkYkm9U
sqd9szWGbVadiQpPhY+atM38Rrh2nslCBEOdJU5bcOGqT01iNlalPW60JFG4
0RV5Y0Y6Fyyz7f/K0DZmDZZX1udC6W5M03wiBeZR+YV7to9xrO6TTyPtiZKK
q1IZebg9ZxR3nrbhwz6nk/JPMarWfCUugYKKwc5ciaan8KvksrKnzeC+/Dd1
oQBeWaa7VWifrVorqjMpxLfQSx7V8RTEFMOZp6OLMOqmW/w6joIvo0QhULwU
S6uVzcUxFJT0HgQUu5ZiYpNVtwPtDr8r0/1NpSjI6H8gRluWWyWP+UcZRCNS
trtHU2j8nsns6iiHoGFH9LYoet4v0fulWVWo3Sz9RS2CQtne69HHxquQ0GC1
o+sBBWtX46WrB6vhbOHC40q74BNRxZ6qhtNH/dGMcApGUwGHnXRqEXSJWl8J
pRA76KVdtvYc+UsbR52DKWhJmmcOmdZBYy+/7mIQ/a8W6hsY+XUoMRY66017
24ynff7uevC6uObfD6RwxVFNjmOgHp3q3M9Z9ymIOhTkZGm8RGrRyIvTdymc
Nk8rmPsvGwbxp1e/elKY7TfhT5dowC2vuZd2tP2tGeeMtRsQP/fMqeUGhRL7
KxLlkQ3gkjO1jvOgIOxyxO+meiMKq9d6FK5TaLjzwYLXuwmyBluVCFcKPz0R
4ZVkNKO1U3KZ7xyF18wGm1bVZgxMjYmddKBgU3Sj5pZ5M+Z5BH98aE8hpHzY
dfRxM/rEvjaK21GYqs/vzz7RAm05sxHxsxSSu48X7X34Bo9mHolOnqYgsO5r
qbetDZtXZfRzDOh9OZ6yVtFtg4WqkH+bPn2vLhUbEZc2LI0Kly0cp6CZ22Pf
/6wN8RGdM5rHKFTlRpdVMN8hzKC/kX2UwifjmVqDt+/wylBRK/kIBdOcmBZ3
oQ5QpWkagUwKcoafp14Fd0F6QH9VV4iChI/ewQtpXXAU2sy7RZDCpvzUYP6K
Lpx7uHFomJ/CN4Yx03CsC51ehsvuDArv6ivchzS6oRbHOx7CTcFL1Xft6yTt
uT+KApYn8ZbYsoVJ9qC3iqMyYWISHm8PIHb+A/QKbBe1KyYhzCybfM3ow02Z
lIbhsklkhqiyViT7oHtCLMardBLtvyp8sNbpQ5TTTa38okkot2xxl4vug+X1
8SreJ5MYbprNLlbvh/HeAxeCUieh9yJLuNVrABz9j5TfB0zix1KRIU7OYfhq
evgHm02ifEz7TdvhMajxfH/fNTCBl05JW81nJhA7/j7E1XQCC/JHiHznvyF3
e4vyjuZxcC3nbdoq9xFGbQEOevLjUFu3KTd+OgO5L8rpuXfG8ObevreNSrPI
PLGTnfRhFNLh/yznfp4DEbFVSkBiFP8sDQ91q/4LcX5bWTHbEWR+rGkWDv2C
nJXL65T8MISlHs1OTMyjwag7ay14ECzHsvOpsovQ031grLpxAItk3sRFnyUk
FDoXPnHow7Wf2KU/vPoKzeQ9Nu2DvRh+yg5ul/kGg4/mrU0He7Di1JWg6LWC
ry/GfJyyu6Gsxbd2vmYVznt/jrq9vwt66TIXin5cg+Ol2D/CCjvgIXV2x6jl
OtiFerusDduhMmMq0HOCgxTI6L0ctOEdNhNzDPY3DpLTuvSYvXkreOoSCnYm
cpJ/Ohd3fvnSjEv7aj5sNOAiJaQ/v7nj/RfyjtulPl/kIhUdpRRc1Rqx8I/E
Jiqam9TJNAlUUGejzFiPO/IoD2nt12N6TvUlfI75pZRSPGSfqFK7r3M9ZAb1
ezP8NpA6zNCUosxnOKh+L1L8J15yeOL2Esflalhua1vm7OQl3XxafmPmVGCh
OWTM1ZePVNi6uDlquhSxPNbXjGQZ5Lh6dX7Jw2JsHipL52IzSM7yvmln70Js
8PY1OXB1IymQlsbMGH0CjlzrgjFRfnLos+Zfhldy4RZfECL6kp8UGX+vVS2W
jWfKAQwRFwHyeNeODnJXBkT03VTuCAuSHWEO342rUjGw+12nZ60gmXXJOPkM
OxGFyZCdsBYif/5e6/Z0KhZWBWoiUmtC5Mrvv7zUDI/Cbb8034HHwmQt65pU
oE0E8qekEoR/JUi7KuHyhdAwBCT52QydJEiLA01q+p5hcDD6JPfUkCDTv3vk
5NmHQbK2tvDEKYL8U29EJ0ojDEFhZxpZdgQpqcJXwzUeiotqcf/l9yRIUqNG
XutgKHbc23KML5sgz3tFKsj8y8Kaxp9CPTkEubj94SDfEAsfPo13ZOcRpHCL
2Itvr1kIP1VipVtEkLxClV950llYVzJy96ul+3MzvPvYiIWB9rBk7k6CdOiV
79xXHoxK/yX7zm6CrNcxjelPD0bkobOKGb0E+UxAUSk0LBgGWczSX4YIkr1s
kPmDYzCqb7S+9p0myAalat1SyWBE794fZjhDkDV15EDlxmBcHUs0kZklyJbD
ZSKvF4Ow69fLw/XzdD1fVUewPQg8nF2Z4Ut0/62p6ngehJGyQ0423why9572
Yu+8INQ6ZexR/U6QAvtXCptigxAjLbCwvk6QMnssVKT8g/A/jFifVQ==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, 4}, {0., 0.7071067811865462}}, 
       "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {False, False}, 
       "LabelStyle" -> {FontFamily -> "Times"}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4}, {0., 0.7071067811865462}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9092051499159822`*^9, 3.909205267667769*^9}, {
   3.909205325337973*^9, 3.909205414217832*^9}, 3.909205467018454*^9, {
   3.909205758245447*^9, 3.909205768684304*^9}, {3.909205799577529*^9, 
   3.909205804080151*^9}, 3.909205950344755*^9, 3.9092064159545183`*^9, 
   3.909211270000379*^9},
 CellLabel->
  "Out[649]=",ExpressionUUID->"9ac80916-963c-4b6d-8b90-a3145f9bdb22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Omega]", "\[Rule]", 
    SqrtBox[
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "2", "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9092051499159822`*^9, 3.909205267667769*^9}, {
   3.909205325337973*^9, 3.909205414217832*^9}, 3.909205467018454*^9, {
   3.909205758245447*^9, 3.909205768684304*^9}, {3.909205799577529*^9, 
   3.909205804080151*^9}, 3.909205950344755*^9, 3.9092064159545183`*^9, 
   3.909211270048525*^9},
 CellLabel->
  "Out[650]=",ExpressionUUID->"be625758-5863-415d-8be9-e32f30f799d7"],

Cell[BoxData["5.336446256636997`"], "Output",
 CellChangeTimes->{{3.9092051499159822`*^9, 3.909205267667769*^9}, {
   3.909205325337973*^9, 3.909205414217832*^9}, 3.909205467018454*^9, {
   3.909205758245447*^9, 3.909205768684304*^9}, {3.909205799577529*^9, 
   3.909205804080151*^9}, 3.909205950344755*^9, 3.9092064159545183`*^9, 
   3.90921127004919*^9},
 CellLabel->
  "Out[651]=",ExpressionUUID->"6f595ec5-e580-4d0e-8497-ac4cc8c7d228"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Efield", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"knownOrder", "=", 
   RowBox[{"-", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.909047452655369*^9, 3.9090474568805037`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"7e76a07c-eae7-4e99-81cd-029481d36efd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"knownOrder", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Efield", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dirName", "<>", "\"\<data/field-v4-order-\>\"", "<>", 
     RowBox[{"ToString", "@", "knownOrder"}], "<>", "\"\<-a-\>\"", "<>", 
     RowBox[{"ToString", "@", "a"}], "<>", "\"\<.mx\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8943724722370453`*^9, 3.894372523936871*^9}, {
   3.894698319394462*^9, 3.8946983194246597`*^9}, 3.89494481036858*^9, 
   3.895137126307557*^9, {3.8954668845960617`*^9, 3.895466922773836*^9}, 
   3.8954671754040203`*^9, {3.895997469188369*^9, 3.895997469252801*^9}, {
   3.896147003584284*^9, 3.896147004346706*^9}, {3.8970458058970547`*^9, 
   3.8970458276887093`*^9}, {3.8972738782048187`*^9, 3.897273882010964*^9}, 
   3.897697372377158*^9, {3.897697423018396*^9, 3.897697423272101*^9}, {
   3.8976977670344067`*^9, 3.897697767141768*^9}, {3.897780346881998*^9, 
   3.897780350803442*^9}, {3.89813870940691*^9, 3.8981387174795113`*^9}, {
   3.89821552155562*^9, 3.898215534146419*^9}, {3.898299445089457*^9, 
   3.898299470232307*^9}, {3.909047686505334*^9, 3.909047686591065*^9}, {
   3.909115730691063*^9, 3.909115733691074*^9}, {3.909128812380529*^9, 
   3.909128812432085*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"e2e12163-f3b1-429c-b7f0-5d97e07fa9e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Efield", "+=", 
           RowBox[{"#1", "+", "#2"}]}], "&"}], "@@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Total", "@", 
                RowBox[{"MapIndexed", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"expr", ",", "index"}], "}"}], "\[Function]", 
                   RowBox[{"expr", " ", 
                    RowBox[{
                    RowBox[{"derivatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ",", 
                    "direction"}], "}"}], "]"}], "/", 
                    RowBox[{
                    RowBox[{"(", "\[ImaginaryI]", ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}]}]}]}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"CoefficientList", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"ElectricField", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ax", ",", 
                    RowBox[{"order", "-", "ax"}], ",", "0"}], "}"}], ",", 
                    "CurrentMoment", ",", "dim", ",", "direction"}], "]"}], "/.", 
                    RowBox[{"z", "->", "0"}]}], ",", "\[Omega]"}], "]"}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"ax", ",", "0", ",", "order"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"dim", ",", "1", ",", "2"}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"direction", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Efield", "=", 
         RowBox[{"Expand", "@", "Efield"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dirName", "<>", "\"\<data/field-v4-order-\>\"", "<>", 
           RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
           RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<.mx\>\""}], ",", 
          "\[IndentingNewLine]", "Efield"}], "\[IndentingNewLine]", "]"}]}], 
       ",", "\[IndentingNewLine]", "order"}], "]"}], "//", "AbsoluteTiming"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"order", ",", 
      RowBox[{"knownOrder", "+", "1"}], ",", "10"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.892538224009582*^9, 3.8925382258094473`*^9}, {
   3.89253832004215*^9, 3.892538456053114*^9}, {3.8925385150067263`*^9, 
   3.892538519731267*^9}, {3.892540450868943*^9, 3.892540451318787*^9}, {
   3.892541783107994*^9, 3.8925417832777348`*^9}, {3.8925524725466623`*^9, 
   3.8925524726801863`*^9}, {3.8925527344002237`*^9, 3.892552736471312*^9}, 
   3.892552923653735*^9, {3.892552958962668*^9, 3.892552974231114*^9}, 
   3.8925530193949842`*^9, 3.892553072832*^9, {3.8925532890493593`*^9, 
   3.8925532909193487`*^9}, {3.892603750311022*^9, 3.892603770631502*^9}, {
   3.8926040658573637`*^9, 3.892604065943966*^9}, {3.892604316394307*^9, 
   3.892604330132519*^9}, {3.892604446580863*^9, 3.892604469428582*^9}, 
   3.892604600279716*^9, {3.892604726459343*^9, 3.8926047281907673`*^9}, 
   3.892605444503746*^9, 3.892605752914188*^9, 3.8926058395684853`*^9, {
   3.892605913930201*^9, 3.892605917698348*^9}, 3.892605962699736*^9, {
   3.8926060061804743`*^9, 3.892606006324168*^9}, {3.8926060429474154`*^9, 
   3.892606043148181*^9}, {3.8926062858441467`*^9, 3.892606291729105*^9}, {
   3.892606395160224*^9, 3.8926064128878527`*^9}, {3.89260645984732*^9, 
   3.892606475923277*^9}, {3.892607309424011*^9, 3.89260731815324*^9}, {
   3.892617560628586*^9, 3.892617560669958*^9}, {3.892617627970252*^9, 
   3.8926176281936398`*^9}, {3.892617661089631*^9, 3.892617687006097*^9}, {
   3.892617769134327*^9, 3.8926180495933847`*^9}, {3.8926180811373463`*^9, 
   3.892618148232688*^9}, {3.892618185595146*^9, 3.892618186772537*^9}, {
   3.89261822312103*^9, 3.892618247274444*^9}, {3.892618296046979*^9, 
   3.892618333134367*^9}, {3.8926186348744164`*^9, 3.892618657328925*^9}, {
   3.89261871519632*^9, 3.892618715706229*^9}, {3.8926189623411818`*^9, 
   3.892618962383462*^9}, {3.8926191970138474`*^9, 3.892619270349811*^9}, {
   3.892619365580303*^9, 3.8926193681694193`*^9}, {3.892619437177696*^9, 
   3.8926194834476347`*^9}, 3.892619553119897*^9, {3.8926196357724648`*^9, 
   3.892619636254386*^9}, {3.8926200402615347`*^9, 3.892620040574872*^9}, {
   3.892707977984893*^9, 3.8927079780877647`*^9}, {3.892712678418941*^9, 
   3.892712682906032*^9}, {3.892712818348605*^9, 3.892712821262669*^9}, {
   3.892712872384512*^9, 3.892712889617763*^9}, {3.8927161556546097`*^9, 
   3.892716158569209*^9}, {3.892719214170816*^9, 3.892719214958564*^9}, {
   3.892720531650832*^9, 3.892720550303464*^9}, {3.89272058486255*^9, 
   3.8927206372553577`*^9}, {3.892720686113537*^9, 3.89272068625802*^9}, {
   3.892720754469554*^9, 3.892720758069549*^9}, {3.8927208036563597`*^9, 
   3.892720803710353*^9}, 3.892721036556694*^9, {3.892723473610033*^9, 
   3.8927234737548943`*^9}, {3.892723766258007*^9, 3.892723773156846*^9}, 
   3.892779061109892*^9, {3.892780740234934*^9, 3.892780757639806*^9}, {
   3.8927809582578793`*^9, 3.892781297486781*^9}, {3.892781524197321*^9, 
   3.8927815531956263`*^9}, {3.89278211670601*^9, 3.8927821168510237`*^9}, 
   3.892782246756654*^9, 3.892782539255941*^9, 3.892783153395791*^9, 
   3.8927832276338*^9, {3.892784120846353*^9, 3.8927841768937483`*^9}, {
   3.892784265546794*^9, 3.89278427057286*^9}, {3.892784350236319*^9, 
   3.8927843613503227`*^9}, {3.892784485945621*^9, 3.892784493762953*^9}, {
   3.892785641780678*^9, 3.892785641914227*^9}, {3.89278595781699*^9, 
   3.892785959663721*^9}, {3.892792248950199*^9, 3.89279226341772*^9}, {
   3.892792533124806*^9, 3.89279253339639*^9}, 3.89279263391326*^9, {
   3.892792689252244*^9, 3.892792689869981*^9}, {3.8927929893316507`*^9, 
   3.8927930012365913`*^9}, {3.89279309069759*^9, 3.892793140667281*^9}, {
   3.8927932609496727`*^9, 3.8927932636523438`*^9}, {3.892793436764765*^9, 
   3.892793437529502*^9}, {3.892793521971118*^9, 3.8927935275703583`*^9}, {
   3.892793617166614*^9, 3.892793730049912*^9}, {3.892793865567717*^9, 
   3.892793905299879*^9}, {3.892802412869362*^9, 3.892802418987458*^9}, {
   3.892805553108348*^9, 3.892805556706768*^9}, {3.8928774362762012`*^9, 
   3.8928774364568977`*^9}, {3.892879170984365*^9, 3.892879185888679*^9}, 
   3.8928792874368877`*^9, {3.8928880042641907`*^9, 3.892888009526458*^9}, {
   3.892888767603417*^9, 3.892888786964229*^9}, 3.892888853875806*^9, {
   3.8929100903779984`*^9, 3.892910094875915*^9}, {3.892910312011155*^9, 
   3.892910337521492*^9}, 3.892910437282675*^9, 3.892910495095172*^9, {
   3.892911516185293*^9, 3.892911522169777*^9}, {3.8929117520918903`*^9, 
   3.892911752626068*^9}, {3.8929119575296392`*^9, 3.8929119621967382`*^9}, {
   3.892911994781739*^9, 3.892912011159914*^9}, {3.892912043789198*^9, 
   3.892912151032444*^9}, {3.892982299861649*^9, 3.8929823244528303`*^9}, {
   3.892982657156466*^9, 3.89298265778376*^9}, {3.892983108808321*^9, 
   3.892983108868836*^9}, {3.892983321793673*^9, 3.892983321987191*^9}, {
   3.892983394947412*^9, 3.892983401423077*^9}, {3.8929836152063503`*^9, 
   3.8929836238069*^9}, {3.893043847053309*^9, 3.893043855674238*^9}, {
   3.893044375323065*^9, 3.893044379063088*^9}, {3.8930444845942173`*^9, 
   3.89304448540469*^9}, {3.8930445301628723`*^9, 3.893044538594592*^9}, {
   3.8930468553259783`*^9, 3.8930468795223618`*^9}, {3.893046913451535*^9, 
   3.893046947056046*^9}, {3.893129833793089*^9, 3.893129858635763*^9}, {
   3.893130005425345*^9, 3.893130095984477*^9}, 3.893130144134686*^9, {
   3.893130204347883*^9, 3.893130204593288*^9}, {3.893130236497199*^9, 
   3.893130282354719*^9}, {3.893130357969054*^9, 3.89313044350975*^9}, 
   3.8931307705360107`*^9, {3.8931310709784937`*^9, 3.893131088645358*^9}, {
   3.893131238527268*^9, 3.893131281466239*^9}, {3.8931315868807783`*^9, 
   3.8931315885325537`*^9}, {3.893131620503621*^9, 3.89313162818861*^9}, {
   3.893131683529561*^9, 3.893131683561406*^9}, {3.893137019310405*^9, 
   3.893137074199068*^9}, {3.893137241746264*^9, 3.8931372650345*^9}, {
   3.893137600848297*^9, 3.893137600865931*^9}, {3.893137700186081*^9, 
   3.8931377002063637`*^9}, {3.8931378552801*^9, 3.893137855297185*^9}, {
   3.893208402057617*^9, 3.893208404392724*^9}, {3.893208511810623*^9, 
   3.8932085120582657`*^9}, {3.893211232024622*^9, 3.893211232946471*^9}, {
   3.893239342660228*^9, 3.893239342930233*^9}, {3.8932394672674313`*^9, 
   3.8932395146527433`*^9}, {3.893239574954084*^9, 3.8932396077485123`*^9}, {
   3.893239639438609*^9, 3.893239648662456*^9}, {3.893563309816557*^9, 
   3.8935633119812603`*^9}, {3.893654309769744*^9, 3.893654322163591*^9}, {
   3.893654528631596*^9, 3.893654528791151*^9}, {3.893654692172477*^9, 
   3.8936546937112703`*^9}, {3.89365480900747*^9, 3.893654810662842*^9}, {
   3.893654926597988*^9, 3.893654926732338*^9}, {3.893747374917153*^9, 
   3.8937474198024178`*^9}, {3.894093404696438*^9, 3.894093416495549*^9}, 
   3.8940938825704403`*^9, {3.894095405959682*^9, 3.894095407961648*^9}, {
   3.8940961714593554`*^9, 3.894096173168137*^9}, {3.894096289720291*^9, 
   3.8940964082957077`*^9}, {3.8940966559438353`*^9, 3.894096666707719*^9}, {
   3.894105762126824*^9, 3.894105764442984*^9}, {3.8941792196204567`*^9, 
   3.894179259066326*^9}, 3.894179349065802*^9, {3.894179379293408*^9, 
   3.894179380260976*^9}, {3.8941794327520933`*^9, 3.894179433637044*^9}, {
   3.894179471999069*^9, 3.894179572635507*^9}, {3.8941796376821117`*^9, 
   3.894179645786635*^9}, {3.8941797852338448`*^9, 3.8941797899577713`*^9}, {
   3.894179848313422*^9, 3.894179899547011*^9}, {3.894180252417457*^9, 
   3.894180253708304*^9}, {3.894180285182794*^9, 3.89418036815329*^9}, {
   3.894188359545746*^9, 3.894188373143635*^9}, {3.894188475755658*^9, 
   3.894188496171756*^9}, {3.894188535613408*^9, 3.894188639589753*^9}, {
   3.894188673786952*^9, 3.8941887075290213`*^9}, {3.894188742291432*^9, 
   3.894188788731924*^9}, {3.894188859387744*^9, 3.894188894654887*^9}, {
   3.894189136181731*^9, 3.8941891443873568`*^9}, {3.894189178706498*^9, 
   3.894189219856679*^9}, {3.894189276203351*^9, 3.8941893169174128`*^9}, {
   3.894189347859345*^9, 3.894189359238615*^9}, {3.894189406269858*^9, 
   3.8941894185814867`*^9}, {3.894189571905876*^9, 3.894189573184181*^9}, {
   3.8941898653201933`*^9, 3.8941898964035*^9}, {3.8943724659264603`*^9, 
   3.8943724676773043`*^9}, {3.894372537443802*^9, 3.894372537631318*^9}, {
   3.8946983751752567`*^9, 3.8946983753552933`*^9}, {3.8949448171172543`*^9, 
   3.894944817294969*^9}, {3.895118697869155*^9, 3.895118700872761*^9}, {
   3.895137146084993*^9, 3.8951371548958282`*^9}, {3.895413778983522*^9, 
   3.8954138147914553`*^9}, {3.895413861164769*^9, 3.895413884955118*^9}, {
   3.8954139480801163`*^9, 3.895413949812516*^9}, {3.895414025477386*^9, 
   3.895414028863625*^9}, {3.895414402589278*^9, 3.89541440262656*^9}, {
   3.8954145547144413`*^9, 3.8954145576344213`*^9}, 3.895414598548168*^9, {
   3.8954146968191338`*^9, 3.8954147017303963`*^9}, {3.8954148874618387`*^9, 
   3.895414992410932*^9}, 3.895415632899309*^9, {3.895464811912208*^9, 
   3.8954648343201427`*^9}, {3.895464867401599*^9, 3.8954649280925827`*^9}, {
   3.895465084652008*^9, 3.895465087477201*^9}, {3.895465204477717*^9, 
   3.895465204719924*^9}, {3.8954653178457117`*^9, 3.895465318840554*^9}, {
   3.895465626320505*^9, 3.895465648467092*^9}, {3.895466638348844*^9, 
   3.895466648477873*^9}, {3.895466750876073*^9, 3.89546682915446*^9}, {
   3.895466873458914*^9, 3.895466875089394*^9}, 3.89546716307003*^9, {
   3.8956295506113*^9, 3.895629552455351*^9}, {3.895997395561016*^9, 
   3.8959974062807217`*^9}, {3.895997488225721*^9, 3.895997488256343*^9}, {
   3.896014764275816*^9, 3.8960148307794247`*^9}, {3.8960149126840057`*^9, 
   3.8960149318318663`*^9}, {3.896014983507695*^9, 3.8960149894608107`*^9}, {
   3.896015045027116*^9, 3.896015046351842*^9}, {3.896015103680423*^9, 
   3.896015119608197*^9}, 3.896015154770358*^9, {3.89601524710236*^9, 
   3.8960152547956877`*^9}, {3.8961470105819798`*^9, 3.896147017560327*^9}, {
   3.897045831784566*^9, 3.89704583364327*^9}, 3.8976974288869123`*^9, {
   3.8976976007283087`*^9, 3.897697601343182*^9}, {3.897780341163422*^9, 
   3.89778034223671*^9}, {3.897780418006892*^9, 3.8977804225674257`*^9}, {
   3.897780453047201*^9, 3.8977804548031387`*^9}, {3.897780501018703*^9, 
   3.8977805136655607`*^9}, {3.898138722959043*^9, 3.898138727372699*^9}, {
   3.909047495712594*^9, 3.9090474957709503`*^9}, {3.909047704332567*^9, 
   3.9090477045184307`*^9}, {3.9090561263501997`*^9, 3.909056127362759*^9}, {
   3.909115758752419*^9, 3.909115758840784*^9}, {3.909128819453062*^9, 
   3.909128819525824*^9}, 3.90920298357071*^9},
 CellLabel->
  "In[365]:=",ExpressionUUID->"0d5171ea-b44a-4d7b-819a-6c63ab5bfb54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.009858`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-0-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.023718`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-1-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.019266`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-2-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.030838`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-3-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.061691`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-4-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.104893`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-5-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.180452`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-6-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.284822`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-7-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.435579`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-8-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.638888`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-9-a-1.mx\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.928804`", 
     ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/field-v4-order-10-a-1.mx\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.898238771730898*^9, 3.909047560118246*^9, 
  3.9090481882509317`*^9, 3.9090512563579597`*^9, 3.909058700047243*^9, 
  3.909115751658959*^9, 3.90912276424113*^9, 3.909153534884533*^9, 
  3.9092029869273252`*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"adab92be-dcca-4f26-bc8e-5fb76d78788c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Efield", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"NotebookDirectory", "[", "]"}]}], "<>", 
         "\"\<data/field-v4-order-\>\"", "<>", 
         RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
         RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<.mx\>\""}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Efield", "^", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotLimitX", "=", 
       RowBox[{
        RowBox[{"a", "/", "10"}], " ", "5"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotLimitY", "=", "plotLimitX"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"2", "a", " ", 
         RowBox[{"50", "/", "171"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nPointsX", "=", "31"}], ";", 
      RowBox[{"nPointsY", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"nPointsX", " ", 
         RowBox[{"plotLimitY", "/", "plotLimitX"}]}], "]"}]}], ";", 
      RowBox[{"xd", "=", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"-", "plotLimitX"}], ",", "plotLimitX", ",", "nPointsX"}], 
        "]"}]}], ";", 
      RowBox[{"yd", "=", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"-", "plotLimitY"}], ",", "plotLimitY", ",", "nPointsY"}], 
        "]"}]}], ";", 
      RowBox[{"normd", "=", 
       RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"norm", "/.", 
             RowBox[{"x", "->", 
              RowBox[{"xd", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], "/.", 
            RowBox[{"y", "->", 
             RowBox[{"yd", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}], ",", "50"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "xd"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "@", "yd"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"NotebookDirectory", "[", "]"}]}], "<>", 
         "\"\<data/v4-order-\>\"", "<>", 
         RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
         RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<.mx\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<x\>\"", "->", "xd"}], ",", 
          RowBox[{"\"\<y\>\"", "->", "yd"}], ",", 
          RowBox[{"\"\<discrete norm\>\"", "->", "normd"}]}], "|>"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", "order"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"order", ",", "0", ",", "20", ",", "10"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.909047564424865*^9, 3.909047565186246*^9}, {
   3.9090477125361557`*^9, 3.9090477155147047`*^9}, 3.909050705025606*^9, {
   3.9090560349793873`*^9, 3.909056043977831*^9}, {3.9090561307152033`*^9, 
   3.909056139679047*^9}, {3.909114320472659*^9, 3.909114332305781*^9}, {
   3.909115763015773*^9, 3.909115763893429*^9}, {3.909128822833127*^9, 
   3.909128824353001*^9}, {3.9092026948024817`*^9, 3.9092027145895643`*^9}, 
   3.909202911538443*^9, 3.909202973613418*^9, 3.909203111597476*^9},
 CellLabel->
  "In[395]:=",ExpressionUUID->"ee29b4b0-6e3d-4ce5-b399-d2b04f7d33db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/v4-order-0-a-5.mx\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/v4-order-10-a-5.mx\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/v4-order-20-a-5.mx\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9090476657407007`*^9, 3.909048542546755*^9, 3.90905166116658*^9, 
   3.909059083038859*^9, 3.90911472266225*^9, 3.9091232965519953`*^9, 
   3.9091547850909433`*^9, 3.90920274604655*^9, {3.90920294618887*^9, 
   3.9092029916447573`*^9}, 3.909203146335204*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"3845fd51-700f-47d9-89c6-add641fcc63f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"imported", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"imported", "=", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"ToString", "@", 
            RowBox[{"NotebookDirectory", "[", "]"}]}], "<>", 
           "\"\<data/v4-order-\>\"", "<>", 
           RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
           RowBox[{"ToString", "@", "a"}], "<>", "\"\<.mx\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"x", "=", 
         RowBox[{"imported", "[", "\"\<x\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{"imported", "[", "\"\<y\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"imported", "[", "\"\<discrete norm\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plot", "=", 
         RowBox[{"ListContourPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "/", "wavelength0"}], ",", 
                 
                 RowBox[{
                  RowBox[{"y", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "/", "wavelength0"}], ",", 
                 
                 RowBox[{
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "/", 
                  "wavelength0"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "@", "x"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", 
                 RowBox[{"Length", "@", "y"}]}], "}"}]}], "]"}], ",", "1"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "\[Rule]", "order"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AspectRatio", "->", 
            RowBox[{
             RowBox[{"Max", "@", "y"}], "/", 
             RowBox[{"Max", "@", "x"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Blend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"White", ",", "Red"}], "}"}], ",", "#1"}], "]"}], 
              "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Contours", "\[Rule]", "15"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"dirName", "<>", "\"\<data/plot-v4-order-\>\"", "<>", 
           RowBox[{"ToString", "@", "order"}], "<>", "\"\<-a-\>\"", "<>", 
           RowBox[{"ToString", "@", "a"}], "<>", "\"\<.pdf\>\""}], ",", 
          "plot"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "order"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"order", ",", "0", ",", "60", ",", "10"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.892618341465056*^9, 3.8926184158877153`*^9}, {
   3.892618471813704*^9, 3.892618605227047*^9}, {3.892618664772272*^9, 
   3.892618665223333*^9}, {3.892618725386958*^9, 3.892618725838072*^9}, {
   3.8926187576508713`*^9, 3.8926188258519697`*^9}, {3.892618901902936*^9, 
   3.892618928066886*^9}, {3.8926189649205017`*^9, 3.892618979918035*^9}, {
   3.892619036832906*^9, 3.892619133468906*^9}, {3.892619171427433*^9, 
   3.892619183890486*^9}, {3.8926195114268436`*^9, 3.8926195970107*^9}, 
   3.892620077720532*^9, {3.8926201465491867`*^9, 3.892620223734942*^9}, {
   3.892620459453905*^9, 3.89262054056393*^9}, {3.8926205722971888`*^9, 
   3.8926206065182877`*^9}, {3.892621006659278*^9, 3.892621060431822*^9}, {
   3.892623904453383*^9, 3.8926239045660057`*^9}, {3.892624831881329*^9, 
   3.892624831961775*^9}, {3.892624909493017*^9, 3.892624910415946*^9}, {
   3.892626402310481*^9, 3.892626403175419*^9}, {3.892629289091353*^9, 
   3.892629289315699*^9}, {3.8926354262894087`*^9, 3.8926354391359053`*^9}, 
   3.8926359539243917`*^9, {3.892692356923698*^9, 3.892692357080125*^9}, {
   3.8926968981129227`*^9, 3.89269690671439*^9}, 3.8927094521626673`*^9, {
   3.892709793337036*^9, 3.89270979339018*^9}, {3.8927119953114443`*^9, 
   3.89271199544427*^9}, {3.892712913142624*^9, 3.8927129200146017`*^9}, 
   3.892713863544137*^9, {3.892717289891239*^9, 3.892717304987306*^9}, {
   3.892717393538748*^9, 3.8927173962934647`*^9}, 3.8927175378463707`*^9, 
   3.892717819864263*^9, 3.892717942352765*^9, {3.892718124123374*^9, 
   3.8927181241703873`*^9}, {3.892718499845929*^9, 3.892718517732086*^9}, {
   3.892718667112797*^9, 3.89271866719079*^9}, {3.89271873213979*^9, 
   3.892718733206788*^9}, {3.892720274313048*^9, 3.8927202790940933`*^9}, 
   3.892720392822631*^9, {3.892723417870227*^9, 3.8927234212524633`*^9}, {
   3.892779333726963*^9, 3.8927793464731503`*^9}, {3.892779451797029*^9, 
   3.892779452346609*^9}, {3.8927924760182457`*^9, 3.892792480450633*^9}, {
   3.892792628274556*^9, 3.89279262901764*^9}, {3.8927927177361526`*^9, 
   3.8927927210880136`*^9}, {3.8927941452962017`*^9, 
   3.8927941466697903`*^9}, {3.892794543515168*^9, 3.8927945448756647`*^9}, {
   3.892796114342414*^9, 3.8927961143860273`*^9}, 3.8928022233261137`*^9, {
   3.892802333825676*^9, 3.892802361329446*^9}, {3.892805447276819*^9, 
   3.8928054656611423`*^9}, {3.892879164808728*^9, 3.892879165349148*^9}, {
   3.892888478293898*^9, 3.8928884801771307`*^9}, {3.8928891521112556`*^9, 
   3.8928891567786903`*^9}, {3.892889444671486*^9, 3.892889446693924*^9}, {
   3.892889570561211*^9, 3.892889571460594*^9}, {3.89288960878962*^9, 
   3.892889608823043*^9}, {3.892889691859499*^9, 3.892889691913916*^9}, {
   3.892890310107851*^9, 3.89289035359871*^9}, {3.892890538127743*^9, 
   3.892890541603697*^9}, {3.892890579598731*^9, 3.892890625755178*^9}, {
   3.892891003632698*^9, 3.892891009560329*^9}, {3.8928934460517797`*^9, 
   3.892893625977*^9}, {3.892893697475669*^9, 3.892893771000532*^9}, {
   3.892893858664757*^9, 3.8928938623772593`*^9}, {3.892894240052145*^9, 
   3.892894241434395*^9}, 3.892895298057357*^9, {3.8929093640958138`*^9, 
   3.8929093663459253`*^9}, {3.89291234851167*^9, 3.892912353669351*^9}, {
   3.8929125808940573`*^9, 3.892912581886669*^9}, 3.892913664310774*^9, {
   3.892958194508485*^9, 3.892958194596324*^9}, {3.8929588471348553`*^9, 
   3.892958863532649*^9}, {3.892959094581416*^9, 3.892959096055558*^9}, {
   3.892982280977005*^9, 3.892982282858663*^9}, {3.893044008148817*^9, 
   3.893044042439872*^9}, {3.8930443475316467`*^9, 3.893044369429791*^9}, {
   3.893046826116145*^9, 3.893046828620647*^9}, {3.893130456662717*^9, 
   3.89313045755021*^9}, {3.893139075633478*^9, 3.8931390860395412`*^9}, {
   3.893139191451524*^9, 3.89313919384864*^9}, {3.8931401102306843`*^9, 
   3.893140159528183*^9}, {3.893140360918542*^9, 3.893140376091648*^9}, {
   3.8931510843132668`*^9, 3.8931510858377237`*^9}, {3.8931522446952477`*^9, 
   3.893152246197844*^9}, {3.8931563305037727`*^9, 3.8931563343377733`*^9}, {
   3.8932099590079317`*^9, 3.893209980236333*^9}, {3.89324220962376*^9, 
   3.893242232124116*^9}, {3.893242442680016*^9, 3.893242443849511*^9}, {
   3.893243979992787*^9, 3.8932439801388283`*^9}, {3.8933046168027077`*^9, 
   3.893304619512986*^9}, {3.893306279254785*^9, 3.893306279322093*^9}, 
   3.893306364802322*^9, {3.89338845802188*^9, 3.893388522439012*^9}, {
   3.8933889183608418`*^9, 3.8933889196448317`*^9}, {3.893391684832127*^9, 
   3.8933917069582148`*^9}, {3.893392448561777*^9, 3.893392448717334*^9}, 
   3.8934034196755867`*^9, {3.893403688664736*^9, 3.8934036984623623`*^9}, {
   3.893404102556718*^9, 3.893404106354892*^9}, {3.893404246601674*^9, 
   3.8934042472989197`*^9}, {3.89340438810565*^9, 3.893404402415099*^9}, {
   3.893417345630279*^9, 3.893417352650673*^9}, {3.8934177247970963`*^9, 
   3.893417725449813*^9}, 3.89341776102663*^9, {3.89346914767456*^9, 
   3.893469147948419*^9}, {3.893484651331553*^9, 3.8934846514596024`*^9}, {
   3.893515881961274*^9, 3.893515882085724*^9}, {3.893555989678047*^9, 
   3.893555990094245*^9}, {3.893644534168435*^9, 3.893644534485997*^9}, 
   3.8936543842498827`*^9, {3.893654419989544*^9, 3.89365442027223*^9}, {
   3.893654565544928*^9, 3.893654569510971*^9}, {3.893654642368733*^9, 
   3.893654642531164*^9}, {3.893654789389481*^9, 3.893654798223648*^9}, {
   3.893654834622409*^9, 3.893654834769679*^9}, {3.8936549393331947`*^9, 
   3.893654944860265*^9}, {3.893734203627833*^9, 3.8937342037774477`*^9}, {
   3.894093495653111*^9, 3.8940935105024767`*^9}, {3.894093908512624*^9, 
   3.894093916667006*^9}, {3.894095239268237*^9, 3.8940952412032537`*^9}, {
   3.894179604815546*^9, 3.8941796276813993`*^9}, {3.894179684120859*^9, 
   3.894179703103363*^9}, {3.894179990345315*^9, 3.89417999069291*^9}, {
   3.894180275763051*^9, 3.894180277970387*^9}, {3.894189393987368*^9, 
   3.894189395211512*^9}, {3.894379773173555*^9, 3.8943797734569187`*^9}, {
   3.8943798400878487`*^9, 3.894379840301169*^9}, {3.8945104940195436`*^9, 
   3.894510495951283*^9}, {3.894521682904402*^9, 3.8945216845787086`*^9}, {
   3.894613818254665*^9, 3.894613821582696*^9}, {3.894693040553505*^9, 
   3.8946930846522818`*^9}, {3.894697702734737*^9, 3.894697704329954*^9}, {
   3.894704162247363*^9, 3.894704407281167*^9}, {3.894704448839838*^9, 
   3.894704534044654*^9}, {3.8947045713416033`*^9, 3.894704573095161*^9}, {
   3.89470461168255*^9, 3.894704655310755*^9}, {3.8947046936962633`*^9, 
   3.894704743331105*^9}, {3.8947048527720947`*^9, 3.894704945560277*^9}, {
   3.894704975734783*^9, 3.894705036351001*^9}, {3.894707588343643*^9, 
   3.8947076202226133`*^9}, {3.894947989041004*^9, 3.8949479937460318`*^9}, {
   3.894955554222252*^9, 3.8949556505162697`*^9}, {3.894955786145961*^9, 
   3.894955791365713*^9}, {3.894962175558201*^9, 3.8949623249018307`*^9}, {
   3.894968014257279*^9, 3.894968112918522*^9}, {3.895134647928751*^9, 
   3.895134651321505*^9}, {3.895134683946611*^9, 3.895134684441773*^9}, {
   3.895135158606455*^9, 3.89513520217866*^9}, {3.895135236634576*^9, 
   3.895135246715201*^9}, {3.895135307803032*^9, 3.8951353685078697`*^9}, {
   3.8951354107399673`*^9, 3.8951354684081*^9}, {3.895135530465576*^9, 
   3.895135552445189*^9}, {3.895135589324923*^9, 3.895135646471875*^9}, {
   3.895135923941635*^9, 3.895135968412393*^9}, {3.895136006157093*^9, 
   3.895136158740354*^9}, {3.895136398896204*^9, 3.895136398936442*^9}, {
   3.895136770448908*^9, 3.895136822625205*^9}, {3.895136919184548*^9, 
   3.8951369697971363`*^9}, {3.895137220471128*^9, 3.895137274517623*^9}, 
   3.895138950301*^9, {3.8951390140391493`*^9, 3.8951390502194*^9}, 
   3.895139080864933*^9, {3.895139127822165*^9, 3.895139168322157*^9}, {
   3.8951392049260807`*^9, 3.89513934816494*^9}, {3.895139412425527*^9, 
   3.895139420109324*^9}, {3.8951396794552383`*^9, 3.89513968917522*^9}, {
   3.895139723982843*^9, 3.895139725928928*^9}, {3.895139852223249*^9, 
   3.8951400800114117`*^9}, {3.895140173669313*^9, 3.8951402136509113`*^9}, {
   3.895140249291707*^9, 3.8951402789923773`*^9}, {3.895201786043973*^9, 
   3.895201787358708*^9}, {3.895400225761011*^9, 3.8954002284930477`*^9}, {
   3.8954108537186203`*^9, 3.8954108565864763`*^9}, {3.895410922431966*^9, 
   3.895411026987113*^9}, {3.895414506976482*^9, 3.89541454834208*^9}, {
   3.895414617817554*^9, 3.8954146278844976`*^9}, {3.895465606630259*^9, 
   3.895465607331668*^9}, {3.895467275833148*^9, 3.895467288223483*^9}, {
   3.89614766422917*^9, 3.896147665526792*^9}, {3.896149421682603*^9, 
   3.8961494218983793`*^9}, {3.896149540218688*^9, 3.8961495897138*^9}, 
   3.896149622315695*^9, {3.8961507799016867`*^9, 3.896150779944441*^9}, {
   3.8961586415689573`*^9, 3.896158646071303*^9}, {3.8961730075225697`*^9, 
   3.896173007558569*^9}, {3.896284133537023*^9, 3.896284134013144*^9}, {
   3.8963246920839777`*^9, 3.896324692549015*^9}, {3.896375475853154*^9, 
   3.896375476619587*^9}, {3.89650823631094*^9, 3.8965082367051973`*^9}, {
   3.896634782150486*^9, 3.896634823377825*^9}, 3.896642958113261*^9, {
   3.896672988335416*^9, 3.8966729904223127`*^9}, {3.8970321304381723`*^9, 
   3.8970321559860153`*^9}, {3.897273637867084*^9, 3.897273637878984*^9}, {
   3.8972737139289293`*^9, 3.897273714534342*^9}, {3.8973548791777477`*^9, 
   3.897354885346117*^9}, {3.9090475796930447`*^9, 3.909047591366055*^9}, {
   3.909047674842136*^9, 3.909047675686962*^9}, 3.909047720428092*^9, {
   3.9090559692620573`*^9, 3.90905598377641*^9}, {3.9090561448220177`*^9, 
   3.9090561448796577`*^9}, {3.909115766976009*^9, 3.909115768485857*^9}, 
   3.909128767727873*^9, {3.90912882784857*^9, 3.909128828777913*^9}, {
   3.909202722416938*^9, 3.9092027255211277`*^9}, {3.909202994160598*^9, 
   3.909202994241186*^9}, {3.909203059649748*^9, 3.909203060569757*^9}, 
   3.909203119605755*^9, 3.909203177174659*^9, {3.909203599117166*^9, 
   3.909203599169251*^9}, {3.90920441367879*^9, 3.909204481697332*^9}, {
   3.9092045205807457`*^9, 3.909204540771912*^9}, {3.9092064049653997`*^9, 
   3.909206435551798*^9}},
 CellLabel->
  "In[732]:=",ExpressionUUID->"57a71c0f-bed2-4ba7-835f-435317dcf938"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-0-a-10.pdf\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-10-a-10.pdf\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-20-a-10.pdf\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-30-a-10.pdf\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-40-a-10.pdf\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-50-a-10.pdf\"\>", 
   ",", "\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/pynoza/\
funknoza/data/plot-v4-order-60-a-10.pdf\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.895467476499954*^9, 3.8954675827649183`*^9, 3.896147670735045*^9, {
   3.896149418397876*^9, 3.896149422823304*^9}, {3.896149523033877*^9, 
   3.8961495903744783`*^9}, {3.8961496227429943`*^9, 3.896149630422372*^9}, 
   3.896150788394878*^9, 3.896158646963212*^9, 3.8961730085621643`*^9, 
   3.896284135945545*^9, 3.896324693969283*^9, 3.896375479471654*^9, 
   3.896508256808442*^9, {3.896634784938877*^9, 3.8966348240687428`*^9}, 
   3.8966429588430843`*^9, 3.896672990908833*^9, {3.89703213752439*^9, 
   3.897032160724634*^9}, 3.897273719465077*^9, 3.897355089039095*^9, {
   3.9090476662904367`*^9, 3.909047676834716*^9}, 3.9090485448265743`*^9, 
   3.909050634606584*^9, 3.909050666436273*^9, 3.909055985575122*^9, 
   3.909059084683176*^9, 3.909114723670618*^9, 3.909123298783868*^9, 
   3.909128769217451*^9, 3.9091547862730207`*^9, 3.909202746728149*^9, 
   3.909202946953712*^9, 3.909202995025188*^9, 3.909203068362317*^9, 
   3.9092031469739523`*^9, 3.9092031789462976`*^9, {3.909204427124896*^9, 
   3.90920444759233*^9}, 3.909204483441875*^9, {3.909204523760976*^9, 
   3.909204568610135*^9}, {3.9092064386375732`*^9, 3.909206482106*^9}, 
   3.909211304272142*^9, {3.90921133548278*^9, 3.909211346493059*^9}},
 CellLabel->
  "Out[732]=",ExpressionUUID->"82627840-55c6-4f5a-abd3-36b9f38bc93f"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.909204436270431*^9},ExpressionUUID->"6484ce7e-ec3a-4df4-8f70-\
d89937f67e79"]
},
WindowSize->{1380, 949},
WindowMargins->{{Automatic, 549}, {Automatic, -323}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5ba42f92-4543-41a7-be79-e6088f3f453a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 30060, 688, 2196, "Input",ExpressionUUID->"0769664e-eca7-425a-bd9c-aa18d11e94d9"],
Cell[CellGroupData[{
Cell[30643, 712, 1757, 44, 246, "Input",ExpressionUUID->"804c27a4-ef89-412d-929a-103b3a5fa8e1"],
Cell[32403, 758, 2718, 81, 129, "Output",ExpressionUUID->"8cfbe708-1962-46ca-a53e-664952b71b72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35158, 844, 18908, 402, 1260, "Input",ExpressionUUID->"b1664fb8-8d64-4d75-b4de-c141720ce0d0"],
Cell[54069, 1248, 3143, 63, 561, "Output",ExpressionUUID->"e339ed97-5d3d-4b6c-9c2a-3295255639c6"]
}, Open  ]],
Cell[57227, 1314, 4798, 114, 324, "Input",ExpressionUUID->"19f345e5-4f94-4349-98cf-03059ec09d2c"],
Cell[CellGroupData[{
Cell[62050, 1432, 1727, 49, 199, "Input",ExpressionUUID->"e9fd5abb-4c8c-40ea-a092-c743c0696a87"],
Cell[63780, 1483, 503, 10, 47, "Output",ExpressionUUID->"029adde3-0692-481b-9075-34e584abd03f"],
Cell[64286, 1495, 77984, 1327, 304, "Output",ExpressionUUID->"9a6c54a2-bc1e-4b9b-97c7-f7bc094ea443"],
Cell[142273, 2824, 15862, 307, 304, "Output",ExpressionUUID->"9ac80916-963c-4b6d-8b90-a3145f9bdb22"],
Cell[158138, 3133, 579, 13, 46, "Output",ExpressionUUID->"be625758-5863-415d-8be9-e32f30f799d7"],
Cell[158720, 3148, 439, 7, 42, "Output",ExpressionUUID->"6f595ec5-e580-4d0e-8497-ac4cc8c7d228"]
}, Open  ]],
Cell[159174, 3158, 321, 8, 64, "Input",ExpressionUUID->"7e76a07c-eae7-4e99-81cd-029481d36efd"],
Cell[159498, 3168, 1377, 24, 64, "Input",ExpressionUUID->"e2e12163-f3b1-429c-b7f0-5d97e07fa9e5"],
Cell[CellGroupData[{
Cell[160900, 3196, 13829, 218, 480, "Input",ExpressionUUID->"0d5171ea-b44a-4d7b-819a-6c63ab5bfb54"],
Cell[174732, 3416, 2426, 63, 303, "Output",ExpressionUUID->"adab92be-dcca-4f26-bc8e-5fb76d78788c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177195, 3484, 3718, 88, 402, "Input",ExpressionUUID->"ee29b4b0-6e3d-4ce5-b399-d2b04f7d33db"],
Cell[180916, 3574, 768, 14, 95, "Output",ExpressionUUID->"3845fd51-700f-47d9-89c6-add641fcc63f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181721, 3593, 14111, 230, 662, "Input",ExpressionUUID->"57a71c0f-bed2-4ba7-835f-435317dcf938"],
Cell[195835, 3825, 2253, 35, 219, "Output",ExpressionUUID->"82627840-55c6-4f5a-abd3-36b9f38bc93f"]
}, Open  ]],
Cell[198103, 3863, 129, 3, 37, "Input",ExpressionUUID->"6484ce7e-ec3a-4df4-8f70-d89937f67e79"]
}
]
*)

