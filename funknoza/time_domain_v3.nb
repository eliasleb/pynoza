(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    343518,       6205]
NotebookOptionsPosition[    296147,       5337]
NotebookOutlinePosition[    342473,       6191]
CellTagsIndexPosition[    342430,       6188]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$PlotTheme", "=", "\"\<Scientific\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PositivePart", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">=", "0"}], ",", "x", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"x", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"y", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"z", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"\[Rho]", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Theta]", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"\[Phi]", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"k", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
    RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Omega]", " ", ">", " ", "0"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"R", " ", ".", " ", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "\[Omega]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"predecessor", "[", "\[Alpha]_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], ",", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", "\n", "   ", 
     RowBox[{
      RowBox[{"Select", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", "-", " ", 
           RowBox[{"UnitVector", "[", 
            RowBox[{"3", ",", " ", "j"}], "]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", 
        "\n", "     ", 
        RowBox[{
         RowBox[{"NonNegative", "@", 
          RowBox[{"Min", "@", "#"}]}], " ", "&"}], ",", "\n", "     ", "1"}], 
       "\n", "     ", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "\n", "   ", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"firstNonzeroDim", "[", "\[Alpha]_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", "\n", "     ", 
      RowBox[{"\[Alpha]", ",", "\n", "     ", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", " ", ">", " ", "0"}], " ", "&"}], ")"}]}], ",", "\n", 
       "     ", "Infinity", ",", " ", "1"}], "\n", "     ", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"\[Alpha]_", ",", "direction_"}], "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "<", 
     RowBox[{"\[Alpha]", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "direction"}], 
        "]"}], "/.", 
       RowBox[{"x", "->", "y1"}]}], "/.", 
      RowBox[{"y", "->", "x"}]}], "/.", 
     RowBox[{"y1", "->", "y"}]}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", "==", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "4"}], "/", "\[Pi]"}], "/", "r"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "\[Alpha]1", ",", " ", "ga"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Alpha]1", " ", "=", " ", "\[Alpha]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"j", " ", "=", " ", 
          RowBox[{"firstNonzeroDim", "[", "\[Alpha]", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Alpha]1", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"\[Alpha]1", "[", 
            RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ga", " ", "=", " ", 
          RowBox[{"g", "[", 
           RowBox[{"\[Alpha]1", ",", "direction"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"ga", ",", " ", 
             RowBox[{"R", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "-", 
           RowBox[{"direction", " ", "\[ImaginaryJ]", " ", "k", " ", 
            RowBox[{
             RowBox[{"R", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "/", "r"}], " ", "ga"}]}], " ", 
          "//", "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"\[Alpha]_", ",", "direction_"}], "]"}], " ", ":=", 
   RowBox[{"g", "[", 
    RowBox[{"\[Alpha]", ",", "direction"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SimplifiedHeaviside", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", " ", ">=", " ", "0"}], ",", " ", "1", ",", " ", "0"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SafeMoment", "[", 
    RowBox[{"CurrentMoment_", ",", "\[Alpha]_", ",", "dim_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AllTrue", "[", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{
        RowBox[{"#", ">=", "0"}], "&"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"CurrentMoment", "[", 
      RowBox[{"\[Alpha]", ",", "dim"}], "]"}], ",", "\[IndentingNewLine]", 
     "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChargeMoment", "[", 
   RowBox[{
   "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
    "direction_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", 
    RowBox[{"(", 
     RowBox[{"direction", " ", "\[ImaginaryJ]", " ", "\[Omega]"}], ")"}]}], 
   " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dim", " ", "==", " ", "j"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"SimplifiedHeaviside", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "2"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], " ", 
        RowBox[{"SafeMoment", "[", 
         RowBox[{"CurrentMoment", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "2"}], ")"}], 
            " ", 
            RowBox[{"UnitVector", "[", 
             RowBox[{"3", ",", " ", "j"}], "]"}]}], " ", "+", 
           RowBox[{"Total", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", "#", "]"}], "]"}], " ", 
               RowBox[{"UnitVector", "[", 
                RowBox[{"3", ",", " ", "#"}], "]"}]}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
               
               RowBox[{"{", "j", " ", "}"}]}], "]"}]}], "]"}]}], ",", " ", 
          "j"}], "]"}]}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "j", "]"}], "]"}], " ", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "dim", "]"}], "]"}], " ", 
        RowBox[{"SimplifiedHeaviside", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}], "]"}], " ", 
        RowBox[{"SimplifiedHeaviside", "[", 
         RowBox[{
          RowBox[{"\[Alpha]", "[", 
           RowBox[{"[", "dim", "]"}], "]"}], " ", "-", " ", "1"}], "]"}], " ", 
        RowBox[{"SafeMoment", "[", 
         RowBox[{"CurrentMoment", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], 
            " ", 
            RowBox[{"UnitVector", "[", 
             RowBox[{"3", ",", " ", "j"}], "]"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", "[", 
               RowBox[{"[", "dim", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], 
            " ", 
            RowBox[{"UnitVector", "[", 
             RowBox[{"3", ",", " ", "dim"}], "]"}]}], " ", "+", " ", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", "#", "]"}], "]"}], " ", 
               RowBox[{"UnitVector", "[", 
                RowBox[{"3", ",", " ", "#"}], "]"}]}], " ", "&"}], " ", "/@", 
             " ", 
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
               
               RowBox[{"{", 
                RowBox[{"dim", ",", " ", "j"}], "}"}]}], "]"}]}], "]"}]}], 
          ",", " ", "j"}], "]"}]}]}], "\n", "    ", "]"}], ",", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"ElectricMoment", "[", 
   RowBox[{
   "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
    "direction_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"direction", " ", "\[ImaginaryJ]", " ", "\[Omega]", " ", 
    RowBox[{"CurrentMoment", "[", 
     RowBox[{"\[Alpha]", ",", " ", "dim"}], "]"}]}], " ", "+", 
   RowBox[{"ChargeMoment", "[", 
    RowBox[{
    "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "dim", ",", 
     "direction"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"MagneticMoment", "[", 
   RowBox[{
   "\[Alpha]_", ",", "CurrentMoment_", ",", " ", "dim_", ",", "direction_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"-", "direction"}], " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"LeviCivitaTensor", "[", "3", "]"}], "[", 
         RowBox[{"[", "dim", "]"}], "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "j", "]"}], "]"}], " ", 
      RowBox[{"SimplifiedHeaviside", "[", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", "1"}], "]"}], " ", 
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", 
      RowBox[{"CurrentMoment", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", "1"}], ")"}], " ", 
          RowBox[{"UnitVector", "[", 
           RowBox[{"3", ",", " ", "i"}], "]"}]}], " ", "+", 
         RowBox[{"Total", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", "#", "]"}], "]"}], " ", 
             RowBox[{"UnitVector", "[", 
              RowBox[{"3", ",", " ", "#"}], "]"}]}], " ", "&"}], " ", "/@", 
           " ", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
             RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}]}], ",", " ", "j"}], 
       "]"}]}], ",", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"j", ",", " ", "1", ",", " ", "3"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Field", "[", 
   RowBox[{
   "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "MomentFunction_", ",", 
    " ", "dim_", ",", "direction_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[Beta]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Beta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"Norm", "[", 
          RowBox[{"\[Alpha]", ",", " ", "1"}], "]"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"Times", " ", "@@", " ", 
          RowBox[{"(", 
           RowBox[{"Factorial", "/@", " ", "\[Alpha]"}], ")"}]}], ")"}]}], 
       " ", 
       RowBox[{"MomentFunction", "[", 
        RowBox[{
        "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "dim", ",", 
         "direction"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Beta]", "===", "0"}], "||", 
        RowBox[{"\[Beta]", "===", "0."}]}], ",", "\[IndentingNewLine]", "0", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"h", "[", 
         RowBox[{"\[Alpha]", ",", "direction"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ElectricField", "[", 
    RowBox[{
    "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
     "direction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Field", "[", 
    RowBox[{
    "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "ElectricMoment", ",", 
     " ", "dim", ",", "direction"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MagneticField", "[", 
    RowBox[{
    "\[Alpha]_", ",", " ", "CurrentMoment_", ",", " ", "dim_", ",", 
     "direction_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Field", "[", 
    RowBox[{
    "\[Alpha]", ",", " ", "CurrentMoment", ",", " ", "MagneticMoment", ",", 
     " ", "dim", ",", "direction"}], "]"}]}], ";"}], "\n", 
 RowBox[{"On", "[", "Assert", "]"}], "\n", 
 RowBox[{
  RowBox[{"CurrentMoment", "[", 
   RowBox[{"\[Alpha]_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]", " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], " ", "&&", " ", 
     RowBox[{"dim", " ", "==", " ", "3"}]}], ",", "\n", "  ", 
    RowBox[{"\[ImaginaryJ]", " ", "\[Omega]", " ", "p"}], ",", " ", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EfieldThis", " ", "=", " ", 
   RowBox[{"Simplify", "@", 
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"ElectricField", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ax", ",", " ", "ay", ",", " ", "az"}], "}"}], ",", " ", 
            "CurrentMoment", ",", " ", "dim", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "\n", "      ", 
          RowBox[{"{", 
           RowBox[{"ax", ",", " ", "0", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ay", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"az", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax", " ", "-", " ", "ay"}]}], 
           "}"}]}], "]"}], ",", "\n", "     ", 
        RowBox[{"{", 
         RowBox[{"dim", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BfieldThis", " ", "=", " ", 
   RowBox[{"Simplify", "@", 
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"MagneticField", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ax", ",", " ", "ay", ",", " ", "az"}], "}"}], ",", " ", 
            "CurrentMoment", ",", " ", "dim", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "\n", "      ", 
          RowBox[{"{", 
           RowBox[{"ax", ",", " ", "0", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ay", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"az", ",", " ", "0", ",", " ", 
            RowBox[{"2", " ", "-", " ", "ax", " ", "-", " ", "ay"}]}], 
           "}"}]}], "]"}], ",", "\n", "     ", 
        RowBox[{"{", 
         RowBox[{"dim", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "p"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"R", "/", "r"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"HJackson", " ", "=", " ", 
   RowBox[{
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"k", "^", "2"}], "/", "4"}], "/", "\[Pi]"}], " ", 
       RowBox[{
        RowBox[{"n", "\[Cross]", "P"}], "/", "r"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"1", "/", "\[ImaginaryJ]"}], "/", "k"}], "/", "r"}]}], 
        ")"}]}], ",", "\n", "    ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}], "//", " ", "Simplify"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EJackson", " ", "=", " ", 
   RowBox[{
    RowBox[{"TransformedField", "[", 
     RowBox[{
      RowBox[{"\"\<Cartesian\>\"", " ", "->", " ", "\"\<Spherical\>\""}], ",",
       "\n", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "4"}], "/", "\[Pi]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"k", "^", "2"}], "/", "r"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "\[Cross]", "P"}], ")"}], "\[Cross]", "n"}]}], " ", 
         "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{"n", " ", ".", " ", "P"}], ")"}]}], " ", "-", " ", 
            "P"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"r", "^", "3"}]}], " ", "-", " ", 
            RowBox[{"\[ImaginaryJ]", " ", 
             RowBox[{"k", "/", 
              RowBox[{"r", "^", "2"}]}]}]}], ")"}]}]}], ")"}]}], ",", "\n", 
      "    ", 
      RowBox[{"R", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\[Rho]", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], 
        "}"}]}]}], "]"}], " ", "//", " ", "Simplify"}]}], ";"}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"BfieldThis", " ", "-", " ", "HJackson"}], "]"}], " ", "==", " ", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"EfieldThis", " ", "-", " ", "EJackson"}], "]"}], " ", "==", " ", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "CurrentMoment", ",", " ", "EfieldThis", ",", " ", "BfieldThis", ",", " ", 
   "P", ",", " ", "n", ",", " ", "HJackson", ",", " ", "EJackson"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.884000609634778*^9, 3.8840006968866787`*^9}, {
   3.8840007319590607`*^9, 3.884000829418873*^9}, {3.884001028710011*^9, 
   3.8840011333372183`*^9}, {3.884001278524447*^9, 3.884001299518766*^9}, {
   3.884001348335174*^9, 3.884001366873633*^9}, {3.884001803993787*^9, 
   3.884002066049169*^9}, {3.884002108198312*^9, 3.884002132057137*^9}, {
   3.884002178414555*^9, 3.884002179051227*^9}, {3.884002214065489*^9, 
   3.8840023591157627`*^9}, {3.884002413749641*^9, 3.884002486477878*^9}, {
   3.884002538957056*^9, 3.884002602966361*^9}, {3.884003603165002*^9, 
   3.8840036048793697`*^9}, {3.8840601006885157`*^9, 3.884060108751841*^9}, {
   3.884060196558689*^9, 3.884060205357373*^9}, 3.8840603667628307`*^9, {
   3.884060498702962*^9, 3.8840605021344137`*^9}, {3.884060717504346*^9, 
   3.8840607200037203`*^9}, {3.88406083830529*^9, 3.8840608407481823`*^9}, {
   3.8840608715415707`*^9, 3.88406087311456*^9}, {3.8840609159792128`*^9, 
   3.884060948884097*^9}, {3.884061474472909*^9, 3.884061474876706*^9}, 
   3.8840634959752893`*^9, {3.884073629612423*^9, 3.8840736925443277`*^9}, {
   3.8840738126934137`*^9, 3.884073850562505*^9}, 3.8840738929738293`*^9, {
   3.88407392555429*^9, 3.8840740563439913`*^9}, {3.884074170241288*^9, 
   3.884074171444996*^9}, {3.884074581926303*^9, 3.884074582030273*^9}, {
   3.8840748610096684`*^9, 3.884074884743609*^9}, {3.8840749315100317`*^9, 
   3.884074982814138*^9}, {3.884075162586122*^9, 3.884075235779271*^9}, {
   3.8840753118960648`*^9, 3.8840753172894917`*^9}, {3.884075365605968*^9, 
   3.884075418367305*^9}, {3.884075479747862*^9, 3.8840755464143457`*^9}, {
   3.884075579243285*^9, 3.884075607752714*^9}, {3.884075650931262*^9, 
   3.884075727611594*^9}, {3.8840757724111767`*^9, 3.8840758192333193`*^9}, {
   3.884075921696726*^9, 3.8840759331259527`*^9}, {3.884076251145833*^9, 
   3.884076273557016*^9}, {3.8840764158788023`*^9, 3.8840764379412537`*^9}, {
   3.884076485382244*^9, 3.884076726009431*^9}, {3.88407677442914*^9, 
   3.884076827943948*^9}, {3.8840768678926373`*^9, 3.8840769039136353`*^9}, {
   3.884076944146253*^9, 3.884077065476281*^9}, {3.8840771853458652`*^9, 
   3.884077195362556*^9}, {3.884077231839224*^9, 3.884077236133525*^9}, {
   3.884077458519541*^9, 3.884077461693578*^9}, {3.884078284344028*^9, 
   3.8840783002273617`*^9}, {3.884078372323215*^9, 3.884078379720745*^9}, 
   3.8840784325537167`*^9, {3.88407847235771*^9, 3.884078507140992*^9}, {
   3.884078885897027*^9, 3.884078900756678*^9}, {3.884079136447398*^9, 
   3.884079247137995*^9}, {3.884079287875126*^9, 3.8840793062880783`*^9}, {
   3.884079411983532*^9, 3.884079678539888*^9}, {3.884079732069956*^9, 
   3.884079782964764*^9}, {3.884079848252571*^9, 3.884079890778102*^9}, {
   3.884079950320771*^9, 3.884080057313257*^9}, {3.884080099972632*^9, 
   3.884080104674906*^9}, {3.884080204888905*^9, 3.884080261766551*^9}, {
   3.8840803000854263`*^9, 3.8840803067022963`*^9}, {3.884080503959408*^9, 
   3.884080527425723*^9}, {3.884080579545789*^9, 3.884080582395371*^9}, {
   3.884080630006164*^9, 3.884080762948007*^9}, {3.884080821969322*^9, 
   3.884080865871112*^9}, {3.884081250998461*^9, 3.8840813124964647`*^9}, {
   3.88408134583077*^9, 3.884081713816759*^9}, {3.884081791232839*^9, 
   3.884081840961857*^9}, {3.884082156565094*^9, 3.884082176766017*^9}, {
   3.884082369579973*^9, 3.884082386232759*^9}, {3.884082444817554*^9, 
   3.884082476771557*^9}, {3.884082508068297*^9, 3.884082598993812*^9}, {
   3.884082721345482*^9, 3.8840827489860363`*^9}, {3.884082880759396*^9, 
   3.88408295167666*^9}, {3.884082990083599*^9, 3.884083083577067*^9}, {
   3.8840831470703573`*^9, 3.884083219632862*^9}, {3.8840837016101513`*^9, 
   3.884083759241652*^9}, {3.884083806607751*^9, 3.884083921005423*^9}, {
   3.884083953834231*^9, 3.884083954350896*^9}, 3.884084038118771*^9, {
   3.884084299685438*^9, 3.884084402464469*^9}, {3.884084496966902*^9, 
   3.884084499237751*^9}, {3.88408522836012*^9, 3.88408527455453*^9}, {
   3.884085341417341*^9, 3.884085448086464*^9}, {3.884085484228407*^9, 
   3.884085504359106*^9}, {3.8840855647354507`*^9, 3.884085565887127*^9}, {
   3.884085629371173*^9, 3.884085652099423*^9}, {3.884088343453698*^9, 
   3.884088363233407*^9}, {3.884088413972342*^9, 3.8840884631006002`*^9}, {
   3.884088495069064*^9, 3.884088510707528*^9}, {3.8841465570042267`*^9, 
   3.884146594132523*^9}, {3.884315446655189*^9, 3.884315450074999*^9}, {
   3.884323241452577*^9, 3.884323281049721*^9}, {3.884419580129754*^9, 
   3.884419595486574*^9}, {3.884421969006374*^9, 3.884421976167272*^9}, {
   3.884422013950158*^9, 3.884422078949073*^9}, {3.884424391629668*^9, 
   3.884424395746438*^9}, {3.884425884650653*^9, 3.884425887640292*^9}, {
   3.884431320310212*^9, 3.88443132616331*^9}, {3.88443151276901*^9, 
   3.8844315153782587`*^9}, {3.8844315779448423`*^9, 3.884431589741139*^9}, {
   3.8846922563560867`*^9, 3.8846924400715933`*^9}, {3.884692491266904*^9, 
   3.8846925058731833`*^9}, {3.884692564069639*^9, 3.884692569795225*^9}, {
   3.884692604937263*^9, 3.884692611667431*^9}, {3.884692647787157*^9, 
   3.884692649786775*^9}, {3.884751679055972*^9, 3.884751681566633*^9}, {
   3.884842090293371*^9, 3.884842227024643*^9}, 3.884927513757187*^9, {
   3.8924673062661858`*^9, 3.892467485297538*^9}, {3.892467571933621*^9, 
   3.892467649847211*^9}, {3.89246771024794*^9, 3.892467765269552*^9}, {
   3.892467850596301*^9, 3.892467912909047*^9}, {3.89246798307332*^9, 
   3.892468039608452*^9}, {3.892468072985154*^9, 3.892468146515061*^9}, {
   3.8924681886324863`*^9, 3.8924683865706167`*^9}, {3.8924684308683023`*^9, 
   3.8924685441829453`*^9}, {3.8924685934884987`*^9, 3.892468629703683*^9}, 
   3.892468671857461*^9, {3.892468714852641*^9, 3.8924688007788057`*^9}, {
   3.892468883058585*^9, 3.89246890290711*^9}, {3.892468968087084*^9, 
   3.892469064756022*^9}, {3.8924691659092627`*^9, 3.892469188212769*^9}, {
   3.8924692237365303`*^9, 3.892469267490225*^9}, {3.892469327509776*^9, 
   3.892469577440151*^9}, {3.8924697157782793`*^9, 3.892469730600913*^9}, {
   3.892469810468482*^9, 3.8924698523822727`*^9}, {3.8924699075604153`*^9, 
   3.892469975394009*^9}, {3.892552834618821*^9, 3.8925528379577637`*^9}, {
   3.892553111451232*^9, 3.892553120175617*^9}, {3.892553371903566*^9, 
   3.892553393526924*^9}, {3.8925534457262497`*^9, 3.89255352270033*^9}, {
   3.892553568485506*^9, 3.892553633378276*^9}, {3.89255380658475*^9, 
   3.8925538148744917`*^9}, {3.892553848256592*^9, 3.892554115602652*^9}, {
   3.892554158671852*^9, 3.892554188864911*^9}, {3.892604890335157*^9, 
   3.892604913002264*^9}, {3.892604943701871*^9, 3.8926049509450207`*^9}, {
   3.892605150461391*^9, 3.892605252901423*^9}, {3.8926053872072277`*^9, 
   3.892605394109665*^9}, {3.892910471078517*^9, 3.892910478090201*^9}, {
   3.892910554868037*^9, 3.892910646502221*^9}, {3.892910735478388*^9, 
   3.8929107466713133`*^9}, {3.892910887690152*^9, 3.8929108930049458`*^9}, 
   3.8929111144575977`*^9, {3.892911198602079*^9, 3.892911215864217*^9}, {
   3.892911247778859*^9, 3.8929113295436697`*^9}, {3.892911411383336*^9, 
   3.8929114838801126`*^9}, {3.892911596689867*^9, 3.8929116075394993`*^9}, {
   3.892911774145183*^9, 3.892911813871189*^9}, {3.892911976040004*^9, 
   3.892911980975912*^9}, {3.892912023885827*^9, 3.892912026368594*^9}, {
   3.892912096637796*^9, 3.892912098749069*^9}, {3.893043795369556*^9, 
   3.893043822576976*^9}, {3.893131107184662*^9, 3.893131174361981*^9}, {
   3.893131533841667*^9, 3.893131564238133*^9}, 3.893208375140933*^9, {
   3.894093837549528*^9, 3.894093847395047*^9}, {3.894093954224983*^9, 
   3.8940939579489822`*^9}, {3.894094070224328*^9, 3.8940940717567368`*^9}, {
   3.8940945078974543`*^9, 3.8940945164964037`*^9}, {3.8940947430573053`*^9, 
   3.894094816854249*^9}, {3.8940948826671047`*^9, 3.894094887187581*^9}, {
   3.8940949250363617`*^9, 3.8940949476025543`*^9}, {3.8940950083977222`*^9, 
   3.894095096476222*^9}, {3.8940978151786137`*^9, 3.8940978631477547`*^9}, 
   3.8940979030859423`*^9, {3.894097940728183*^9, 3.894097963397852*^9}, {
   3.8940980247019672`*^9, 3.894098055930475*^9}, {3.894098088487417*^9, 
   3.89409808861064*^9}, {3.894105539626463*^9, 3.894105540255934*^9}, {
   3.8941055746370487`*^9, 3.894105582354734*^9}, {3.894105620203109*^9, 
   3.894105725707698*^9}, {3.894106637501421*^9, 3.8941067152630672`*^9}, 
   3.8941884620414343`*^9, {3.895411220580402*^9, 3.8954112667150087`*^9}, {
   3.895411350147106*^9, 3.895411434289341*^9}, {3.895411470774928*^9, 
   3.895411602482841*^9}, {3.8954117304400663`*^9, 3.8954118275624847`*^9}, {
   3.895413096174123*^9, 3.895413101690811*^9}, 3.895560283184165*^9, {
   3.895560522648332*^9, 3.8955605609993*^9}, {3.8955606381869507`*^9, 
   3.8955607432848673`*^9}, 3.896015124512705*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"0769664e-eca7-425a-bd9c-aa18d11e94d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dirName", "=", 
   RowBox[{"ToString", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", "=", 
   RowBox[{"2", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1s", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"0", ",", "0", ",", "10", ",", "0", ",", "0", ",", 
     RowBox[{"(*", "P", "*)"}], "45", ",", "45", ",", "55", ",", "68", ",", 
     "55", ",", 
     RowBox[{"(*", "F", "*)"}], "91", ",", "91", ",", "101", ",", "91", ",", 
     RowBox[{"(*", "L", "*)"}], "136", ",", "136"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"x2s", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"0", ",", "10", ",", "20", ",", "30", ",", "40", ",", 
     RowBox[{"(*", "P", "*)"}], "0", ",", "20", ",", "20", ",", "30", ",", 
     "40", ",", 
     RowBox[{"(*", "F", "*)"}], "0", ",", "30", ",", "20", ",", "40", ",", 
     RowBox[{"(*", "L", "*)"}], "10", ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ws", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"35", ",", "10", ",", "23", ",", "10", ",", "35", ",", 
     RowBox[{"(*", "P", "*)"}], "10", ",", "10", ",", "23", ",", "10", ",", 
     "23", ",", 
     RowBox[{"(*", "F", "*)"}], "10", ",", "10", ",", "23", ",", "35", ",", 
     RowBox[{"(*", "L", "*)"}], "10", ",", "35"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hs", "=", 
   RowBox[{"{", 
    RowBox[{"(*", "E", "*)"}], 
    RowBox[{"10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
     RowBox[{"(*", "P", "*)"}], "20", ",", "30", ",", "10", ",", "10", ",", 
     "10", ",", 
     RowBox[{"(*", "F", "*)"}], "20", ",", "10", ",", "10", ",", "10", ",", 
     RowBox[{"(*", "L", "*)"}], "40", ",", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amplitudes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "8", ",", 
     RowBox[{"6", "/", "2"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"(*", "P", "*)"}], 
     RowBox[{"8", "/", "5"}], ",", 
     RowBox[{"4", "/", "5"}], ",", 
     RowBox[{"4", "/", "5"}], ",", 
     RowBox[{
      RowBox[{"-", "4"}], "/", "5"}], ",", 
     RowBox[{"8", "/", "5"}], ",", 
     RowBox[{"(*", "F", "*)"}], 
     RowBox[{"14", "/", "5"}], ",", 
     RowBox[{"14", "/", "5"}], ",", 
     RowBox[{"14", "/", "5"}], ",", 
     RowBox[{
      RowBox[{"-", "14"}], "/", "5"}], ",", 
     RowBox[{"(*", "L", "*)"}], 
     RowBox[{"7", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"-", "7"}], "/", "4"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"polarities", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2", ",", "1", ",", 
     RowBox[{"(*", "P", "*)"}], "2", ",", "2", ",", "1", ",", "2", ",", "1", 
     ",", 
     RowBox[{"(*", "F", "*)"}], "2", ",", "2", ",", "1", ",", "1", ",", 
     RowBox[{"(*", "L", "*)"}], "2", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d1", " ", "=", " ", "a"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lengthLogo", " ", "=", " ", "171"}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"d1", "=", 
     RowBox[{"a", "/", "5"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"slice", "=", 
     RowBox[{";;", "5"}]}], ";", "\n", 
    RowBox[{"x1s", "=", 
     RowBox[{"x1s", "[", 
      RowBox[{"[", "slice", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"x2s", "=", 
     RowBox[{"x2s", "[", 
      RowBox[{"[", "slice", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ws", "=", 
     RowBox[{"ws", "[", 
      RowBox[{"[", "slice", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"hs", "=", 
     RowBox[{"hs", "[", 
      RowBox[{"[", "slice", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"amplitudes", "=", 
     RowBox[{"amplitudes", "[", 
      RowBox[{"[", "slice", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"polarities", "=", 
     RowBox[{"polarities", "[", 
      RowBox[{"[", "slice", "]"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2", " ", "=", " ", 
   RowBox[{"a", " ", "*", " ", 
    RowBox[{"50", " ", "/", " ", "lengthLogo"}]}]}], ";"}], "\n", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "Red", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#1", "+", "#3"}], ",", 
               RowBox[{"#2", "+", "#4"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#5", ",", "#6", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "[", 
                RowBox[{"[", "#7", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "#2"}], "}"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "&"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x1s", "/", "lengthLogo"}], " ", "length"}], "-", "d1"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"x2s", "/", "lengthLogo"}], " ", "length"}], "-", "d2"}], 
        ",", 
        RowBox[{
         RowBox[{"ws", "/", "lengthLogo"}], " ", "length"}], ",", 
        RowBox[{
         RowBox[{"hs", "/", "lengthLogo"}], " ", "length"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "x1s"}], "]"}], ",", "amplitudes", ",", 
        "polarities"}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntJ", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x0", ",", "\[Sigma]", ",", "m"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"m", "+", "1"}], ")"}]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "+", 
           RowBox[{"\[Sigma]", "/", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "-", 
           RowBox[{"\[Sigma]", "/", "2"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}]}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CJ", "=", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "x1", ",", "x2", ",", "w", ",", "h"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntJ", "[", 
       RowBox[{
        RowBox[{"x1", "+", 
         RowBox[{"w", "/", "2"}]}], ",", "w", ",", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
      RowBox[{"IntJ", "[", 
       RowBox[{
        RowBox[{"x2", "+", 
         RowBox[{"h", "/", "2"}]}], ",", "h", ",", 
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "CurrentMoment", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CurrentMoment", "[", 
    RowBox[{"\[Alpha]_", ",", "dim_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CurrentMoment", "[", 
     RowBox[{"\[Alpha]", ",", "dim"}], "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "==", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
       RowBox[{"Sum", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"polarities", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "==", "dim"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CJ", "[", 
             RowBox[{"\[Alpha]", ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x1s", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
                "length"}], "-", "d1"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x2s", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
                "length"}], "-", "d2"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"ws", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
               "length"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"hs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/", "lengthLogo"}], " ", 
               "length"}]}], "]"}], 
            RowBox[{"amplitudes", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           "0"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "x1s"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxOrder", "=", "120"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8924699830780573`*^9, 3.89247018231215*^9}, {
   3.892470228850005*^9, 3.892470582579604*^9}, {3.8924706647340593`*^9, 
   3.89247068673919*^9}, {3.892470725818749*^9, 3.892470884573215*^9}, {
   3.892470929904375*^9, 3.89247112014157*^9}, {3.8924711644811563`*^9, 
   3.892471170174965*^9}, 3.892471204199339*^9, {3.892471279112486*^9, 
   3.892471331659861*^9}, {3.8924713643095284`*^9, 3.892471383208806*^9}, {
   3.892471424645151*^9, 3.892471480401073*^9}, {3.892471513546616*^9, 
   3.892471546723427*^9}, {3.892471579825458*^9, 3.8924716003399277`*^9}, {
   3.8924716340961657`*^9, 3.89247173035151*^9}, {3.8924720381186953`*^9, 
   3.892472038425529*^9}, {3.892472659158371*^9, 3.8924726869739*^9}, {
   3.892473169173513*^9, 3.892473317474956*^9}, {3.892473559854026*^9, 
   3.892473563396908*^9}, {3.892534263469088*^9, 3.8925343700127897`*^9}, {
   3.8925344096663427`*^9, 3.892534680714419*^9}, {3.892534717295529*^9, 
   3.892535097016313*^9}, {3.892535226344713*^9, 3.8925352276158943`*^9}, {
   3.892535285299474*^9, 3.892535330159309*^9}, {3.892535391585253*^9, 
   3.8925354545622*^9}, {3.892535499876837*^9, 3.892535533793997*^9}, {
   3.892535954687216*^9, 3.8925360077976*^9}, {3.8925360529969273`*^9, 
   3.892536114849571*^9}, {3.892536152628727*^9, 3.892536213064453*^9}, {
   3.892536245430011*^9, 3.89253635114607*^9}, {3.892536391476233*^9, 
   3.8925365129236917`*^9}, {3.892536565930716*^9, 3.892536568969715*^9}, {
   3.8925366109334517`*^9, 3.892536844664453*^9}, {3.892537755421611*^9, 
   3.89253787558458*^9}, {3.8925380138378067`*^9, 3.892538068807405*^9}, {
   3.8925381490415783`*^9, 3.892538269368656*^9}, 3.892538307149173*^9, {
   3.892538356198453*^9, 3.892538357076528*^9}, {3.892538479610544*^9, 
   3.8925385093172703`*^9}, 3.892541768351252*^9, {3.89255424064634*^9, 
   3.892554241350721*^9}, {3.892554342398281*^9, 3.8925543450217733`*^9}, {
   3.892603903699616*^9, 3.89260405540491*^9}, {3.892604457539147*^9, 
   3.892604457571178*^9}, {3.892604595171578*^9, 3.892604597284048*^9}, 
   3.892604671717272*^9, {3.892604794726025*^9, 3.892604812094214*^9}, {
   3.892605519252791*^9, 3.892605521329522*^9}, {3.8926056730591917`*^9, 
   3.892605702519664*^9}, {3.8926058121845207`*^9, 3.89260581639511*^9}, {
   3.892606025192808*^9, 3.892606025844755*^9}, 3.892606174952083*^9, {
   3.8926064395756617`*^9, 3.892606439617577*^9}, {3.8926175820262547`*^9, 
   3.892617618253188*^9}, {3.892620042359761*^9, 3.892620042555163*^9}, {
   3.8927126283335247`*^9, 3.8927126625327787`*^9}, {3.892712693561925*^9, 
   3.892712715350934*^9}, {3.892712752868766*^9, 3.892712789955256*^9}, {
   3.892716142081061*^9, 3.892716149815473*^9}, {3.892720490622231*^9, 
   3.892720521918181*^9}, {3.89272056902479*^9, 3.892720578451721*^9}, 
   3.892720749657956*^9, 3.8927207991442347`*^9, {3.8927210475508623`*^9, 
   3.892721047666835*^9}, 3.892721089171493*^9, {3.892723481654175*^9, 
   3.8927234822150793`*^9}, {3.8927237512972927`*^9, 3.892723777633348*^9}, 
   3.892723879529311*^9, {3.89272885093661*^9, 3.892728879961473*^9}, {
   3.8927289557190866`*^9, 3.892729073540205*^9}, {3.892778913076109*^9, 
   3.892778918172077*^9}, {3.8927792420211773`*^9, 3.892779246185834*^9}, {
   3.892779545271763*^9, 3.8927796113313932`*^9}, {3.892779646813056*^9, 
   3.8927796778059187`*^9}, {3.892779707946611*^9, 3.892779899394536*^9}, {
   3.8927805939222717`*^9, 3.8927806818944283`*^9}, {3.892781089001679*^9, 
   3.892781090193611*^9}, {3.892781446176318*^9, 3.892781505666193*^9}, {
   3.892781599706452*^9, 3.892781613067668*^9}, {3.892781696318074*^9, 
   3.892781697948388*^9}, 3.89278178290858*^9, 3.89278189229109*^9, {
   3.892781968364368*^9, 3.892782044075358*^9}, {3.892782551182124*^9, 
   3.892782576650601*^9}, {3.892782607184216*^9, 3.8927826075868196`*^9}, {
   3.892782644659403*^9, 3.8927827151586647`*^9}, {3.892782869972055*^9, 
   3.892782870268029*^9}, {3.892782943571352*^9, 3.892782944287817*^9}, {
   3.89278303280304*^9, 3.8927830361336517`*^9}, {3.892783070922124*^9, 
   3.8927830817749853`*^9}, {3.892783165161522*^9, 3.8927831660520153`*^9}, 
   3.892783264274108*^9, {3.892783335590049*^9, 3.8927833466370573`*^9}, 
   3.892783418941921*^9, 3.892783488960793*^9, 3.892783557622055*^9, 
   3.892783631262759*^9, {3.892783699572384*^9, 3.892783704850072*^9}, {
   3.89278378151903*^9, 3.892783782622398*^9}, {3.892783859899169*^9, 
   3.892783862295594*^9}, {3.892783936522676*^9, 3.892783949022234*^9}, 
   3.892784019326366*^9, 3.892784115152978*^9, 3.8927845854647818`*^9, {
   3.892784661717691*^9, 3.892784663121562*^9}, {3.892784785733423*^9, 
   3.892784786362808*^9}, 3.8927848565545683`*^9, {3.892784937286747*^9, 
   3.8927849423371973`*^9}, 3.89278533305907*^9, {3.892785410618473*^9, 
   3.892785540116275*^9}, 3.892785777109626*^9, {3.892785922671089*^9, 
   3.892785948886092*^9}, {3.892802438690164*^9, 3.892802447137385*^9}, {
   3.892805565223373*^9, 3.8928055707363577`*^9}, {3.892877411012669*^9, 
   3.892877428569592*^9}, {3.892879217888638*^9, 3.89287925200854*^9}, {
   3.8928802206059027`*^9, 3.892880224497159*^9}, {3.892882185344121*^9, 
   3.892882236485929*^9}, 3.892887987987059*^9, 3.892888755353424*^9, {
   3.8928903934072323`*^9, 3.892890394528607*^9}, {3.892982747589015*^9, 
   3.8929828760611486`*^9}, {3.8929829489276733`*^9, 3.892982952091558*^9}, 
   3.892983097877902*^9, 3.892983331045706*^9, {3.893129844256976*^9, 
   3.893129849947349*^9}, 3.8931298978740473`*^9, {3.8931301492970257`*^9, 
   3.8931301938502607`*^9}, {3.893131360749626*^9, 3.8931313625135813`*^9}, {
   3.8931317390498447`*^9, 3.89313174074341*^9}, {3.8931369544222097`*^9, 
   3.893136959145856*^9}, 3.893137651091721*^9, {3.8936542557187433`*^9, 
   3.893654279597539*^9}, {3.893654455935363*^9, 3.893654460215735*^9}, 
   3.893654518616959*^9, 3.893654662725006*^9, 3.893654918980032*^9, {
   3.894093862583768*^9, 3.894093873680612*^9}, 3.894095156031728*^9, {
   3.894096158067211*^9, 3.894096161550856*^9}, {3.894105746601873*^9, 
   3.8941057524852743`*^9}, {3.8941058629396563`*^9, 
   3.8941063156628847`*^9}, {3.8941063540814857`*^9, 3.8941064535792837`*^9}, 
   3.894106531813365*^9, {3.8941065646639442`*^9, 3.894106564708083*^9}, 
   3.8941065982585983`*^9, 3.894106694863759*^9, 3.894106808222067*^9, 
   3.894106842568624*^9, {3.894179371388049*^9, 3.894179373966011*^9}, 
   3.894179545930748*^9, 3.894179828003138*^9, {3.894179883454838*^9, 
   3.8941798835211067`*^9}, {3.894180179892003*^9, 3.894180182089591*^9}, {
   3.8941803307744007`*^9, 3.894180330873653*^9}, {3.8941884176339903`*^9, 
   3.894188417971533*^9}, {3.894188505094781*^9, 3.894188519161525*^9}, {
   3.894189223469081*^9, 3.894189223917157*^9}, {3.894189426094364*^9, 
   3.894189458629487*^9}, {3.8941895085103416`*^9, 3.894189526018969*^9}, {
   3.894189583683049*^9, 3.89418958393442*^9}, {3.894189993746097*^9, 
   3.894190015199729*^9}, {3.894190094277293*^9, 3.894190099595339*^9}, {
   3.894693024648138*^9, 3.894693025536696*^9}, {3.894698311364753*^9, 
   3.8946983116432734`*^9}, {3.895118680242474*^9, 3.8951186866184587`*^9}, 
   3.8951188465073767`*^9, {3.8951369421673613`*^9, 3.895136948162023*^9}, {
   3.895137134275805*^9, 3.895137134533493*^9}, {3.8951373406672583`*^9, 
   3.8951373689189157`*^9}, {3.895138051038962*^9, 3.895138059902824*^9}, {
   3.895138105590035*^9, 3.895138106239567*^9}, {3.895411124651306*^9, 
   3.895411136622301*^9}, {3.89541117338066*^9, 3.8954112130234957`*^9}, {
   3.895411848346971*^9, 3.895411889973048*^9}, {3.895411966999748*^9, 
   3.8954119886528587`*^9}, 3.8954132558793983`*^9, 3.895414354502701*^9, {
   3.895415664878909*^9, 3.8954156673074017`*^9}, {3.89541578319868*^9, 
   3.895415785249238*^9}, {3.8954158695294237`*^9, 3.8954159335218287`*^9}, 
   3.895465286265793*^9, 3.895467332049993*^9, 3.895467448709587*^9, 
   3.895467505975737*^9, 3.896014741678632*^9, 3.896146972986812*^9, {
   3.8961470324277763`*^9, 3.896147032584414*^9}, {3.8966428397555647`*^9, 
   3.896642885727208*^9}, {3.89664291611948*^9, 3.8966429482444057`*^9}, {
   3.896673032329246*^9, 3.896673042341378*^9}, 3.897032122542247*^9, 
   3.897045752180345*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"b1664fb8-8d64-4d75-b4de-c141720ce0d0"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
   RectangleBox[NCache[{-5, Rational[-250, 171]}, {-5, -1.4619883040935673`}],
     NCache[{Rational[-505, 171], 
      Rational[-50, 57]}, {-2.953216374269006, -0.8771929824561403}]], 
   {GrayLevel[0], InsetBox[
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}], ",", "x"}], "}"}], 
     NCache[{-5, Rational[-250, 171]}, {-5, -1.4619883040935673`}]]}, 
   {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
    RectangleBox[NCache[{-5, Rational[-50, 57]}, {-5, -0.8771929824561403}], 
     NCache[{Rational[-755, 171], 
       Rational[-50, 171]}, {-4.415204678362573, -0.29239766081871343`}]], 
    {GrayLevel[0], InsetBox[
      RowBox[{"{", 
       RowBox[{"2", ",", "8", ",", "y"}], "}"}], 
      NCache[{-5, Rational[-50, 57]}, {-5, -0.8771929824561403}]]}, 
    {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
     RectangleBox[
      NCache[{Rational[-755, 171], 
        Rational[-50, 171]}, {-4.415204678362573, -0.29239766081871343`}], 
      NCache[{Rational[-175, 57], Rational[50, 171]}, {-3.0701754385964914`, 
       0.29239766081871343`}]], 
     {GrayLevel[0], InsetBox[
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "x"}], "}"}], 
       NCache[{Rational[-755, 171], 
         Rational[-50, 
          171]}, {-4.415204678362573, -0.29239766081871343`}]]}, 
     {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
      RectangleBox[
       NCache[{-5, Rational[50, 171]}, {-5, 0.29239766081871343`}], 
       NCache[{Rational[-755, 171], Rational[50, 57]}, {-4.415204678362573, 
        0.8771929824561403}]], 
      {GrayLevel[0], InsetBox[
        RowBox[{"{", 
         RowBox[{"4", ",", 
          RowBox[{"-", "8"}], ",", "y"}], "}"}], 
        NCache[{-5, Rational[50, 171]}, {-5, 0.29239766081871343`}]]}, 
      {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
       RectangleBox[NCache[{-5, Rational[50, 57]}, {-5, 0.8771929824561403}], 
        NCache[{Rational[-505, 171], Rational[250, 171]}, {-2.953216374269006,
          1.4619883040935673`}]], 
       {GrayLevel[0], InsetBox[
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "2"}], ",", "x"}], "}"}], 
         NCache[{-5, Rational[50, 57]}, {-5, 0.8771929824561403}]]}, 
       {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
        RectangleBox[
         NCache[{Rational[-45, 19], 
           Rational[-250, 
            171]}, {-2.3684210526315788`, -1.4619883040935673`}], 
         NCache[{Rational[-305, 171], 
           Rational[-50, 
            171]}, {-1.7836257309941521`, -0.29239766081871343`}]], 
        {GrayLevel[0], InsetBox[
          RowBox[{"{", 
           RowBox[{"6", ",", 
            FractionBox["8", "5"], ",", "y"}], "}"}], 
          NCache[{Rational[-45, 19], 
            Rational[-250, 
             171]}, {-2.3684210526315788`, -1.4619883040935673`}]]}, 
        {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
         RectangleBox[
          NCache[{Rational[-45, 19], 
            Rational[-50, 
             171]}, {-2.3684210526315788`, -0.29239766081871343`}], 
          NCache[{Rational[-305, 171], Rational[
            250, 171]}, {-1.7836257309941521`, 1.4619883040935673`}]], 
         {GrayLevel[0], InsetBox[
           RowBox[{"{", 
            RowBox[{"7", ",", 
             FractionBox["4", "5"], ",", "y"}], "}"}], 
           NCache[{Rational[-45, 19], 
             Rational[-50, 
              171]}, {-2.3684210526315788`, -0.29239766081871343`}]]}, 
         {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
          RectangleBox[
           NCache[{Rational[-305, 171], 
             Rational[-50, 
              171]}, {-1.7836257309941521`, -0.29239766081871343`}], 
           NCache[{Rational[-25, 57], Rational[
             50, 171]}, {-0.43859649122807015`, 0.29239766081871343`}]], 
          {GrayLevel[0], InsetBox[
            RowBox[{"{", 
             RowBox[{"8", ",", 
              FractionBox["4", "5"], ",", "x"}], "}"}], 
            NCache[{Rational[-305, 171], 
              Rational[-50, 
               171]}, {-1.7836257309941521`, -0.29239766081871343`}]]}, 
          {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
           RectangleBox[
            NCache[{Rational[-175, 171], Rational[
              50, 171]}, {-1.023391812865497, 0.29239766081871343`}], 
            NCache[{
             Rational[-25, 57], Rational[50, 57]}, {-0.43859649122807015`, 
             0.8771929824561403}]], 
           {GrayLevel[0], InsetBox[
             RowBox[{"{", 
              RowBox[{"9", ",", 
               RowBox[{"-", 
                FractionBox["4", "5"]}], ",", "y"}], "}"}], 
             NCache[{Rational[-175, 171], Rational[
               50, 171]}, {-1.023391812865497, 0.29239766081871343`}]]}, 
           {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
            RectangleBox[
             NCache[{Rational[-305, 171], Rational[
               50, 57]}, {-1.7836257309941521`, 0.8771929824561403}], 
             NCache[{Rational[-25, 57], Rational[
               250, 171]}, {-0.43859649122807015`, 1.4619883040935673`}]], 
            {GrayLevel[0], InsetBox[
              RowBox[{"{", 
               RowBox[{"10", ",", 
                FractionBox["8", "5"], ",", "x"}], "}"}], 
              NCache[{Rational[-305, 171], Rational[
                50, 57]}, {-1.7836257309941521`, 0.8771929824561403}]]}, 
            {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
             RectangleBox[
              NCache[{Rational[55, 171], Rational[-250, 171]}, {
               0.3216374269005848, -1.4619883040935673`}], 
              NCache[{Rational[155, 171], Rational[-50, 171]}, {
               0.9064327485380117, -0.29239766081871343`}]], 
             {GrayLevel[0], InsetBox[
               RowBox[{"{", 
                RowBox[{"11", ",", 
                 FractionBox["14", "5"], ",", "y"}], "}"}], 
               NCache[{Rational[55, 171], Rational[-250, 171]}, {
                0.3216374269005848, -1.4619883040935673`}]]}, 
             {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
              RectangleBox[
               NCache[{Rational[55, 171], Rational[50, 171]}, {
                0.3216374269005848, 0.29239766081871343`}], 
               NCache[{Rational[155, 171], Rational[50, 57]}, {
                0.9064327485380117, 0.8771929824561403}]], 
              {GrayLevel[0], InsetBox[
                RowBox[{"{", 
                 RowBox[{"12", ",", 
                  FractionBox["14", "5"], ",", "y"}], "}"}], 
                NCache[{Rational[55, 171], Rational[50, 171]}, {
                 0.3216374269005848, 0.29239766081871343`}]]}, 
              {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
               RectangleBox[
                NCache[{Rational[155, 171], Rational[-50, 171]}, {
                 0.9064327485380117, -0.29239766081871343`}], 
                NCache[{Rational[385, 171], Rational[50, 171]}, {
                 2.2514619883040936`, 0.29239766081871343`}]], 
               {GrayLevel[0], InsetBox[
                 RowBox[{"{", 
                  RowBox[{"13", ",", 
                   FractionBox["14", "5"], ",", "x"}], "}"}], 
                 NCache[{Rational[155, 171], Rational[-50, 171]}, {
                  0.9064327485380117, -0.29239766081871343`}]]}, 
               {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
                RectangleBox[
                 NCache[{Rational[55, 171], Rational[50, 57]}, {
                  0.3216374269005848, 0.8771929824561403}], 
                 NCache[{Rational[45, 19], Rational[250, 171]}, {
                  2.3684210526315788`, 1.4619883040935673`}]], 
                {GrayLevel[0], InsetBox[
                  RowBox[{"{", 
                   RowBox[{"14", ",", 
                    RowBox[{"-", 
                    FractionBox["14", "5"]}], ",", "x"}], "}"}], 
                  NCache[{Rational[55, 171], Rational[50, 57]}, {
                   0.3216374269005848, 0.8771929824561403}]]}, 
                {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
                 RectangleBox[
                  NCache[{Rational[505, 171], Rational[-50, 57]}, {
                   2.953216374269006, -0.8771929824561403}], 
                  NCache[{Rational[605, 171], Rational[250, 171]}, {
                   3.538011695906433, 1.4619883040935673`}]], 
                 {GrayLevel[0], InsetBox[
                   RowBox[{"{", 
                    RowBox[{"15", ",", 
                    FractionBox["7", "4"], ",", "y"}], "}"}], 
                   NCache[{Rational[505, 171], Rational[-50, 57]}, {
                    2.953216374269006, -0.8771929824561403}]]}, 
                 {RGBColor[1, 0, 0], EdgeForm[Thickness[Tiny]], 
                  RectangleBox[
                   NCache[{Rational[505, 171], Rational[-250, 171]}, {
                    2.953216374269006, -1.4619883040935673`}], 
                   NCache[{5, Rational[-50, 57]}, {5, -0.8771929824561403}]], 
                  
                  {GrayLevel[0], InsetBox[
                    RowBox[{"{", 
                    RowBox[{"16", ",", 
                    RowBox[{"-", 
                    FractionBox["7", "4"]}], ",", "x"}], "}"}], 
                    NCache[{Rational[505, 171], Rational[-250, 171]}, {
                    2.953216374269006, \
-1.4619883040935673`}]]}}}}}}}}}}}}}}}}},
  Frame->True,
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.896673034142425*^9, 3.896673084746319*^9}, 
   3.897032123344733*^9, 3.897045753045747*^9, 3.897273686563325*^9, 
   3.897273859903472*^9, 3.897354834747205*^9, 3.8976973835938787`*^9, 
   3.8977802815485897`*^9, 3.898138681573009*^9, 3.898215514561998*^9, 
   3.898299440364389*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"bf387e08-7026-4391-9964-4354cf5f10c4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rz", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"antiderivative", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"t", "^", "2"}]}], "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"derivatives", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "dir"}], "}"}], "->", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"FunctionExpand", "[", "\[IndentingNewLine]", 
          RowBox[{"D", "[", 
           RowBox[{"antiderivative", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "i"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
          "]"}], "/.", 
         RowBox[{"t", "->", 
          RowBox[{
           RowBox[{"-", "dir"}], " ", "rz"}]}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"maxOrder", "+", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dir", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"CurrentMoment", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ax", ",", "ay", ",", "0"}], "}"}], ",", "dim"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"ax", ",", "0", ",", "maxOrder"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"ay", ",", "0", ",", 
      RowBox[{"maxOrder", "-", "ax"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"dim", ",", "1", ",", "2"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ax", ",", "ay", ",", "0"}], "}"}], ",", "direction"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ax", ",", "ay", ",", "direction"}], "}"}]}], "]"}], ";"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ax", ",", "0", ",", "maxOrder"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ay", ",", "0", ",", 
        RowBox[{"maxOrder", "-", "ax"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"direction", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"DumpSave", "[", 
     RowBox[{
      RowBox[{"dirName", "<>", "\"\<data/g-up-to-order-\>\"", "<>", 
       RowBox[{"ToString", "@", "maxOrder"}], "<>", "\"\<.mx\>\""}], ",", 
      "g"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8954119976792183`*^9, 3.895412114266631*^9}, {
   3.8954123567072983`*^9, 3.895412467746973*^9}, {3.895412532712007*^9, 
   3.895412534228692*^9}, {3.895412579053987*^9, 3.8954126388071833`*^9}, {
   3.895412678042005*^9, 3.895412847894438*^9}, {3.895412902641633*^9, 
   3.8954129112521048`*^9}, {3.895412955833856*^9, 3.8954129949775143`*^9}, {
   3.895413112028097*^9, 3.8954131880435047`*^9}, {3.895413240041317*^9, 
   3.895413240110908*^9}, {3.8954139784338408`*^9, 3.895413978514344*^9}, {
   3.895414361312785*^9, 3.895414362827806*^9}, {3.895414671588735*^9, 
   3.8954146716744747`*^9}, {3.895414911285056*^9, 3.8954149115941353`*^9}, {
   3.895415874509721*^9, 3.895415888695859*^9}, {3.895464543368121*^9, 
   3.895464557190534*^9}, {3.895466350234277*^9, 3.895466354953039*^9}, {
   3.8954670404003267`*^9, 3.895467068429077*^9}, 3.8954673346440983`*^9, 
   3.895467455642125*^9, 3.8954675122964563`*^9, {3.895467681793458*^9, 
   3.895467682067389*^9}, {3.895467917584579*^9, 3.89546792262615*^9}, {
   3.895551571251649*^9, 3.895551571869899*^9}, {3.895559513713397*^9, 
   3.895559571736042*^9}, {3.895560206273587*^9, 3.895560384180313*^9}, {
   3.895561137437896*^9, 3.895561138999639*^9}, {3.895561170939907*^9, 
   3.895561192628498*^9}, 3.895628916166914*^9, 3.8959973845898237`*^9, {
   3.896014953539823*^9, 3.896014953665546*^9}, {3.896146980230316*^9, 
   3.8961469804980583`*^9}, {3.8961470294583197`*^9, 3.896147029751204*^9}, 
   3.896149470597869*^9, {3.896642858965343*^9, 3.896642860161903*^9}, {
   3.897273665319078*^9, 3.897273666713008*^9}, {3.897780284504801*^9, 
   3.897780297008663*^9}, {3.897780327550128*^9, 3.897780329452758*^9}, 
   3.897780387026094*^9, {3.898138687437899*^9, 3.898138692736287*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"19f345e5-4f94-4349-98cf-03059ec09d2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Efield", "=", "0"}], ";"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"7e76a07c-eae7-4e99-81cd-029481d36efd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"knownOrder", "=", "85"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Efield", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"dirName", "<>", "\"\<data/field-v3-order-\>\"", "<>", 
     RowBox[{"ToString", "@", "knownOrder"}], "<>", "\"\<-a-\>\"", "<>", 
     RowBox[{"ToString", "@", "a"}], "<>", "\"\<.mx\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8943724722370453`*^9, 3.894372523936871*^9}, {
   3.894698319394462*^9, 3.8946983194246597`*^9}, 3.89494481036858*^9, 
   3.895137126307557*^9, {3.8954668845960617`*^9, 3.895466922773836*^9}, 
   3.8954671754040203`*^9, {3.895997469188369*^9, 3.895997469252801*^9}, {
   3.896147003584284*^9, 3.896147004346706*^9}, {3.8970458058970547`*^9, 
   3.8970458276887093`*^9}, {3.8972738782048187`*^9, 3.897273882010964*^9}, 
   3.897697372377158*^9, {3.897697423018396*^9, 3.897697423272101*^9}, {
   3.8976977670344067`*^9, 3.897697767141768*^9}, {3.897780346881998*^9, 
   3.897780350803442*^9}, {3.89813870940691*^9, 3.8981387174795113`*^9}, {
   3.89821552155562*^9, 3.898215534146419*^9}, {3.898299445089457*^9, 
   3.898299470232307*^9}},ExpressionUUID->"e2e12163-f3b1-429c-b7f0-\
5d97e07fa9e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Efield", "+=", 
           RowBox[{"#1", "+", "#2"}]}], "&"}], "@@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Sum", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Total", "@", 
                RowBox[{"MapIndexed", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"expr", ",", "index"}], "}"}], "\[Function]", 
                   RowBox[{"expr", " ", 
                    RowBox[{
                    RowBox[{"derivatives", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ",", 
                    "direction"}], "}"}], "]"}], "/", 
                    RowBox[{
                    RowBox[{"(", "\[ImaginaryI]", ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"index", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}]}]}]}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"CoefficientList", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"ElectricField", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ax", ",", 
                    RowBox[{"order", "-", "ax"}], ",", "0"}], "}"}], ",", 
                    "CurrentMoment", ",", "dim", ",", "direction"}], "]"}], "/.", 
                    RowBox[{"z", "->", "0"}]}], ",", "\[Omega]"}], "]"}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"ax", ",", "0", ",", "order"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"dim", ",", "1", ",", "2"}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"direction", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Efield", "=", 
         RowBox[{"Expand", "@", "Efield"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dirName", "<>", "\"\<data/field-v3-order-\>\"", "<>", 
           RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
           RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<.mx\>\""}], ",", 
          "\[IndentingNewLine]", "Efield"}], "\[IndentingNewLine]", "]"}]}], 
       ",", "\[IndentingNewLine]", "order"}], "]"}], "//", "AbsoluteTiming"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"order", ",", 
      RowBox[{"knownOrder", "+", "1"}], ",", "maxOrder"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.892538224009582*^9, 3.8925382258094473`*^9}, {
   3.89253832004215*^9, 3.892538456053114*^9}, {3.8925385150067263`*^9, 
   3.892538519731267*^9}, {3.892540450868943*^9, 3.892540451318787*^9}, {
   3.892541783107994*^9, 3.8925417832777348`*^9}, {3.8925524725466623`*^9, 
   3.8925524726801863`*^9}, {3.8925527344002237`*^9, 3.892552736471312*^9}, 
   3.892552923653735*^9, {3.892552958962668*^9, 3.892552974231114*^9}, 
   3.8925530193949842`*^9, 3.892553072832*^9, {3.8925532890493593`*^9, 
   3.8925532909193487`*^9}, {3.892603750311022*^9, 3.892603770631502*^9}, {
   3.8926040658573637`*^9, 3.892604065943966*^9}, {3.892604316394307*^9, 
   3.892604330132519*^9}, {3.892604446580863*^9, 3.892604469428582*^9}, 
   3.892604600279716*^9, {3.892604726459343*^9, 3.8926047281907673`*^9}, 
   3.892605444503746*^9, 3.892605752914188*^9, 3.8926058395684853`*^9, {
   3.892605913930201*^9, 3.892605917698348*^9}, 3.892605962699736*^9, {
   3.8926060061804743`*^9, 3.892606006324168*^9}, {3.8926060429474154`*^9, 
   3.892606043148181*^9}, {3.8926062858441467`*^9, 3.892606291729105*^9}, {
   3.892606395160224*^9, 3.8926064128878527`*^9}, {3.89260645984732*^9, 
   3.892606475923277*^9}, {3.892607309424011*^9, 3.89260731815324*^9}, {
   3.892617560628586*^9, 3.892617560669958*^9}, {3.892617627970252*^9, 
   3.8926176281936398`*^9}, {3.892617661089631*^9, 3.892617687006097*^9}, {
   3.892617769134327*^9, 3.8926180495933847`*^9}, {3.8926180811373463`*^9, 
   3.892618148232688*^9}, {3.892618185595146*^9, 3.892618186772537*^9}, {
   3.89261822312103*^9, 3.892618247274444*^9}, {3.892618296046979*^9, 
   3.892618333134367*^9}, {3.8926186348744164`*^9, 3.892618657328925*^9}, {
   3.89261871519632*^9, 3.892618715706229*^9}, {3.8926189623411818`*^9, 
   3.892618962383462*^9}, {3.8926191970138474`*^9, 3.892619270349811*^9}, {
   3.892619365580303*^9, 3.8926193681694193`*^9}, {3.892619437177696*^9, 
   3.8926194834476347`*^9}, 3.892619553119897*^9, {3.8926196357724648`*^9, 
   3.892619636254386*^9}, {3.8926200402615347`*^9, 3.892620040574872*^9}, {
   3.892707977984893*^9, 3.8927079780877647`*^9}, {3.892712678418941*^9, 
   3.892712682906032*^9}, {3.892712818348605*^9, 3.892712821262669*^9}, {
   3.892712872384512*^9, 3.892712889617763*^9}, {3.8927161556546097`*^9, 
   3.892716158569209*^9}, {3.892719214170816*^9, 3.892719214958564*^9}, {
   3.892720531650832*^9, 3.892720550303464*^9}, {3.89272058486255*^9, 
   3.8927206372553577`*^9}, {3.892720686113537*^9, 3.89272068625802*^9}, {
   3.892720754469554*^9, 3.892720758069549*^9}, {3.8927208036563597`*^9, 
   3.892720803710353*^9}, 3.892721036556694*^9, {3.892723473610033*^9, 
   3.8927234737548943`*^9}, {3.892723766258007*^9, 3.892723773156846*^9}, 
   3.892779061109892*^9, {3.892780740234934*^9, 3.892780757639806*^9}, {
   3.8927809582578793`*^9, 3.892781297486781*^9}, {3.892781524197321*^9, 
   3.8927815531956263`*^9}, {3.89278211670601*^9, 3.8927821168510237`*^9}, 
   3.892782246756654*^9, 3.892782539255941*^9, 3.892783153395791*^9, 
   3.8927832276338*^9, {3.892784120846353*^9, 3.8927841768937483`*^9}, {
   3.892784265546794*^9, 3.89278427057286*^9}, {3.892784350236319*^9, 
   3.8927843613503227`*^9}, {3.892784485945621*^9, 3.892784493762953*^9}, {
   3.892785641780678*^9, 3.892785641914227*^9}, {3.89278595781699*^9, 
   3.892785959663721*^9}, {3.892792248950199*^9, 3.89279226341772*^9}, {
   3.892792533124806*^9, 3.89279253339639*^9}, 3.89279263391326*^9, {
   3.892792689252244*^9, 3.892792689869981*^9}, {3.8927929893316507`*^9, 
   3.8927930012365913`*^9}, {3.89279309069759*^9, 3.892793140667281*^9}, {
   3.8927932609496727`*^9, 3.8927932636523438`*^9}, {3.892793436764765*^9, 
   3.892793437529502*^9}, {3.892793521971118*^9, 3.8927935275703583`*^9}, {
   3.892793617166614*^9, 3.892793730049912*^9}, {3.892793865567717*^9, 
   3.892793905299879*^9}, {3.892802412869362*^9, 3.892802418987458*^9}, {
   3.892805553108348*^9, 3.892805556706768*^9}, {3.8928774362762012`*^9, 
   3.8928774364568977`*^9}, {3.892879170984365*^9, 3.892879185888679*^9}, 
   3.8928792874368877`*^9, {3.8928880042641907`*^9, 3.892888009526458*^9}, {
   3.892888767603417*^9, 3.892888786964229*^9}, 3.892888853875806*^9, {
   3.8929100903779984`*^9, 3.892910094875915*^9}, {3.892910312011155*^9, 
   3.892910337521492*^9}, 3.892910437282675*^9, 3.892910495095172*^9, {
   3.892911516185293*^9, 3.892911522169777*^9}, {3.8929117520918903`*^9, 
   3.892911752626068*^9}, {3.8929119575296392`*^9, 3.8929119621967382`*^9}, {
   3.892911994781739*^9, 3.892912011159914*^9}, {3.892912043789198*^9, 
   3.892912151032444*^9}, {3.892982299861649*^9, 3.8929823244528303`*^9}, {
   3.892982657156466*^9, 3.89298265778376*^9}, {3.892983108808321*^9, 
   3.892983108868836*^9}, {3.892983321793673*^9, 3.892983321987191*^9}, {
   3.892983394947412*^9, 3.892983401423077*^9}, {3.8929836152063503`*^9, 
   3.8929836238069*^9}, {3.893043847053309*^9, 3.893043855674238*^9}, {
   3.893044375323065*^9, 3.893044379063088*^9}, {3.8930444845942173`*^9, 
   3.89304448540469*^9}, {3.8930445301628723`*^9, 3.893044538594592*^9}, {
   3.8930468553259783`*^9, 3.8930468795223618`*^9}, {3.893046913451535*^9, 
   3.893046947056046*^9}, {3.893129833793089*^9, 3.893129858635763*^9}, {
   3.893130005425345*^9, 3.893130095984477*^9}, 3.893130144134686*^9, {
   3.893130204347883*^9, 3.893130204593288*^9}, {3.893130236497199*^9, 
   3.893130282354719*^9}, {3.893130357969054*^9, 3.89313044350975*^9}, 
   3.8931307705360107`*^9, {3.8931310709784937`*^9, 3.893131088645358*^9}, {
   3.893131238527268*^9, 3.893131281466239*^9}, {3.8931315868807783`*^9, 
   3.8931315885325537`*^9}, {3.893131620503621*^9, 3.89313162818861*^9}, {
   3.893131683529561*^9, 3.893131683561406*^9}, {3.893137019310405*^9, 
   3.893137074199068*^9}, {3.893137241746264*^9, 3.8931372650345*^9}, {
   3.893137600848297*^9, 3.893137600865931*^9}, {3.893137700186081*^9, 
   3.8931377002063637`*^9}, {3.8931378552801*^9, 3.893137855297185*^9}, {
   3.893208402057617*^9, 3.893208404392724*^9}, {3.893208511810623*^9, 
   3.8932085120582657`*^9}, {3.893211232024622*^9, 3.893211232946471*^9}, {
   3.893239342660228*^9, 3.893239342930233*^9}, {3.8932394672674313`*^9, 
   3.8932395146527433`*^9}, {3.893239574954084*^9, 3.8932396077485123`*^9}, {
   3.893239639438609*^9, 3.893239648662456*^9}, {3.893563309816557*^9, 
   3.8935633119812603`*^9}, {3.893654309769744*^9, 3.893654322163591*^9}, {
   3.893654528631596*^9, 3.893654528791151*^9}, {3.893654692172477*^9, 
   3.8936546937112703`*^9}, {3.89365480900747*^9, 3.893654810662842*^9}, {
   3.893654926597988*^9, 3.893654926732338*^9}, {3.893747374917153*^9, 
   3.8937474198024178`*^9}, {3.894093404696438*^9, 3.894093416495549*^9}, 
   3.8940938825704403`*^9, {3.894095405959682*^9, 3.894095407961648*^9}, {
   3.8940961714593554`*^9, 3.894096173168137*^9}, {3.894096289720291*^9, 
   3.8940964082957077`*^9}, {3.8940966559438353`*^9, 3.894096666707719*^9}, {
   3.894105762126824*^9, 3.894105764442984*^9}, {3.8941792196204567`*^9, 
   3.894179259066326*^9}, 3.894179349065802*^9, {3.894179379293408*^9, 
   3.894179380260976*^9}, {3.8941794327520933`*^9, 3.894179433637044*^9}, {
   3.894179471999069*^9, 3.894179572635507*^9}, {3.8941796376821117`*^9, 
   3.894179645786635*^9}, {3.8941797852338448`*^9, 3.8941797899577713`*^9}, {
   3.894179848313422*^9, 3.894179899547011*^9}, {3.894180252417457*^9, 
   3.894180253708304*^9}, {3.894180285182794*^9, 3.89418036815329*^9}, {
   3.894188359545746*^9, 3.894188373143635*^9}, {3.894188475755658*^9, 
   3.894188496171756*^9}, {3.894188535613408*^9, 3.894188639589753*^9}, {
   3.894188673786952*^9, 3.8941887075290213`*^9}, {3.894188742291432*^9, 
   3.894188788731924*^9}, {3.894188859387744*^9, 3.894188894654887*^9}, {
   3.894189136181731*^9, 3.8941891443873568`*^9}, {3.894189178706498*^9, 
   3.894189219856679*^9}, {3.894189276203351*^9, 3.8941893169174128`*^9}, {
   3.894189347859345*^9, 3.894189359238615*^9}, {3.894189406269858*^9, 
   3.8941894185814867`*^9}, {3.894189571905876*^9, 3.894189573184181*^9}, {
   3.8941898653201933`*^9, 3.8941898964035*^9}, {3.8943724659264603`*^9, 
   3.8943724676773043`*^9}, {3.894372537443802*^9, 3.894372537631318*^9}, {
   3.8946983751752567`*^9, 3.8946983753552933`*^9}, {3.8949448171172543`*^9, 
   3.894944817294969*^9}, {3.895118697869155*^9, 3.895118700872761*^9}, {
   3.895137146084993*^9, 3.8951371548958282`*^9}, {3.895413778983522*^9, 
   3.8954138147914553`*^9}, {3.895413861164769*^9, 3.895413884955118*^9}, {
   3.8954139480801163`*^9, 3.895413949812516*^9}, {3.895414025477386*^9, 
   3.895414028863625*^9}, {3.895414402589278*^9, 3.89541440262656*^9}, {
   3.8954145547144413`*^9, 3.8954145576344213`*^9}, 3.895414598548168*^9, {
   3.8954146968191338`*^9, 3.8954147017303963`*^9}, {3.8954148874618387`*^9, 
   3.895414992410932*^9}, 3.895415632899309*^9, {3.895464811912208*^9, 
   3.8954648343201427`*^9}, {3.895464867401599*^9, 3.8954649280925827`*^9}, {
   3.895465084652008*^9, 3.895465087477201*^9}, {3.895465204477717*^9, 
   3.895465204719924*^9}, {3.8954653178457117`*^9, 3.895465318840554*^9}, {
   3.895465626320505*^9, 3.895465648467092*^9}, {3.895466638348844*^9, 
   3.895466648477873*^9}, {3.895466750876073*^9, 3.89546682915446*^9}, {
   3.895466873458914*^9, 3.895466875089394*^9}, 3.89546716307003*^9, {
   3.8956295506113*^9, 3.895629552455351*^9}, {3.895997395561016*^9, 
   3.8959974062807217`*^9}, {3.895997488225721*^9, 3.895997488256343*^9}, {
   3.896014764275816*^9, 3.8960148307794247`*^9}, {3.8960149126840057`*^9, 
   3.8960149318318663`*^9}, {3.896014983507695*^9, 3.8960149894608107`*^9}, {
   3.896015045027116*^9, 3.896015046351842*^9}, {3.896015103680423*^9, 
   3.896015119608197*^9}, 3.896015154770358*^9, {3.89601524710236*^9, 
   3.8960152547956877`*^9}, {3.8961470105819798`*^9, 3.896147017560327*^9}, {
   3.897045831784566*^9, 3.89704583364327*^9}, 3.8976974288869123`*^9, {
   3.8976976007283087`*^9, 3.897697601343182*^9}, {3.897780341163422*^9, 
   3.89778034223671*^9}, {3.897780418006892*^9, 3.8977804225674257`*^9}, {
   3.897780453047201*^9, 3.8977804548031387`*^9}, {3.897780501018703*^9, 
   3.8977805136655607`*^9}, {3.898138722959043*^9, 3.898138727372699*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0d5171ea-b44a-4d7b-819a-6c63ab5bfb54"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.898238771730898*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"431755d6-8706-4c97-8a94-5b9ff18d85f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"imported", ",", "x", ",", "y", ",", "z"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"imported", "=", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{"ToString", "@", 
            RowBox[{"NotebookDirectory", "[", "]"}]}], "<>", 
           "\"\<data/v3-order-\>\"", "<>", 
           RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
           RowBox[{"ToString", "@", "a"}], "<>", "\"\<.mx\>\""}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"x", "=", 
         RowBox[{"imported", "[", "\"\<x\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{"imported", "[", "\"\<y\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"imported", "[", "\"\<discrete norm\>\"", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plot", "=", 
         RowBox[{
          RowBox[{"ListContourPlot", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"y", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "x"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", 
                  RowBox[{"Length", "@", "y"}]}], "}"}]}], "]"}], ",", "1"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "\[Rule]", "order"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AspectRatio", "->", 
             RowBox[{
              RowBox[{"Max", "@", "y"}], "/", 
              RowBox[{"Max", "@", "x"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ColorFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Blend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"White", ",", "Red"}], "}"}], ",", "#1"}], "]"}], 
               "&"}], ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Contours", "\[Rule]", "20"}], ",", "\[IndentingNewLine]", 
            RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", "None"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"dirName", "<>", "\"\<data/plot-order-\>\"", "<>", 
             RowBox[{"ToString", "@", "order"}], "<>", "\"\<-a-\>\"", "<>", 
             RowBox[{"ToString", "@", "a"}], "<>", "\"\<.pdf\>\""}], ",", 
            "plot"}], "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     "order"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"order", ",", "0", ",", "10", ",", "10"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.892618341465056*^9, 3.8926184158877153`*^9}, {
   3.892618471813704*^9, 3.892618605227047*^9}, {3.892618664772272*^9, 
   3.892618665223333*^9}, {3.892618725386958*^9, 3.892618725838072*^9}, {
   3.8926187576508713`*^9, 3.8926188258519697`*^9}, {3.892618901902936*^9, 
   3.892618928066886*^9}, {3.8926189649205017`*^9, 3.892618979918035*^9}, {
   3.892619036832906*^9, 3.892619133468906*^9}, {3.892619171427433*^9, 
   3.892619183890486*^9}, {3.8926195114268436`*^9, 3.8926195970107*^9}, 
   3.892620077720532*^9, {3.8926201465491867`*^9, 3.892620223734942*^9}, {
   3.892620459453905*^9, 3.89262054056393*^9}, {3.8926205722971888`*^9, 
   3.8926206065182877`*^9}, {3.892621006659278*^9, 3.892621060431822*^9}, {
   3.892623904453383*^9, 3.8926239045660057`*^9}, {3.892624831881329*^9, 
   3.892624831961775*^9}, {3.892624909493017*^9, 3.892624910415946*^9}, {
   3.892626402310481*^9, 3.892626403175419*^9}, {3.892629289091353*^9, 
   3.892629289315699*^9}, {3.8926354262894087`*^9, 3.8926354391359053`*^9}, 
   3.8926359539243917`*^9, {3.892692356923698*^9, 3.892692357080125*^9}, {
   3.8926968981129227`*^9, 3.89269690671439*^9}, 3.8927094521626673`*^9, {
   3.892709793337036*^9, 3.89270979339018*^9}, {3.8927119953114443`*^9, 
   3.89271199544427*^9}, {3.892712913142624*^9, 3.8927129200146017`*^9}, 
   3.892713863544137*^9, {3.892717289891239*^9, 3.892717304987306*^9}, {
   3.892717393538748*^9, 3.8927173962934647`*^9}, 3.8927175378463707`*^9, 
   3.892717819864263*^9, 3.892717942352765*^9, {3.892718124123374*^9, 
   3.8927181241703873`*^9}, {3.892718499845929*^9, 3.892718517732086*^9}, {
   3.892718667112797*^9, 3.89271866719079*^9}, {3.89271873213979*^9, 
   3.892718733206788*^9}, {3.892720274313048*^9, 3.8927202790940933`*^9}, 
   3.892720392822631*^9, {3.892723417870227*^9, 3.8927234212524633`*^9}, {
   3.892779333726963*^9, 3.8927793464731503`*^9}, {3.892779451797029*^9, 
   3.892779452346609*^9}, {3.8927924760182457`*^9, 3.892792480450633*^9}, {
   3.892792628274556*^9, 3.89279262901764*^9}, {3.8927927177361526`*^9, 
   3.8927927210880136`*^9}, {3.8927941452962017`*^9, 
   3.8927941466697903`*^9}, {3.892794543515168*^9, 3.8927945448756647`*^9}, {
   3.892796114342414*^9, 3.8927961143860273`*^9}, 3.8928022233261137`*^9, {
   3.892802333825676*^9, 3.892802361329446*^9}, {3.892805447276819*^9, 
   3.8928054656611423`*^9}, {3.892879164808728*^9, 3.892879165349148*^9}, {
   3.892888478293898*^9, 3.8928884801771307`*^9}, {3.8928891521112556`*^9, 
   3.8928891567786903`*^9}, {3.892889444671486*^9, 3.892889446693924*^9}, {
   3.892889570561211*^9, 3.892889571460594*^9}, {3.89288960878962*^9, 
   3.892889608823043*^9}, {3.892889691859499*^9, 3.892889691913916*^9}, {
   3.892890310107851*^9, 3.89289035359871*^9}, {3.892890538127743*^9, 
   3.892890541603697*^9}, {3.892890579598731*^9, 3.892890625755178*^9}, {
   3.892891003632698*^9, 3.892891009560329*^9}, {3.8928934460517797`*^9, 
   3.892893625977*^9}, {3.892893697475669*^9, 3.892893771000532*^9}, {
   3.892893858664757*^9, 3.8928938623772593`*^9}, {3.892894240052145*^9, 
   3.892894241434395*^9}, 3.892895298057357*^9, {3.8929093640958138`*^9, 
   3.8929093663459253`*^9}, {3.89291234851167*^9, 3.892912353669351*^9}, {
   3.8929125808940573`*^9, 3.892912581886669*^9}, 3.892913664310774*^9, {
   3.892958194508485*^9, 3.892958194596324*^9}, {3.8929588471348553`*^9, 
   3.892958863532649*^9}, {3.892959094581416*^9, 3.892959096055558*^9}, {
   3.892982280977005*^9, 3.892982282858663*^9}, {3.893044008148817*^9, 
   3.893044042439872*^9}, {3.8930443475316467`*^9, 3.893044369429791*^9}, {
   3.893046826116145*^9, 3.893046828620647*^9}, {3.893130456662717*^9, 
   3.89313045755021*^9}, {3.893139075633478*^9, 3.8931390860395412`*^9}, {
   3.893139191451524*^9, 3.89313919384864*^9}, {3.8931401102306843`*^9, 
   3.893140159528183*^9}, {3.893140360918542*^9, 3.893140376091648*^9}, {
   3.8931510843132668`*^9, 3.8931510858377237`*^9}, {3.8931522446952477`*^9, 
   3.893152246197844*^9}, {3.8931563305037727`*^9, 3.8931563343377733`*^9}, {
   3.8932099590079317`*^9, 3.893209980236333*^9}, {3.89324220962376*^9, 
   3.893242232124116*^9}, {3.893242442680016*^9, 3.893242443849511*^9}, {
   3.893243979992787*^9, 3.8932439801388283`*^9}, {3.8933046168027077`*^9, 
   3.893304619512986*^9}, {3.893306279254785*^9, 3.893306279322093*^9}, 
   3.893306364802322*^9, {3.89338845802188*^9, 3.893388522439012*^9}, {
   3.8933889183608418`*^9, 3.8933889196448317`*^9}, {3.893391684832127*^9, 
   3.8933917069582148`*^9}, {3.893392448561777*^9, 3.893392448717334*^9}, 
   3.8934034196755867`*^9, {3.893403688664736*^9, 3.8934036984623623`*^9}, {
   3.893404102556718*^9, 3.893404106354892*^9}, {3.893404246601674*^9, 
   3.8934042472989197`*^9}, {3.89340438810565*^9, 3.893404402415099*^9}, {
   3.893417345630279*^9, 3.893417352650673*^9}, {3.8934177247970963`*^9, 
   3.893417725449813*^9}, 3.89341776102663*^9, {3.89346914767456*^9, 
   3.893469147948419*^9}, {3.893484651331553*^9, 3.8934846514596024`*^9}, {
   3.893515881961274*^9, 3.893515882085724*^9}, {3.893555989678047*^9, 
   3.893555990094245*^9}, {3.893644534168435*^9, 3.893644534485997*^9}, 
   3.8936543842498827`*^9, {3.893654419989544*^9, 3.89365442027223*^9}, {
   3.893654565544928*^9, 3.893654569510971*^9}, {3.893654642368733*^9, 
   3.893654642531164*^9}, {3.893654789389481*^9, 3.893654798223648*^9}, {
   3.893654834622409*^9, 3.893654834769679*^9}, {3.8936549393331947`*^9, 
   3.893654944860265*^9}, {3.893734203627833*^9, 3.8937342037774477`*^9}, {
   3.894093495653111*^9, 3.8940935105024767`*^9}, {3.894093908512624*^9, 
   3.894093916667006*^9}, {3.894095239268237*^9, 3.8940952412032537`*^9}, {
   3.894179604815546*^9, 3.8941796276813993`*^9}, {3.894179684120859*^9, 
   3.894179703103363*^9}, {3.894179990345315*^9, 3.89417999069291*^9}, {
   3.894180275763051*^9, 3.894180277970387*^9}, {3.894189393987368*^9, 
   3.894189395211512*^9}, {3.894379773173555*^9, 3.8943797734569187`*^9}, {
   3.8943798400878487`*^9, 3.894379840301169*^9}, {3.8945104940195436`*^9, 
   3.894510495951283*^9}, {3.894521682904402*^9, 3.8945216845787086`*^9}, {
   3.894613818254665*^9, 3.894613821582696*^9}, {3.894693040553505*^9, 
   3.8946930846522818`*^9}, {3.894697702734737*^9, 3.894697704329954*^9}, {
   3.894704162247363*^9, 3.894704407281167*^9}, {3.894704448839838*^9, 
   3.894704534044654*^9}, {3.8947045713416033`*^9, 3.894704573095161*^9}, {
   3.89470461168255*^9, 3.894704655310755*^9}, {3.8947046936962633`*^9, 
   3.894704743331105*^9}, {3.8947048527720947`*^9, 3.894704945560277*^9}, {
   3.894704975734783*^9, 3.894705036351001*^9}, {3.894707588343643*^9, 
   3.8947076202226133`*^9}, {3.894947989041004*^9, 3.8949479937460318`*^9}, {
   3.894955554222252*^9, 3.8949556505162697`*^9}, {3.894955786145961*^9, 
   3.894955791365713*^9}, {3.894962175558201*^9, 3.8949623249018307`*^9}, {
   3.894968014257279*^9, 3.894968112918522*^9}, {3.895134647928751*^9, 
   3.895134651321505*^9}, {3.895134683946611*^9, 3.895134684441773*^9}, {
   3.895135158606455*^9, 3.89513520217866*^9}, {3.895135236634576*^9, 
   3.895135246715201*^9}, {3.895135307803032*^9, 3.8951353685078697`*^9}, {
   3.8951354107399673`*^9, 3.8951354684081*^9}, {3.895135530465576*^9, 
   3.895135552445189*^9}, {3.895135589324923*^9, 3.895135646471875*^9}, {
   3.895135923941635*^9, 3.895135968412393*^9}, {3.895136006157093*^9, 
   3.895136158740354*^9}, {3.895136398896204*^9, 3.895136398936442*^9}, {
   3.895136770448908*^9, 3.895136822625205*^9}, {3.895136919184548*^9, 
   3.8951369697971363`*^9}, {3.895137220471128*^9, 3.895137274517623*^9}, 
   3.895138950301*^9, {3.8951390140391493`*^9, 3.8951390502194*^9}, 
   3.895139080864933*^9, {3.895139127822165*^9, 3.895139168322157*^9}, {
   3.8951392049260807`*^9, 3.89513934816494*^9}, {3.895139412425527*^9, 
   3.895139420109324*^9}, {3.8951396794552383`*^9, 3.89513968917522*^9}, {
   3.895139723982843*^9, 3.895139725928928*^9}, {3.895139852223249*^9, 
   3.8951400800114117`*^9}, {3.895140173669313*^9, 3.8951402136509113`*^9}, {
   3.895140249291707*^9, 3.8951402789923773`*^9}, {3.895201786043973*^9, 
   3.895201787358708*^9}, {3.895400225761011*^9, 3.8954002284930477`*^9}, {
   3.8954108537186203`*^9, 3.8954108565864763`*^9}, {3.895410922431966*^9, 
   3.895411026987113*^9}, {3.895414506976482*^9, 3.89541454834208*^9}, {
   3.895414617817554*^9, 3.8954146278844976`*^9}, {3.895465606630259*^9, 
   3.895465607331668*^9}, {3.895467275833148*^9, 3.895467288223483*^9}, {
   3.89614766422917*^9, 3.896147665526792*^9}, {3.896149421682603*^9, 
   3.8961494218983793`*^9}, {3.896149540218688*^9, 3.8961495897138*^9}, 
   3.896149622315695*^9, {3.8961507799016867`*^9, 3.896150779944441*^9}, {
   3.8961586415689573`*^9, 3.896158646071303*^9}, {3.8961730075225697`*^9, 
   3.896173007558569*^9}, {3.896284133537023*^9, 3.896284134013144*^9}, {
   3.8963246920839777`*^9, 3.896324692549015*^9}, {3.896375475853154*^9, 
   3.896375476619587*^9}, {3.89650823631094*^9, 3.8965082367051973`*^9}, {
   3.896634782150486*^9, 3.896634823377825*^9}, 3.896642958113261*^9, {
   3.896672988335416*^9, 3.8966729904223127`*^9}, {3.8970321304381723`*^9, 
   3.8970321559860153`*^9}, {3.897273637867084*^9, 3.897273637878984*^9}, {
   3.8972737139289293`*^9, 3.897273714534342*^9}, {3.8973548791777477`*^9, 
   3.897354885346117*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"57a71c0f-bed2-4ba7-835f-435317dcf938"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/\
pynoza/funknoza/data/plot-order-0-a-5.pdf\"\>", " ", 
    GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxlnQe0F9X1trHf4u3cYqyJYouJoondvBO7sbcYC1ZUIvYee4ktRsVYsEXF
3kWDBUUOothAEZAqSu8djIKIfkbPu+83z9+VtbKexdyZM/s8v7b3Pmd+eeJZ
h5y8cocOHfZr6NDhf///839tA/a4sGns/l3XGGBuOmn0Ztt2Xj148oH3X7Le
96sG9975uMGrD14l+MrNNlxnQc+Vg/dvmXH66K4rBa+zyrNvpc4dgkdO+GKd
g1asSOZz+57cf4Oey4Pr7ph33KKtlgU/d/oFKw386OvgffZc8ci/un4VPH39
63Y/6ftFwasvWWvIqVstCP7jE5vVVXadHXzpkTsc8kzPacGvrLnPXfsOnhj8
5ZUv9R67YnTwY0N6nbH9R0OC27Z5e8klnf9DFo4XzidcLziPJziPNzjfT3C+
3+Acj+Acr+Acz+Ac7+A8H8F5vgrMZ3Ce7+DsQ3D2JTj7FJx9K677unHcvt1a
wz+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z
2z+z/QMLxwvnE64njEcYr3A/wv0K8RDiJcRTiLcwH8J8FZjPAvMdbP/gS7D9
g29F5bxOfXp+2hL+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+me2f
2f6Z7Z/Z/pntn9n+me0fWDheOJ9wPWE8wniF+xHuV4iHEC8hnkK8hfkQ5qvA
fBaY72D7B1+C7R98K26dsv2P/2v3z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M
9s9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/wMLxwvmE6wnjEcYr3I9wv8H2D/EK
tn+Id7D9w3yFH/YP8x1s/+BLsP2Db0XTj++GW/ZqDv/M9s9s/8z2z2z/zPbP
bP/M9s9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M9g8sHC+cT7ieMB5h
vML9CPcrxEOIlxBPId7CfAjzVWA+C8x3sP2DL8H2D74V93x67K6XVrb7Z7Z/
Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7Z7Z/
YOF44XzC9YTxCOMV7ke4XyEeQryEeArxFuZDmK8C81lgvoPtH3wJtn/wrVjn
/XN+/F/H8M9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/
zPbPbP/M9s9s/8DC8cL5hOsJ4xHGK9yPcL/B9g/xCrZ/iHew/cN8hR/2D/Md
bP/gS7D9g29Fr7f+/uMvkqbwz2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M9s9s
/8z2z2z/zPbPbP/M9s9s/8z2z2z/wMLxwvmE6wnjEcYr3I9wv0I8hHgJ8RTi
LcyHMF8F5rPAfAfbP/gSbP/gW7Hxj79Gjt213T+z/TPbP7P9M9s/s/0z2z+z
/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z/QMLxwvnE64njEcYr3A/
wv0K8RDiJcRTiLcwH8J8FZjPAvMdbP/gS7D9g2/Fs8/877/G8M9s/8z2z2z/
zPbPbP/M9s9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M9s9s/8DC8cL5
hOsJ4xHGK9yPcL9CPIR4CfEU4i3MhzBfBeazwHwH2z/4Emz/4Fux5U9viO3+
me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+
me0fWDheOJ9wPWE8wniF+xHuV4iHEC8hnkK8hfkQ5qvAfBaY72D7B1+C7R98
K356O7y0Ifwz2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z/TPb
P7P9M9s/s/0z2z+wcLxwPuF6wniE8Qr3I9yvEA8hXkI8hXgL8yHMV4H5LDDf
wfYPvgTbP/hW7PBTQrA+/DPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z
/TPbP7P9M9s/s/0z2z+z/TPbP7BwvHA+4XrCeITxCvcj3K8QDyFeQjyFeAvz
IcxXgfksMN/B9g++BNs/+Fb0/9/PkX3b/TPbP7P9M9s/s/0z2z+z/TPbP7P9
M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7BwvHA+4XrCeITxCvcj3K8Q
DyFeQjyFeAvzIcxXgfksMN/B9g++BNs/+JbrwXXoP6hD/0Ed+g/q0H9Qh/6D
OvQf1KH/oA79B3XoP6hD/0Ed+g/q0H9Qh/6DOvQf1KH/oA79B3XoP6hD/0Ed
+g/q0H9Qh/6DOvQf1KH/oA79B3XoP6hD/0Ed+g/q0H9Qh/6DOvQf1KH/oA79
B3XoP6hD/0Ed+g/q0H9Qh/6DOvQf1KH/oA7131rUf2tR/61F/bcW9d9a1H9r
Uf+tRf23FvXfWtR/a1H/rUX9txb131rUf2tR/61F/bcW9d9a1H9rUf+tRf23
FvXfWtR/a1H/rUX9txb131rUf2tR/61F/bcW9d9a1H9rUf+tRf23FvXfWtR/
a1H/rUX9txb131rUf2tR/61F/bcW9bca1N9qUH+rQf2tBvW3GtTfalB/q0H9
rQb1txrU32pQf6tB/a0G9bca1N9qUH+rQf2tBvW3GtTfalB/q0H9rQb1txrU
32pQf6tB/a0G9bca1N9qUH+rQf2tBvW3GtTfalB/q0H9rQb1txrU32pQf6tB
/a0G9bca1N9qUH+rQf2tBvWPatQ/qlH/qEb9oxr1j2rUP6pR/6hG/aMa9Y9q
1D+qUf+oRv2jGvWPatQ/qlH/qEb9oxr1j2rUP6pR/6hG/aMa9Y9q1D+qUf+o
Rv2jGvWPatQ/qlH/qEb9oxr1j2rUP6pR/6hG/aMa9Y9q1D+qUf+oRv2jGvWP
atQ/qlH/qEb9oxr55yrkn6uQf65C/rkK+ecq5J+rkH+uQv65CvnnKuSfq5B/
rkL+uQr55yrkn6uQf65C/rkK+ecq5J+rkH+uQv65CvnnKuSfq5B/rkL+uQr5
5yrkn6uQf65C/rkK+ecq5J+rkH+uQv65CvnnKuSfq5B/rkL+uQr55yrkn6uQ
f65C/rkK+b9K5P8qkf+rRP6vEvm/SuT/KpH/q0T+rxL5v0rk/yqR/6tE/q8S
+b9K5P8qkf+rRP6vEvm/SuT/KpH/q0T+rxL5v0rk/yqR/6tE/q8S+b9K5P8q
kf+rRP6vEvm/SuT/KpH/q0T+rxL5v0rk/yqR/6tE/q8S+b9K5P8qkf+rRP6v
EvmXCuRfKpB/qUD+pQL5lwrkXyqQf6lA/qUC+ZcK5F8qkH+pQP6lAvmXCuRf
KpB/qUD+pQL5lwrkXyqQf6lA/qUC+ZcK5F8qkH+pQP6lAvmXCuRfKpB/qUD+
pQL5lwrkXyqQf6lA/qUC+ZcK5F8qkH+pQP6lAvmXCuRfKpB/qUD+JXwrfmqH
WWeN8M9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbP
bP/M9s9s/8DC8cL5hOsJ4xHGK9yPcL/B9g/xCrZ/iHew/cN8hR/2D/MdbP/g
S7D9g2/FsP+9G85bLfwz2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z
2z+z/TPbP7P9M9s/s/0z2z+wcLxwPuF6wniE8Qr3I9yvEA8hXkI8hXgL8yHM
V4H5LDDfwfYPvgTbP/hW/NQO/daq4Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+
me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/oGF44XzCdcTxiOMV7gf4X6FeAjx
EuIpxFuYD2G+CsxngfkOtn/wJdj+wbdi6v/SgbeuEv6Z7Z/Z/pntn9n+me2f
2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7R9YOF44n3A9YTzC
eIX7Ee5XiIcQLyGeQryF+RDmq8B8FpjvYPsHX4LtH3wrfloOd+zK4Z/Z/pnt
n9n+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/oGF
44XzCdcTxiOMV7gf4X6FeAjxEuIpxFuYD2G+CsxngfkOtn/wJdj+wbfim/+V
47ZcKfwz2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9
M9s/s/0z2z+wcLxwPuF6wniE8Qr3I9yvEA8hXkI8hXgL8yHMV4H5LDDfwfYP
vgTbP/iW90PogP03OmD/jQ7Yf6MD9t/ogP03OmD/jQ7Yf6MD9t/ogP03OmD/
jQ7Yf6MD9t/ogP03OmD/jQ7Yf6MD9t/ogP03OmD/jQ7Yf6MD9t8IFo4Xzhdc
3n8jxhNc3n8j7ie4vP9GxCO4vP9GxDO4vP9GzEdwef+NmM/g8v4b4UNwef+N
8Cm4vP53RSqv/12Ryut/V6Ty+t8Vqbz+d0Uqr/9dkcrrf1ek8vrfFam8/ndF
Kq//XZHK639XpPL63xWpvP53RSqv/12Ryut/V6Ty+t8Vqbz+d0Uqr/9dkcrr
f1ek8vrfFam8/jdYOF44n3A9YTzCeIX7Ee5XiIcQLyGeQryF+RDmq8B8Fpjv
4PL63/AluLz+N3zL60GWh3/m8vqj5eGfubz+aHn4Zy6vP1oe/pnL64+Wh3/m
8vqj5eGfubz+aHn4Zy6vP1oe/pnL64+Wh3/m8vqj5eGfubz+KFg4XjifcD1h
PMJ4hfsR7leIhxAvIZ5CvIX5EOarwHwWmO/g8vqj8CW4vP4ofMv9qEvDP3O5
/3lp+Gcu9z8vDf/M5f7npeGfudz/vDT8M5f7n5eGf+Zy//PS8M9c7n9eGv6Z
y/3PS8M/c7n/eWn4Zy73PwcLxwvnE64njEcYr3A/wv0K8RDiJcRTiLcwH8J8
FZjPAvMdXO5/Dl+Cy/3P4VuxX7efVoSEf2b7Z7Z/Zvtntn9m+2e2f2b7Z7Z/
Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7BxaOF84nXE8YjzBe4X6E+xXi
IcRLiKcQb2E+hPkqMJ8F5jvY/sGXYPsH34rj/peO7vRV+Ge2f2b7Z7Z/Zvtn
tn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2DheOF8wvWE
8QjjFe5HuF8hHkK8hHgK8RbmQ5ivAvNZYL6D7R98CbZ/8K0496cNERaFf2b7
Z7Z/Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7
BxaOF84nXE8YjzBe4X6E+xXiIcRLiKcQb2E+hPkqMJ8F5jvY/sGXYPsH3/J+
bPPDP3N5/7/54Z+5vP/f/PDPXN7/b374Zy7v/zc//DOX9/+bH/6Zy/v/zQ//
zOX9/+aHf+by/n/zwz9zef+/+eGfubz/X7BwvHA+4XrCeITxCvcj3K8QDyFe
QjyFeAvzIcxXgfksMN/B5f3/wpfg8v5/4VteDzw7/DOX15/PDv/M5fXns8M/
c3n9+ezwz1xefz47/DOX15/PDv/M5fXns8M/c3n9+ezwz1xefz47/DOX15/P
Dv/M5fXnwcLxwvmE6wnjEcYr3I9wv0I8hHgJ8RTiLcyHMF8F5rPAfAeX15+H
L8Hl9efhW3H4T/9NC//M9s9s/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/M
9s9s/8z2z2z/zPbPbP/M9g8sHC+cT7hesP3DeIPtH+432P4hXsH2D/EOtn+Y
r/DD/mG+g+2f2f6Z7Z/Z/l360xvixPDPbP/M9s9s/8z2z2z/zPbPbP/M9s9s
/8z2z2z/zPbPbP/M9s9s/8z2z2z/zPbPbP/AwvHC+YTrCeMRxivcj3C/QjyE
eAnxFOItzIcwXwXms8B8B9s/+BJs/+Bb8dPPkT6jwz+z/TPbP7P9M9s/s/0z
2z+z/TPbP7P9M9s/s/0z2z+z/TPbP7P9M9s/s/0z2z+z/QMLxwvnE64njEcY
r3A/wv0K8RDiJcRTiLcwH8J8FZjPAvMdbP/gS7D9g295P8Ah4Z+5vP/kkPDP
XN5/ckj4Zy7vPzkk/DOX958cEv6Zy/tPDgn/zOX9J4eEf+by/pNDwj9zef/J
IeGfubz/5JDwz1zefzJYOF44n3A9YTzCeIX7Ee43uLz/ZMQruLz/ZMQ7uLz/
ZMxX+FHefzLmO7i8/2T4ElzefzJ8K35OB74c/pntn9n+me2f2f6Z7Z/Z/pnt
n9n+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntH1g4XjifcD1hPMJ4hfsR
7leIhxAvIZ5CvIX5EOarwHwWmO9g+wdfgu0ffDML/gn+Cf4J/gn+Cf4J/gn+
Cf4J/gn+Cf4J/gn+Cf4J/gn+Cf4J/gn+Cf4J/gn+Cf4J/gn+Cf4J/gn+Cf4J
/gn+Cf4J/gn+Cf4J/gn+Cf4Jn7/C56/w+St8/gqfv8Lnr/D5K3z+Cp+/wuev
8PkrfP4Kn7/C56/w+St8/gqfv8Lnr/D5K3z+Cp+/wuev8PkrfP4Kn7/C56/w
+St8/gqfv8Lnr/D5K3z+Cp+/wuev8PkrfP4Kn7/C56/w+St8/gq/P4TfH8Lv
D+H3h/D7Q/j9Ifz+EH5/CL8/hN8fwu8P4feH8PtD+P0h/P4Qfn8Ivz+E3x/C
7w/h94fw+0P4/SH8/hB+fwi/P4TfH8LvD+H3h/D7Q/j9Ifz+EH5/CL8/hN8f
wu8P4feH8PtD+P0h/P4Qfn8I+Rch/yLkX4T8i5B/EfIvQv5FyL8I+Rch/yLk
X4T8i5B/EfIvQv5FyL8I+Rch/yLkX4T8i5B/EfIvQv5FyL8I+Rch/yLkX4T8
i5B/EfIvQv5FyL8I+Rch/yLkX4T8i5B/EfIvQv5FyL8I+Wch/yzkn4X8s5B/
FvLPQv5ZyD8L+Wch/yzkn4X8s5B/FvLPQv5ZyD8L+Wch/yzkn4X8s5B/FvLP
Qv5ZyD8L+Wch/yzkn4X8s5B/FvLPQv5ZyD8L+Wch/yzkn4X8s5B/FvLPQv5Z
yD8L9Teh/ibU34T6m1B/E+pvQv1NqL8J9Teh/ibU34T6m1B/E+pvQv1NqL8J
9Teh/ibU34T6m1B/E+pvQv1NqL8J9Teh/ibU34T6m1B/E+pvQv1NqL8J9Teh
/ibU34T6m1B/E+pvQv1NqL8J/QdC/4HQfyD0Hwj9B0L/gdB/IPQfCP0HQv+B
0H8g9B8I/QdC/4HQfyD0Hwj9B0L/gdB/IPQfCP0HQv+B0H8g9B8I/QdC/4HQ
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
wz8cL5xPuJ4wHmG8wv0I9yvEQ4iXEE8h3sJ8CPNVYD4LzHcwnj8d/sEn+ubn
oYd/Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7Z7Z/Zvtntn9m+2e2f2b7
Z7Z/ZvsHFo4XzidcTxiPMF7hfoT7DbZ/iFew/UO8g+0f5iv8sH+Y72D7B1+C
7R98K67738+RbnXhn9n+me2f2f6Z7Z/Z/pntn9n+me2f2f6Z7Z/Z/pntn9n+
me2f2f6Z7Z/Z/pntn9n+gYXjhfMJ1xPGI4xXuB/hfoV4CPES4inEW5gPYb4K
zGeB+Q62f/Al2P7Bt/x7uB75l3rkX+qRf6lH/qUe+Zd65F/qkX+pR/6lHvmX
euRf6pF/qUf+pR75l3rkX+qRf6lH/qUe+Zd65F/qkX+pR/6lHvmXeuRf6pF/
qUf+pR75l3rkX+qRf6lH/qUe+Zd65F/qkX+pR/6lHvmXeuRf6pF/qUf+pR75
l3rkX+qRfwnfcj9qu3/mcv9zu3/mcv9zu3/mcv9zu3/mcv9zu3/mcv9zu3/m
cv9zu3/mcv9zu3/mcv9zu3/mcv9zu3/mcv9zu384XjifcD1hPMJ4hfsR7leI
hxAvIZ5CvIX5EOarwHwWmO/gcv9zu3/wib7lfEwD8n8NyP81IP/XgPxfA/J/
Dcj/NSD/14D8XwPyfw3I/zUg/9eA/F8D8n8NyP81IP/XgPxfA/J/Dcj/NSD/
14D8XwPyfw3I/zUg/9eA/F8D8n8NyP81IP/XgPxfA/J/Dcj/NSD/14D8XwPy
fw3I/zUg/9eA/F8D8n8NyP81IP8XvuX1wI3hn7m8/rwx/DOX1583hn/m8vrz
xvDPXF5/3hj+mcvrzxvDP3N5/Xlj+Gcurz9vDP/M5fXnjeGfubz+vDH8M5fX
nwcLxwvnE64njEcYr3A/wv0K8RDiJcRTiLcwH8J8FZjPAvMdXF5/Hr4El9ef
NyL/3Ij8cyPyz43IPzci/9yI/HMj8s+NyD83Iv/ciPxzI/LPjcg/NyL/3Ij8
cyPyz43IPzci/9yI/HMj8s+NyD83Iv/ciPxzI/LPjcg/NyL/3Ij8cyPyz43I
Pzci/9yI/HMj8s+NyD83Iv/ciPxzI/LPjcg/NyL/3Ij8cyPyz43IP7f79/N6
kKbwz1xef9QU/pnL64+awj9zef1RU/hnLq8/agr/zOX1R03hn7m8/qgp/DOX
1x81hX/m8vqjpvDPXF5/1BT+mcvrj4KF44XzCdcTxiOMV7gf4X6FeAjxEuIp
xFuYD2G+CsxngfkOLq8/Cl+Cy+uPmlD/aEL9own1jybUP5pQ/2hC/aMJ9Y8m
1D+aUP9oQv2jCfWPJtQ/mlD/aEL9own1jybUP5pQ/2hC/aMJ9Y8m1D+aUP9o
Qv2jCfWPJtQ/mlD/aEL9own1jybUP5pQ/2hC/aMJ9Y8m1D+aUP9oQv2jCfWP
JtQ/mlD/aEL9own1jybUP9r9+3k/wI7hn7m8/2TH8M9c3n+yY/hnLu8/2TH8
M5f3n+wY/pnL+092DP/M5f0nO4Z/5vL+kx3DP3N5/8mO4Z+5vP9kx/DPXN5/
Mlg4XjifcD1hPMJ4hfsR7je4vP9kxCu4vP9kxDu4vP9kzFf4Ud5/MuY7uLz/
ZPgSXN5/siPqb82ovzWj/taM+lsz6m/NqL81o/7WjPpbM+pvzai/NaP+1oz6
WzPqb82ovzWj/taM+lsz6m/NqL81o/7WjPpbM+pvzai/NaP+1oz6WzPqb82o
vzWj/taM+lsz6m/NqL81o/7WjPpbM+pvzai/NaP+1oz6WzPqb82ovzWj/taM
+lv4ltdjtvtnLq//bffPXF7/2+6fubz+t90/c3n9b7t/5vL633b/zOX1v+3+
mcvrf9v9M5fX/7b7Zy6v/233z1xe/9vuH44XzidcTxiPMF7hfoT7FeIhxEuI
pxBvYT6E+SownwXmO7i8/rfdP/hE33I9rgX13xbUf1tQ/21B/bcF9d8W1H9b
UP9tQf23BfXfFtR/W1D/bUH9twX13xbUf1tQ/21B/bcF9d8W1H9bUP9tQf23
BfXfFtR/W1D/bUH9twX13xbUf1tQ/21B/bcF9d8W1H9bUP9tQf23BfXfFtR/
W1D/bUH9twX13xbUf1tQ/w3f8n5s7f6Zy/v/tftnLu//1+6fubz/X7t/5vL+
f+3+mcv7/7X7Zy7v/9fun7m8/1+7f+by/n/t/pnL+/+1+2cu7//X7h+OF84n
XE8YjzBe4X6E+xXiIcRLiKcQb2E+hPkqMJ8F5ju4vP9fu3/wib7lenAr+g9a
0X/Qiv6DVvQftKL/oBX9B63oP2hF/0Er+g9a0X/Qiv6DVvQftKL/oBX9B63o
P2hF/0Er+g9a0X/Qiv6DVvQftKL/oBX9B63oP2hF/0Er+g9a0X/Qiv6DVvQf
tKL/oBX9B63oP2hF/0Er+g9a0X/Qiv6DVvQftKL/oBX9B63oPwjf8n4Ibdh/
ow37b7Rh/4027L/Rhv032rD/Rhv232jD/htt2H+jDftvtGH/jTbsv9GG/Tfa
sP9GG/bfaMP+G23Yf6MN+2+0Yf+NNuy/ESwcL5xPuF5wef+NGG9wef+NuN/g
8v4bEa/g8v4bEe/g8v4bMV8F5jO4vP9G+BBc3n8jfAq2f7uMOvLosRWL4/k/
r816tMcdnRano98fNa1hzYnpkTsbXnm5eUk8D2jdpYs+XnrykvTgsb++vjhz
WLrnpT/cd+9jS+L5QB81373jtiOXpA/aJhzac7/X0+tTb7pi6eQl8bwg8+Az
Kh4+dvbzwr/roulf9533+pI0f9E7vZ844kPh/Nr3h8UnbnrikrRyr1P32H3a
Z8L4dFxl798/MWpxapu99cLO+4wX7k8Xnz5+2SfLFqXhd9XMntN50v/3/OXv
mq57elICa9vhDTPu+HBhPC/pr33P3eKHmxZGPDpvcea8npMWpjMe+fvYw1Yf
nkZuumn3qdu0P6960JXH3fZ05YLg27d6fM9tzliUDhn+yoPXT3o9/WvBffu+
X78gbdut6t2j3xucVt1vpZOqr2h/vvXBs2ZfuN7MBcH+9zUHndp05kbPy/++
c9c979iuz2P8e+Hv9ezS4oQF+y1KPfrtM2bh3A80rnWLc0/5ZEH64/3v73Df
9m8K4xfGryufXufrnWYtTPt+33X7Hpd+phvGnL1v1w4LUssNB+z91s0fC/HR
qA/qL5jwp4Xpii1GrLX5HZ9rty2/3rzX7otS7Q9bHXXjbVMZX237xcF95hy3
MP17q/dnzvvnjHge8SWPn7fZjr+aFc9bPuGGx2/72zntz2tOfW8ecNcBQ8nC
8TyfHir6nrnzkHnxfKxxE/bqvdIjc2K+xyw75aDjdpifPthhzmZHdZ2Uzryt
5f6vnmp/XvTXy695dY3N5wRfcFPNuH2q56aNutT8qfe9X6SOrV9dOfuxeeHL
8klb3fTgsvbn+3b5d9vJWx8+J81Zr77l1nNGpofuPf+F29+cG76cdcjKVw+8
qv35v7t/99zFZ288L1Vssu6dtX8ekPZe8VXHDv+anZ45rOa309//KH103+xV
vrpyXvgybcTI7rtcOCfY//5W7xu6H9jaS/73S1ba565lwx/i3wt/r+Nu/mfF
b9aflzY9+t6dr1wwSPOPWDG64sA5aZ3pjzz3zlZvCeMXxq8dv/rtwr1Wn59e
7bJn3UFdR2nL2b/+9Lvt56Y111h5m+v6D9eGEzft/VL32emd4y99/vzOnwjx
E+Knk4Z9e9Lqb8xPB+34xFrn95movdZvO/6KfnPTwOe3vPuiE77Q5mf8/piv
+89OU6c3Llv9qLHC/Anzp4NO0PdP7j4vDX/qxOvmrD5V32064J3DR85OFS/u
33mNHpMEP3Tz8gVnXX3S/HTI+Evvf+i/szT7i5ZT2taak/5583PF8oen0y/d
efbLV+90ytx0zKYr5t7Yf2487/ig+0Yd8dfW+fE858OWrP/fA4+fEXzLa6O6
tvxpcvBvWs+95qiNPw8+fcL+6y655VOycLxwPuF6WrDpI3vd/czM//P86jw+
1Q+4bPRRK82I18szIxoPufeaGfF6efW6zRYcvc/MeD0c9PgWzaf0bn++8ANr
TBmrTtOTDv3oN68smpAeuOCI/zwycGa8HpoWb7nF3PemB6cN3730yTtnpAc2
6fniTueMSAfu90Pn0/rNjNdDp+eHPrt3xxnB39Y83GmT09ufV3zEs3/eb/BZ
s9KqOy08/8WjXk/rP33ma4ecPSNtdd7Lf2na/d0044nrfzXu7Glpwgdzv/7k
qCHp/UfPuGnfnrPi9fL5W51mPNY0M3jB6C92//626cE+/g8zth2zS48X5OPX
GX/NmGWb3Sgfv+Xf/junuPQRnl84v3B+zbzq6r07rTorbdQyYbfBV3+gd3e9
cu/P+sxIj9+63ridf/eOHl718r2vPXl62re238RjPn5TiI8QHyE+mnzp7MEP
7zgrPXr7Nwvn7jVKexdznq/5akba56hnxo9+eYReWHXubZc8Pz3N/1WXDwau
O0wdP5x7zoxTpqVOo9fvdnTDx8L8CfOnVx8ZV33perPSgIsnTHzxyQm678rN
lm375ozU97FnLrp+zHhdeczF0xcfMT3959MLartUjhP8EfzRFy9tO3G9OTNT
j0OXDd3x9Kna+q8T33hklxlptcvu2O2GvpN1wwb/uGvjHtPSJY/95rURq08S
/FSP5xd0uGfqzLTTaced+H3nWWq+56r+9z0+Pe1y/aD9V5s7nX6r2Kxnz+Pu
n5X2mnTvGl1em69H16m54du9p6eT5t01/NGj5vD1Es+Pfntsty73TlzY/nzt
N7+8ar2Rc9IFz75x5nobzkizpj/ZZfrVC+P4NTf47sjvBsyI47Xl75e3Hjg1
+ICLX3zp+e0mBb8xsvaIWSeMDx5x+7+/G7DaqOD7ln696gO3f8x/F/5dOJ82
f2t520X92p/njPEI4+H425/v/fP9as430z5dOmFSuvLg+WdvPHVenC/HRyd8
/Fj/bYZNiveTuu4Nt/1xjanxfnLLoS+eeefk9udF3/vWygt7nz0l3k9e2OnO
0zppUvCrw6Ydf2jjlHTioG92nH/7+PThfYcP7z1xaryfTF7prsaF20wJ/q7b
Z4dsecOk4LbuzZ93PmpyOqnbDqPnnvFZWv/alTqftfLUeD9ZdePPBu72wOTg
mR88cVjbtpOCTxwz+JQLv5+aLrx1hz2nLHwlHfbtYW+3dZ6Smk8cesQhuw9M
e67z5dpvnjQpLfju6jW36fFhGrLry0++1Nr+PPUzWy97/bBPpwTXz93jw29u
nBz8nwF14+7746Rg/33tm532Ov4PL8l//+4OlxdP3nq//PfHL9p+u5Nfvzn+
/h/Nn+90/aPP8vrC9YXrC9fXaosfen/Tw6amFy885Pk1+n6gSas82/OY3aek
d6687tpHTn9XbzW/emqP301Oo298/chdNhigezd5e7t3N5qUxm04+rjeT74m
xFeIrxBfrdip07r71U1LG99d9G06e7RGbnTxNuNrpqaeg/b6fvEpI/V8zeB9
Tl9zSqr47wG7De8y4sff8+se/13V5HTxRn++8aXDhqnLhLMv/GflpDT8yTfu
+2XPTwQ/BD8EP3RjdY/Vzu02NQ2/b+0z6l6boE437jvum8OnpA8O77vd2Td/
oYGrrvHi5btNTv3rj1h52HGf6/irB167SudJqc/gr4Z0/t1YwV/BXz20Q9Pn
j308Nc1/+IxFh9ZO08C9Fr/+6fU/Hn/tintueGeKph0+7O7vNDldfsotxZsX
T1ZF197nb7psYtp9n3Vnzv/NJOH1I7x+NOOcR/81ZIOp6eXLdlg64NeztPuy
p0cce/bktPLilZ9tvHCGel3Vu+OiNDEdcuqQLl0HTOPrM55Pfs0PjX/foHJx
unTvG0557YUpP/6eaxj25N/n6fe1Gw7a6PeT0lorr7ztSavMiePPuuDyC5t/
/N5tHrL2Jf84ao8f3w+vXXf0NltMTadM73/Xqt0W8f0n/v6Sth9OuuOsme3P
h+995aheI9ufH7/yAR3HnvvglOAxq1R/fPI5k9IRd/S6a/enJqYH+36086DV
F8f5Hnz6kv0/vv/LOP7O0547Yd4x44Iv6HVwx1/0Hxl81Lff7z/h8U+DJ17Y
6diVxw4kC38v/L0uemDepsv/9uPvltuOX3pGzeKE8QjjEe5PuD/GR4iPNvhg
pbabuk+I73OYD2E+dNa6H73y699+mSaevGlx6Kw56d79+vQdOWNsvD9j/nVf
RceXd22emHb+oO8xL609PW00euZxM+78PN6vN1q8f7HS0vGp973X/e6WeZPT
Dkvb/vj2pl/G+/Vn616Zlo0ZG3zITSuffNybE+L9+LWVDzn1gbPHt+cfLuv1
17GdxgY/ftjQdfpO/DydufHtS/d9d0T61Ygd//H6ExPi/fjc/n8c+vL08cED
n9674/Mbjwv++IqXzv121wnpgL+98cl6y99Ifd8eu2y73T5PG/fZre/iuwal
fz3RoXr6sgnxfvt0t3+udeaFXwQP2Lxt068XjwseM/fRba84a0yw/373mnc6
DLvnOfnvf3f2pyu1Xt5D/vsNdpy24rzt7om/X7fvKemHHXvz+sL1hesL19em
9684eK01f3x/2Hq3Yave9ZEuOXbHrx/c8Mv0r2t73tbnoff02PV/27t6y/Fp
4mdz9u/6zEANfeH1+y7acVw6er+r2jY97S0tG/XN3Cl7jEnfzN/0rhuufEWI
rxBfIb56+ft1btx2mx9927nTzWdsPVr/veCvH3Z66Mu06LumZx48eaRumH/P
NV+OHp/Of2vlD4feM0JrnfrBTj3rP0/fXL5oRochw/TMhG++OnCfsWnJZQNq
un4/VPBD8EPwQ/2evn+z1aZOSE/c0Hf43RtO1Ox+5/5iVPWX6cJbHui+61+/
VNun+1Q/uc349HD1e52PuHm89pyywXcXHT0uDb5pwTfdnx+n87/+Zu7e145J
X6+xVv+rho4R/BX81VtPf1b02GlCuv2hSdu+ct9UXXhSGnBWxy/S2nu+t/GQ
a6doq3WfKQ6cNy49PveZlimnT9asUXcO+O17Y9JWd9y2+reHTxJeP9rxzF2f
ubdpQvrmlstvGHfILF1+4D9P3G+P8anHV/v/5ogZM/T2VqN+8cOFY9NmR683
YsSl04XXq5+nmZ4ZfNLKn6+9JJ130N3Pnn/8xPTEhL1uumzpfB157PUbDeg9
Pp28/mFjWmbP1eC1Jy66++ExaaPjjt/kpc9n8/0jzndFy1nNi25b6OePppmL
NG2bN+cFH/CPK1pPX3lO2ubMh9Z47o1x6YcTPrl0y2MWxt+//Nz2J/17zMw4
/vyLGjp9OWZ68OztD/7lXkunBs/4xf3/+f1+U4Knfjd1j40enpQuOeHdm1Y7
+Edf1v5grdNmLo7z39blquefWTwhjr9uw7qO5784PvjyWf++ZJfTx7af/9uH
Dttj8Mjgk79Z5e01Jg0LHj5ts+122XtwcJ+D1lx2xK/f5L8L/y6cXzi/Tpr9
q4UPHDQ8dbr18S8uOHpJwviF8QvjF+IlxEuIl17v++khL3wyPG0y86pNjh/Z
Pn95PoT5EOZXmF8tWmOt7f7S5eO06+33dBvy1fz0n4FVrd0qRqXla4785qqd
5yT4oqt7vbX/0Ud+HJ8n8FPjl17zxF/+OyJ9M2h8jymXzUh3P3v5nn3mfRaf
J41dLn7qL498nE677sAt7/3TtNTz2y6bPzLgs3RclyPXeGyfyemlfzZV9W4Z
GZ8nX1bN3OvA94YGr/rVQR23/W5Eajh10KlHvv15uuTirb7+299GxufJFTMu
+3jYVcOC+0+fPf7pP4+Oz4stthhx13GrfRZ87zlvHtDc59PgQ4ZfcXBd64g0
f5v9zrp/wcDU5+YhF828ZWR8Hlz5+I0PPHPd8OA7rrjpmrHffhLs45dMWH+/
O5Y/Jh+/VZp2/B9vvSyO73/gkY9tuP5zPL9wfuH8uniDo1fq9LfRabvnz3/m
/UOG6M6RPZ5Y+4SR6TeV9f98sfkD9f7He/s27jMibXjys2f0HPOOhui7hRWd
h6Wtr7nlwe+3TRo666Qtfuj8SVp3x3dP+KTfq0J8hPgI8dHt3x57+PX/GZXO
P2DJFut8O0qLL96m6sjZn6Uh3Y48/oRfj9Sh36yRfv3LEWmja9MdTxwzQn0u
GH/e90cMS5f9u9P7c24Zps1mnnDwI+sOTU+c1frfE64YKsyfMH/qMLFh+42G
jkrj7+3Q55QjJmqjL/sPeXKNkem0T7d664NJX2qf8d1P+HUxIq17xvGN73b8
QmeOa/v6hYuHpaGVPU5Ne32ujV66ufnkE4emq55I/d64ZKzgl+CXjvlv/67/
XDIqjTtz0QZbbztNe7y58eZ7z/8sPXXewNHdt5qq315964JVZg1PF158x62P
bz5FrXt93SdN+TTtfnnXPSZsNFkdftHvq6/7fZwar/n9d23rTxL81x1nLx9w
3isj04z+u6969wmzNHnVBy//+wYj0pN//u/nv2iaqa3uLXa86+ZP06nzH//P
Q+9O5+vNz/dO02+es/T5F5akxzc54oJfvTkynXD9koWfbTVfe227yhm7rjk8
/bVh/Y7PHjpXw2469sN33/jxe9QDf9ru6gvb/37RQ73q3t4pnreeZp+zxVOf
Vsfz1tPB/+i69i7vzA1+/ZEHbn36ktlpcXWv9154aUQavfr5dz757cI437Hb
//KSg96fGcfv9ehlDy1ba0bwljs+seLZ8+J57an5qs5H3rTm1ODlg/r1OeXx
ycGTqveu3/0Pk9LGp35196CVP0sPzur24tEXLInrrXb1Zt91fmNCHL9o5rVn
XLJifPAXB3355cBiXPBG9/X964vd43nw6bVe/c4b9avPgv/0dLp8xdhPg/se
3+Hm+6Z+GDz8xTXG/fXjfvx34d+F6wnXE66nUyd3eHTo42+mTfdda/q80UsS
7k+4P+H+gnN8g3N8g3N8g3N8NXTIin3W/OrN1HHT724cfHq7D3k+4/g8n2q4
5uRR51R9kMr90eFPHJ/9Cc7+qO+sfT5c6aW30z2/3Xrru9eZl1Z/YNQLW1cP
ScccesOMFZfPbp/Pn/2k71rnnFOaVh/3Rjr3PwOX39B1Vjr/qfqjhx42KK36
yIfprK4z0smntXa8Z/iH8Xnz9CcP97v4D6+nF7sO6PLg3Klpvb/847kdN30n
7f/axyOmbzQlzdz73W+37/xRmlv5+T5bdpmUrtjr8Y/OqhgQnzcbD/totdOG
9UsHdL/2jd+1TUgHTt3vvqLtvbTSu683Xfa7z9MZNSfseeVqH8XnzcU9Tht7
0uavt+ejev52tz8d805qHfHa0mUrhqdX7/n3D4df82F83tyz/yf3zXvjzeAB
x/Su7FK81/77JPPvBg0ZfevD9wn/rl0+eKj77nWD0/JXtzz/1JMG698v/L7r
0h6D0levbjR09c8GacWdg495rnFAmvfqWps/sfsA4frC9XX8Nhvudujrg9NB
H5553g8PjVaf0/aafNEt76ctB92xeevfR6rike5XP3DiO6n27dcn/bbbCPV9
ef0/XnNW/zSv3xf37LnfMJ34y25XDl7r1XTPOas93O/4T4T4CPHRq/sOW/+u
wR+mXS9YdeaL60/U1hu831A9fVBa7f0Lvrp5zy/1/Ff9Vrm6w8B03aOT217f
f7wO/tfJc+b9vl9a/aoDd5l62DjtvdPBQ8ee1iddf0y/E+qPGSPMn3q+NnbW
M6v+6HPrWhfUXjZNa/1yp7+seOf9tMk9v/nkzm5T9cA/HnjvwGvfSQvbdt1k
7cOnaOeZy/+6+3X90xv3/vmqXn+crN3f7L/nrFVeTX//Rfexm/x2kuCXLvvF
/Ud2P+b9tHS/rjf1/8Us3XnBFl2ebhyYLrtyad/O787QEb0uffuT2/umDi//
c/ZjZ0zXz49PezltsW6Xd5bOX5IGfHLu9cXywWnueReuelrjAo3vPuLvT931
buq14LbG3beZp8UN3Vb/5fFvpD93f3qD9Q6bw9dfnK/T8Z1XWXH9omR+6oqP
d+w4bkHwMXf1+/zdG+YFX9+7SoeePSeNPPOJc5d0fz9td8sva185epH+fshH
5x7Q/7V0xKebP7nz4PbzP/XYZgeOeGhW/P2/f/nSrv9qmRn8rwe33/bgW6YH
n/nhBZ9uvc604EtaO52rEVPar3/yZ037/WNy8B3/ufaVv/xxUnrp8u2f2umF
99NlZ+647V4fLYnrH/zro+9ea/mEOH6PLhdN2fNvXwTvcNsdW53/zbjg37z9
4uW9LhgTfM24vZ/vdvPI4P5PVTy7003Dg/87r8fB69YODV51j4uHrLHje2Th
fML5hPPpzOqKLb8+5Ul5vnE/wv0I9yPcjxBfIb5CfIX4qnufhW//4rdPyr4M
vqjH0aPOffb/+JLnW5hvYb4FvwS/9Nndg054t1tP2b9z62sunnX04+Ef/G33
7efx8PWi/vvP73nk0KdlH7fqdUavh0/vJvt4770Drh309hPh47lrb7fKnvu/
IPvY/+Q+p5zz7R2yj6d1X22Hpx+/M3wsHjxu7qRHXggfz1+85WP/3v5p2b/v
3lmx7K4Hr5P9m7/BiQc8PvyB8O/rD84+pdO6L4V/z+0yfshjdz0i+zek8rbX
9n//7+Hf7QMffWrfZc+FfzN7dt9z3LKesn+Zw798vvAvn0/2L59P9i+PP3zL
4w/f8vhl3/L4Zd9y/MK3HL/wLcdP9i3HT/Ytz1f4lOcrfMrzJfgUr5fsT/iV
/ZH98vF4/xN8Ft7//Pcpvx7Cv/x6EPwT3v+E9z/h/U94/xPe/4T3P8cr5feL
8N3/jvc/4f1PeP8T3v+E9z/h/U94/xPe/4T3P+H9T3j/C//y+7ny+3nC/Qj3
I9yPcD9CfIX4CvEV4qv8eaf8eZfy553y513CfAvzLcy3P4/jeXnwTfBN+fNe
+fM+5c975c/7lD/vlT/v43x4f/w/ftqX/H1E+ftIyt9HlL+PpPx9RPn7iL8v
x/P88vcl5e9LKX9fUv6+lPL3JeXvSyl/X1L+vpTy9yXl70v+Ph3PB8zf95S/
76X8fU/5+17K3/eUv++l/H1P+fteyt/3lL/v+fu38P07OH+fVf4+m/L3WeXv
syl/n1X+Ppvy91nl77Mpf59V/j7r7+/C9/fg/H1c+ft4yt/Hlb+Pp/x9XPn7
uL/fC9/3lb/v89+F6wvXV/69ofx7Q4iPEB/l3zfKv2+Uf98o/74R5k/595Ty
7ynl31PKv6eUf08p/54S/PLvN+Xfb8q/35R/v/n3npzfyL8XlX8vKv9eVP69
yNdf/D3yG0J+Q8hvyPmN/HtY+fdwnA/5DSG/IeQ3hPyGkN+Q8xv597/y7/+4
HvIbQn5DyG8I+Q0hvyHkN4T8hpDfEPIbQn5DyG8I+Q1fTzl/o5y/Sbg/4f6E
+wtGfkPIbwj5DcdXOV+lnK+K6yO/4fkMRj5DyGfYF+X8m3L+LeX8m3L+LeX8
m3L+rX0+c34j5/dUXl8e/jtfqJwvTDlfqJwvTDlfqJwvdL493s9zPlM5n5ly
PlM5n5lyPlM5n5lyPlM5n5lyPlM5n+n8vJCfD875WuV8bcr5WuV8bcr5WuV8
bcr5WuV8bcr5WuV8rfP7Qn4/OOejlfPRKeejlfPRKeejlfPRKeejlfPRKeej
lfPRrhcI9QKhXhCc8/HK+fiU8/HK+fiU8/HK+fiU8/HK+fiU8/HK+XjXA4R6
g1BvEOoNyvWGOD7XG1w/UK43COcXzi+cX7keolwPEeIjxEeIjzB/wvwp13OU
6zmCX4JfyvUj5fqRcv1IuX4k+O96lHI9iq8318Pk+mquhynXw5TrYcr1sDge
9VOhfirXT3O9TrleF3+P+qlQPxXqp0L9VK6f5vqjcv0xzo/6qVA/FeqnQv1U
qJ8K9VOhfirUT4X6qVA/9fmV67/K9d+E8QvjF8YvxEuIlxAv5Xq2cj07YT6E
+XD9PL7fY76F+VauzyvX51OuzyvX51OuzyvX5xN8cv1fqK/aT/cTKPcTpNxP
oNxPkHI/gXI/gft54vMg9zco9zek3N+g3N+Qcn+Dcn9Dyv0Nyv0N7v8R+n+C
c7+Gcr9Gyv0ayv0aKfdrKPdrpNyvodyvkXK/hnK/hvuJhH4ioZ8oOPerKPer
pNyvotyvknK/inK/Ssr9Ksr9Kin3qyj3q7gfSehHEvqRgnO/jnK/Tsr9Osr9
Oin36yj366Tcr6Pcr5Nyv45yv477h4T+JaF/SehfEvqXlPuX4u9z/1L8fe5f
cv+Rcv+ScH3h+sL1hesr92cp92cp92cp92cJ8RXiK8RXuV9MuV9M8EPwQ/BD
8FfwV7nfTbnfTXj9uF9OuV+Or1f348n9lbkfT7kfj+8ncTz6K+X+SjP6J4X+
SaF/Uu6fzP2Kyv2KcT30Twr9k0L/pNA/KfRPCv2TQv+k/165n1O5nzNhPMJ4
3E8q97PjfoX7Ve5HVe5HZfyE+DH+QvyV+2OV+2NT7o9V7o9Nub9W6K/0/Ltf
V7lfN+V+XeV+3ZT7dZX7dd0/L/TPB+f+YuX+4pT7i5X7i1PuL1buL065v1i5
v9j990L/fXDuj1buj065P1q5Pzrl/mjl/uiU+6OV+6Pdrx/vx7kfOzj3Ywfn
fnDlfvCU+8GV+8FT7gdX7gdPuR9cuR885X5w5X5w9/vH+3HuRw/O/ejBuf9d
uf895f535f73lPvflfvfU+5/V+5/d/99vN/m/vvg3H8fnPvvg/33uf8//j73
/8ff5/5/9+8r9/8L1xeuL1xfuL7yegfl9Q7K6x2U1zsor3dQXu8gxFeIrxBf
5fUYyusxBD8EPwQ/lNeDKK8HEfwV/BVeP8LrR3i9en2L8voWr38R1v/I63/w
fhTHY/2PsP5HWP8jrP8R1v8I63+E9T/C+h+fT7i+cH3l9UvK65fi/F7/k9dD
xfdd3L/XUymvp0p5PZXyeqo43uuD8nqseH/M67eU12+lvH5Lef2W1yPG+11e
L6a8Xizl9WLK68VSXi+mvF7M6xfj/SyvP2vPP/+8nk15PVvK69mU17OlvJ5N
eT2b1zfG+1VeH9f+/vbz+jvl9Xcpr79TXn+X8vo75fV3Ka+/U15/5/WQ8X6U
1/sF5/V+7e9fP68nVF5PmPJ6QuX1hCmvJ1ReT+j1ivF+k9crBuf1isE+Pq+H
jOPzesg4Pq+HFM4vnF84v/J6TuX1nMrrOZXXcyqv51RezynER4iPEB/l9abK
602F+RPmT3k9q/J6VsEfwR/BT/rN14/X5wrrg4X1wcL6YGF9sLA+WFgfLKwP
FtYH+3ocj9czK69nTnm9c7xe8/po5fXRKa+PVl4f7fX28XrN66+V11+nvP5a
ef2119/H6zGv3w7O68GV14OnvB5ceT14yuvBldeDe31+vB7z+vLgvF5deb16
yuvVlderp7xeXXm9utfvx+str38PzuvnldfPp7x+Xnn9vNffx+spr78P9r/n
9fvx73n9vvD3wt8r7x+gvH+A8v4ByvsHCOMXxq+8X4HyfgVC/IT4Ke+HoLwf
gjB/wvwp77egvN+C4Ifgl/dzEPaHEPaHEPaHEPaHEPaH8Pm8H4XyfhQp71cR
vub9LJT3s0h5vwvl/S68X0j4lPfPUN4/I+X9M5T3z/D+IeFL3n8jOO/fobx/
R8r7dyjv3+H9P8KXvP9HsP897x8S/573DxH+Xvh75f1LlPcvUd6/RHn/EmH8
wviV90tR3i9FiI8QX+/PIuzPYvZ+Lsr7uaS830u8H+T9YJT3g/F+NjEfeT8Z
5f1kvJ9NxDvvR6O8H433r4l4mvN+Nvx35f1wlPfDEc6vvJ+O8n46wviU9+NR
3o9HuD/9PyC2r+Y=
      "], {
       {RGBColor[1., 1., 1.], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
6dhsiF3pa4XOhYZvGe8Yw3eGZoz3O8Y8BP/qGabibyfKztTnGfoYehuqEYvq
1PvQngtfb2w0xWYvYj8Xvj7EsT62h9Lug/wC/O6Hj83R14T5DOhtGmV+52J3
DnM9m3kriHxDYjSCvp7MXYMgdzc1zFDGUDrI3b8InaGpLEtdfMMN3xhKBbn7
rNLoqB/k7tzU3xCeTvSLrwHyotc11Alyn3VbGQobWhqqGtIb0hlaQCtkKG5o
G+Tu/IrAL7nqhgyGashVpd4WmWKGRvgzwjCS/G7M2Ovju+4IS6BfPI2IVUNK
tWeSe8rB7tRnUp9FPF8Guc/D+qzUnf5Z2JMO6T5Mv/iCgt3nqf+IZwdipfjo
LqAeMVKsBjKmdvjaAZmS8A9CZjDzUI++EoyvPTIl6a8PTyHypAXQuilE/tUg
z9eTc+vIuXW0D5FzB8nBw+TwXPrU3sA6+472EXi+Q8d6cl5r4KhhgmGTYTPt
+cgsoH0MfRuD3f7xM+VG+Oajf3yU/k3oHR+lrfpxwyLW2zHaC7F1jPp6xvAd
45rD2E4gK5nvDdsMkw3LDEsNpwyL4fuFusolhu3wSmaSYaJhC5jI2HcFuzPQ
bur3aesMtDzYnYmmoGc749uM/GJ8O0GsNhCfZfh1Gh3LqN813DPsQO9y6A+w
6w9xe6pstEb3t8SnP3XRtCdpr8pPWYC69ijtT1Uoq1KvRr0PfPnQIX3KPeVg
K+ZKtisHu71L+vIGuz0xIJOPdl/klLfK5cLBLp8L027FGIpQl4/aIwviR1V8
rIkP32K3Fz4XCI58htQ11DEMMpQwFDe0gzYQ+gBDbUMt7LYxFEV/f+g1sdMf
DIBeDP626KyN3mLQitNfDJ0t2Ru1ZxZljK3xqTgyHYPdc07PtcGMYRC0Hww7
sVEbP8Sj51Q9ZH+Atx6yg4ltK+wpH5WX7RVT86M5e7n29LSGKqAqtPKGlIYU
7NWNDXkMTQx5aWczZGUfTMS+Xhw5yVcw+A0+Q076xZcQ+bzoLAd/CpAcWh30
1zZUNKRCZyVDGkNq9Ep/DuxWgC83zxf5ng9bTdAr/WXhaYQPadBbGV3SGY7/
/zNEBLnvyTIbslBX6SUOofialbqX/qzUxR+CvGJfwNDMEIZ8dvoyGWpSij8Y
egg0+RzNkMsQnXpufMyFn37iEqBFgx4d3jzYy8EYw/A5G/Xs0Avip/xtir/5
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
zqRy5TG58gia3iHV/ZHe89xIXbTk1lfWUM7j7qf0/qfumlQ/SLsMPMkMDQ25
DbkM39BWXTxfG0rDmxz+PPA38rj3beeiMym8kvkfuqRH6z6nx63lZPSXgacB
fJIthbzGovdudR8wD/2yo3tLvbN6hbrK9Yx/A3W9J6n3Jdeg4zp6dIene2G9
y6p3yHUvrvtxva+t9yKP0icevfc6k3IWNteiV/o2ofMgMZ1N/K9i8zA65+Hj
r/i2Dj2XsXUQ2X3YC9yJ78N2I+Ks+dC+3cMw29DEkNfQmBxT7mnfKUl+l4Be
j/zLTn895iAn9LrI1mFNJEFHSeZCtMToU18lfOiJD3o25SOHB6KnraEYOVyU
shh6iqNLPO1o1yb3B9IuRn9q1oDyX32D0B8YQw74pTcRfRqL1mN5j3snWPnf
zdDdUIF8y0nOlSLnviKvy3ki3yNOgY485Hhjxq5xVyb2eaBrr9OeloFY5CU2
2odqMT7tHUWIh+iZ6atFvSZ8dfA/AbwJ4a8NvRi0oow5IbRixEK0DPiTnrHp
PeTAO81fMeaEIe4MqTOj7tSCQ9xZS22dExNRJqauvszwJoRPdJ2hvwS7e1XR
E6C3KHWdY/WSRsYoNoJp6y5XnxH0WUF3q7rn1b2Q8Dd3RZLNEIVfvLpj1Ocd
nf1176XPJLGgyxf5pHOfPhfoc0acEHfXnAK9hfErfog7g8eF71qws3c92Pn+
Ktjx/M7YdN/7O31q695XvMGM6Tryiovu1v5ALhGy77mbS4bv0fHfQ2x1vo4X
4vyTXX0e+DfYjSUefhZijOnoiwetMPyK1X/BbnwJ0JOBOIouSC49sY+OL8mJ
UeBeXu0UxEDvMb4Mdu9R6h74SrB731B09V8Ndu/r6b29X4PdO4hXGL/umfXO
4fNgd2/8DD1X4PsdPvEonrpP30Rcb1A/jOxz7Eted9Ga1+foFM+LYPdO5TH0
HscvzevP6PyZ9qYotGOM43f0PEfXBnz8lfZL9Os7g/zkl/Je3xvoM2Ya1sNn
eAqQe/qcrO8NlON5ydeY5FxceGIwF3nI/1SsiWDW3A1syFZq9IlH9Y3MwTV8
vYrvL5kj+fwJuX/wTTafMQ/yN7CGrxDj2Kyp/CAWfuu7Cd0zPyJer1gP18gt
5Zn2WD3zIyijUdd+XpF9VGeZGOyVedk3RdPZQH+Tob85yMheVp09Ny3Pg6/h
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
dG8d+Nuv49g5ho7P6NFYtBdfoPxI/SN6LsCnv51Yi/7L1KVLf7+id3Xb8vcV
PWM4umjHifkl+PcRZ63XP+gX30v0KGd156V7R92BvcLGUcY2i7n6i7gqzrti
uH1hZwwX/9f0z0LmAGP8wPgWoO8YOk6j50QMF5NYMV2/+LSO9DeQ57hb0p3T
Ue7kbhiCQ929zjGve09K7/uc8rp3DPXusd7vvGu453XvHP3G80L1B7Qld9zr
3iE6i60V4Cdoen/rtte9C3oCXsnc8rp3tm5C1zvPev/ojte9H7oN+9uhPfS6
59Ye+BYhJx+OoXMremVvCeNYCn0LfTvQeRf/5OcZxqR3s+4bDnjd9837ve57
uDVe993xWkq19R3vQa/7TlA8q6PQZ6FjHzpm0i++EczDMWJ+E982My83qWsu
TnvdO6/LGMcp4r8Lf5fj+0+MS3O1E7nlyN2Hfyf996kvh0/y71jf2it+IXaL
ieMd5kJ3d7pz1pkiJqXu8nR3rXtH3XGqDNx56+9OdA+os4fuEnVfmApe9X9E
Zwz0qi81vHGQlQ7dKYquv13RHqkztvZe7a26T9UemYwyOXo+YkN317rbrYMf
sfFZfwOlO+ws2Azcd+aDLxY+ybc89Mu+7lTTUqqt7xD0tzj6G5pL0d33BBej
u+8gtBeILn7x/P93DNHdffjl6C5eWpfn0CFd4tE97yPyXXfXaj8kj2aRS/+i
+z90BGJ/Pbq7V74W3Y1R31H0x3bAd/1Ng/4uIvAdiXTI35vR3X34jejurrcW
8cmMnkDMskJvwDzoPlzvT2ivGU7+H2Bt6P5c9+jKubfkmnJOtAfkou6Ub5H3
2qN+Z228QeY06ypwP32M9fMKHq2Jv+A7BU15rnt72Vd8tc51/649S3f4iutv
xPchvsrnp/B9YF4i8FP+/v86QdcZfHuHzgfwvqf/HbqkU3fduhNfi//rqF8G
V6DpXTOdq68yPp2tX1K+oH4QvTqza6/Q/n2TUvu5vg/QnvOYfNGes8rr7utF
f0TfE3zbH6W9nxiv8UbuZZfw9QJ9q5nn8+iVvr3k6gVo5/FTPh5iLnzkwEnm
6hQ+e/Bf++B8xr2JsW0mttKtPV/vTBwmHoqT3kFZD/91ZBRHvYsyGh9kfw56
5yM7FtkNyEhWsVvF+EaA4YxnBrGbydxcY65mMPZ9xGgddoXAs2I+fh/Bl7n4
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
5tFXFUcCFtnfvRB+LIJsagQ3NAtDZMskoCczrsmcREOMIqBGHePGYgARxBEB
Q0QCCIKAbAJhX2TfMSyKgFFARHEDYgAxLiAgIlPf6e+dH3/U6e7qqurq6uru
6n733VtId7T42g55t8uzVBnPa4M1yp0lLfeoWwrpTpL865aX2O5iy1ulQd5Q
ZeLz29RltW2MlHaq9MgjHt1cSPHiYuUuV+/htjtZ2ufVcZR67nRM14pb45g8
67jg528W0rt8aHuEY7/K/ErHbbNjhyz8fIC4yeLxic62Mcqx6KIOc6SfYTsz
te8s88+q02Lpd6j3aGWtdXxWqtNb8s9U9+mO5SrtOFL6FfLMkAZafj/i3UC8
/+wq956rTf834K9ZugMjvuL+jPiI+zLiokrmf2ieuIrfH45410a8V08++Dnn
FKSpJB883AdxL0RsR5zH/TD3u5xVir+fcA/JHWTNQrrfPOUdWPVCuts8aHv1
bZ/6nZVL720pf6cM6GsUEhxSxk7ruf/kXhMcMtEFnTgDXGG/uSc8VEgxAvtS
mYyPuqa96hLzxAzQUP9pIe1bn1p+UvszDmXkYa+rLs9Bx/VBx4099zb3LeJQ
Yk/uRi/Xbk20GTpy/1bHlDJjB30xPqb8hVCkLW/fKti/iubLOybUndY2RRti
O8biMtvnXr61Nm1lXQ1xtSxzVjlLWReLay0euRdZBw31nI04F/A7V09xp6Vj
jLgv5jzPuYw75G+8lyUuJybnPHfcO82m+t6PpYWHu4Fj3o0SvxPLV5EXOU2V
lclLuaFyj2kL7qjQp6X9xm8a6aPI36Xd0HtX5dL+YbdL7Rv2Oaxvn21dWfOX
Wv7MOVBL+nPENdEHyupL+BEx84/sa2X5f+04NdbWzIcW2rC5NrlQvY869xpo
55b2q0R7U4Yf2kb2t7G4Vo479Bc5D04XUnqW+RJ9HT/n/PBxpB8VUlzMd0CI
2XiP2jfi9hdSvFY8V1DeV0hnkmORfl1I9MTcfGOEemjZqzmz1DfG+jLK50Za
N+D9Qoojy0d+UyGdOzh/bDL93LoK0lZVHnKJPTmflFMWMtsG1As4EnVfyYv8
crYLHXhih38q76T9Q2/0pD/0pU6WYu2fG0dWMmasaFrJ/tR3rSZWJ/6+SR54
f2YscLn4my2TryNdG/Wvp27HC+kcR7xMXLy3kM6L52nnhuIZA+wPHWN1wvGA
nnrkHFPWBY4pNB873gVpzs9K8QXbu8p95z77Cf1H+seHhYRjTMrbn7ra/irz
V9mfK6S53PwP5GN+XOYcuVob1pPvavPUl5WGdZvzymHmTSGd7/BrvltTPEeC
P2UdQL6R41WM9+Ev7gPfOTeYC8hBxoFCmg8HnB8l4qopo6L6f8+2P9FWbbXX
0ULyvfr2iTx9qSrPJ+qEbsyRDwpJHnLJk34ojvL72vpD6446l/DPo7bTQN9F
7rf6ehNtzhm+eNYspz2p+9z5VdvxKSd9LXmwUxPpL5O+tj5LPfKK/P+23D5P
v930856e+/obAvoHdAi4PU/+RCwzVN8i5czFGfSJgP8L6B3QJ0tnM+qHSUP5
ZuvbSfO49fdL84D54cL91reTtni2I+0rPXTPmSd9UNntbLOvut1i/nfKGpGl
8/KD8o0w/0RWejcwIWBTwKtZOk9DP9J6+nqreHDPmyfl95wnrYeua0CXgNFZ
ikFutb59QL+Apyz3s36U9J3l6SKutzZ8LOCFgDEB3QL6B9yunK7WdTM/2vJI
9R9hu0/Jg4xHpO8gDnkDAjqKK5Y7qGN79Xw5YGHAMwE7Ak4F7AzIwlf2Rbo3
YH9AHuUqAdsi/3XAMXH7pIVmn7hCnnDwbpP2jYDjpseUQd1W5SP7n5H+4wza
NwNOBHxj+YT1VYP2kyzRfxZQK8rnBHxPPPUnI31L3n9lCU89+WqRHlD+N9Jd
kKf8Cemhhe505HcFvC1fibykB7OUPxRQPco18mTDb7VjdWmg/Vb7bg/4Thuf
kvegtOSR8ant7ZR2uzqetHza+ppBezhL9PDVlPekOmxXd+jPypOtDmuvWvLC
s8v6dyItY0qZeYDP4sOsA6wbS7O0X94TcG/AjICZ+hT0qwPWZGnO/C1guill
5uXKgFVZ8mF8el3AK/KOlB9ZTyp7dpZ8d5b00I6Rj3mxNkvzYKY0+PvAgE4B
Y7M0L8bY/nTlzpSnn/yj7ecay6Osn2XbL0hDm39S5lh1HWl/Zih7ujrPydJ8
mxcwP+DPAeMC1gdsUEdo5poOlJ75+JeABfI8rYyHYzw6B1ybpzWN9Wxilta2
8QEbAwbJB//f1XGMcvur1yp1HqHN19jfQeq5QP2Q96K4QeoywbY2WT9eGu42
e2bpfpN8D8vcU96ZpftO7pu5G2Zt4j6Ye2PWRO6CWYeK6xHlZtJ1kI91jTvl
G8RfKX0X5eCf3Fe3dNx/6Tj9yvwjllsos6P4G63Dn4kD77H99rbRQZ7m0t2Y
la7J3dSnhfKKbbe0fL36dTXfVfqOjsdAbfU/2us/tdNdAY9mKY7Fnt2l+ZX2
vEObQvcH+e6wrpX4n0rTQ15ksL5WdY1l/yH+ZQ8iPr7b/t9ku720V3fb7WQb
raTpdQbvH+Tvqd6/FvczdbtH2XfL9xvpWGdZf1nPWZdYv/8d6e6sdB1ijSvO
D9ZG1jb8eoF072ZpHuCPnwvkkcPa+ba8HwQsDng/YEvA6wFHlLdemdDNlm+3
beD7h6X5VLlF3//MMvlFyqaNDdLDx1p1UN3nqs8u26CtHdIcUoe51jPfvwrY
HPBlwBL78GGW9mrWiPcCvrD+NdPN5mmTteqA8teJg2ePMpYFfBTwcZbWue3q
86p2/MJ+7bFvC7Q3bbO/Vw74ccBRbXpEPRer6+v24Yjyd9jnPcpdKM1m6d5T
dnFMv7Av7zge84V54jZoY8Zhp89+895l3tvNu8lH+R5D3jk+0fdCjvV5cL6t
MN93QfL+5x3y8h583r07wXdhTrA8y+fJobuuJL17/PqS1M5o23rFNsb4/sr5
3iXO9Zl07hZ5VyvvvH/P8jvS7PB9ALOVV3y3Ou3OtO3t5nkX9iLl7DHPOysX
28+i7rwvk/cfv2h70L9s33f7LkzqxknLd9343iTfmtzv80s8szfN5914xm2D
9t7oGMzTX5fpR8uzJP9d29qtHd5Rp9fUkfdRLlHnRfbjffUdr15jted65b2n
zPHSbZJm/Rl9GFcsZ2nvW69vvqSvTTG/RT87O/y3bECdPPl87Tz5HXlw5fLk
l9C8a1qcd9Sfmyf/rhdp/TytWcjcrazPXSNY22q7vp2trN3Oja/kB8jXzdN8
Kx9phTzN+YqRVspTytyq4LyDv770FaxDN/T60rmGvuXsCzLBsRf8xP2AWPy8
PMXX5BvmqVxwfjcNaJAnPDE7QNsNrPsPY/2m0t+Sp3k7KUvxCfW5NA3Uu77y
m4pvmJeeCc7PUyx+Qj2bqWsz5SDvfPU9T7rj8l3pGaCqPFearyJvM+35gTat
q82/1GZ1tVt5bYqtBrtePetaNcl1CT+arF8ttn6R86Dg2Wey9PBNzdJ5Z1qW
YuAVWTovDZF3sevea9ptoW1zLtsq/xR9d6v5vcph3hHHccb5lzrsFT9E2UuU
sVU9BtvGIvXcbF/WKIM4mDMHcS379HRTypzP2LeJ64kniINXWZ5m/Rrxn0hb
PAegW2XHf7/8q/Spr9Vvq/08Kv1H8ryh/G3aEPvtV0/2L+J69rx16j9Tfd+S
fr9tQTvL+n3acK/9PiDvdPV+0z6sVlfiNvZp4nL2VvZtYmzWHNZH4uH/cg4V
5xJlnu/jGddb9eGiT98mzX/r17eJh+4X8ja03ExenoPkmUueDeQ5QZ537BXw
esCWgJcCXmUeBkwMmGR+s+kk8dBPFt/Q+Umb1ZxHzaXdLN34gE0BE5y7t9gn
+JjTPP/bMaBTQEvTVuYvsH/XBFyfp3upRqaNzbeW/g7LF0r7E+3S3nx75/bv
1YHnjHm+ljnN87YVTCva3vnaFx2vVs9K8vzIvvxe2/7C/hRpKkr3qv3epO0m
iHtJ22DL0QFrA9YFvBLw94Ax4sG9EDBW/PqADQHjzI81HWf9WHlfkW+d5RfE
7QmozffOI21Tkr7r0jbSa0rSt0quLUn731h99Gu/+cW3v5b47ctDkb5om+jC
c9w8Qzok4Ei19E23g9VSn+jDKOH5gDUBIwKeC1gZsC1gasDWgCmmU81vsTxN
ujcC3g6oGfrvFD/Vui3yYNeNefK5F/URfOVGcRsdi5EBq9VppfqsCOirzGnq
ulbdoVml7iPNr7b/G21rjfJWWz9S+kurxDk6dG5aJemDLhfpU+zfPAPPXs+z
wTwjzLO6PIdbjDPIN7Fcxnqe6yWWID7A/3leufjs8c/FcxdzyRk8ZSyfIx00
PCvMc/nlhXLi2qpXXdN65uGtpa60e4dtX6au6HiuurUx30Z5F9tvnom+LqBL
nuYpc4znl5lz3EEzZ3m++WFx1HWW51rhGuvby/OUedLbTfubv05+2huYp2fY
WWMG5Ol+G7qO5geYHyjNDerYVfwA67qK72K+m7RPa5NO9ruO41HWMSzat5zl
+toWX6jgWPxAXZqr/xXWldd+3OXhR6dMKddwPLiX+759vtD8tZZbKLOD+Q72
6Xppr9OGtHmlaXPz1yiH9Zi1lnvHluK+L76F8sDXkK61OjP23CcC6AuOu0bu
HC+UF74S0+rmfyk/c+Ys5Vyivo2UgY/hX/gnfol//tRxaOVYVLMvtMN9LTrT
dmtpa5rWMn+x7Z3WttWV1Ui7F+9qKTdWn5PKrWY76H9xzPn7Yu43jrRNudAz
4NyAv0bd0oCheYoJicv47YI9gj2ZvRka1tQl4op7ci/Tx/K0n0yUfrH07PGL
LJOfLC08wwOGBSwP6JOn9XKKbQyRp4+4x/O0b7B/dFOfJeq9XDnLlAFPb+m6
ysc8mRMwN0/r6wO2/ztls9byX4bpeZrvv1VGH9vCNvxn537bKvK2k/854zPu
JB+Qbrjt0ubT0rVTJjE1d0nEyb8V106+P9oGcWJfY95h4oeq12PacrJ97m3/
h0nzcp7+b8L/SxZYJs/ewH9Ziv+TocxeNFj6hXnyTWIn5hr+yXzCl/hdiXtK
nufET3obd3OPNsl8H/HUj1M+bXHPzj0a54R7TYnruZPn7D3MdKmxcg/14j8y
Q8VTv1A96Q/y+c8MccYjppT5Tw7/zZlvvxbpe48qb4J+s0xbDbbfi7Qr/6Xp
JT9y5snTU526284425qvjdFhjHoMEvcXx3+ePjBPmU9LCw9++qz24UzzG9u/
yXHFP/j/GHE596HcaXKX2ckYvqf48ZY7GeMvjXm+IuZ7jyoJ/2f5/mSs313c
neKf0N/wO+bfvdqN9eDxrPS30in65N3qe48+0Es/GOcZorttjRV3p+0NUtce
0vW0zN0882iFcwk9/qZenCH5TYD7tXn2c6688D1q/V3Kv9O0eMd8l/V3K2uw
fBPlZa6yjhB3PSMdfMej3DZs+HGeaHud0dYz0jznXC/GbMxz4jbiL+ICYi/6
xG/EnGdn52nvZq9/XFv2te/D7T+8xHrECrPyxNNfXBfxtEtMx3+uWLv4nyLr
FzEwa9Z9+s1N+vVD6vKwNEOke0w/u1m90X+Kc+OPypmjzrNtHz2Ip1lbu5qf
kaf4h/VzmX1lXk+3Djyx0Ez7NFP6GeL7iXsoL41tB9ruHHEP2d/l2gr5XWy/
q3UPaJvO9hVb9tZHWaOesn3s+f+enat6
           "]], PolygonBox[CompressedData["
1:eJwlkz1IlWEUx0/hc9/l3vd9n/KjIIPqQrk4GEFqWdq3ulRrIQRpGFRIQ1NN
tUlBLVHQFi02SdRNs6GhoaW6ln1ZKi7pElRQKfY7/Icf/Djvuec553nO3XTq
/LFzq82sDWpgtmjWGczWwzf8SDR7lphNQDf+l1hXUM4f/DM04PXwCb+fm9WR
uxtG8SqxtXxbA2/xOdiJ98E/fFVJfg2a8CEYwaswii9Qo4Na/fArF+4D8Bu/
nJndLZi9gDv4IXocT9TzYdyoMRjUs/c+nyl3EZbxQWos45NwHD8BtYlm6MNb
SurNe+rHO6lZ4dtT6MIPwFiiMw/ie+BJopy9+DRnrgu6oy/4dmrcxM/CNvwM
3AqKncYf0tMIvVyFYTzL1ZvHfmR6E38br/kVb4y6i+uwJQr3G1DG2+A2PgSb
8QfUKyea2Wf/Dj2JYhV8I2dcLOhO2/FXqVlvQbEFfF/U7D7zfvwSPY8FzeCz
vKOn2qA3n8R7yXmeqIddeHtUb499R6Jw9zvrwHuids1/47+doOZ40BmVku7M
787fdCv+pqjdivC6qJ3z3fOdeZQr5t9852bwDVF34TP/5PsFZioXNOMwPkVO
XdAM7/Gjmd7iJDTjK6l8B0zj91J5Ca7gVXqaD+rZe8+ILQWd0YS3psr1nMZU
O+677jkv8Y9F/Ze8hw94d65d9Z303fwPbb1+Cw==
           "]]}]}, 
       {RGBColor[1., 0.9292449451762141, 0.9292449451762141], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlEtIlFEUx2+ZCfFN3/cRREQjjRk+CDEbKh11rOw1KVFtBzLBGlvUFD1c
FUTUykWWFUS1iB4LcTUVaNAqaBGU5djbLDNMLXpMga/sd7hncfid+59zzz33
fOdOqPHgzgOzjTFJLAu75xmzMMeYFLwMk9glLMM6Bpf4xhxSXX5vCBjTlm3M
Sjg115hJbBn6lGPMHvQ56EXYWfxZcL9n4+7ACWKa0Q16GXnb2ReGXZ7NMQL3
8lsnMWUwT8+ugIt8W8NiWIJdwC+Fxdh5/BUw5tvat8I/5Irij0pu1gn8ICzA
2vALYWa+MUepLeQaE3GtnwtLsNP4O+ALaq6gnl44Snw9+hNYhE2ju7Afi6PP
wHw9S84sZb0c/YjQtTHT+Dc927cm2MQ9u8mTgLtZf0OPw+Os+9DvB2xPpbdZ
8IzWth2+pqYq9DeOzSU56+Bqzr5IDWthFXYOPwI/EldOfA/8gNXgDzh2Lfpz
WOfb77zNt5qcK/cXv0HXu/Sbyrf9wp4I2hBs1/70wErNI/nieq8Y/K41j8G0
7u2Dv3XevsKXrCvRX8H3WBS/H46oPgyLdcbCAXtvqacX+8f+ZvLkcm5IZ0Zm
p1ZnZgMMsifB3hnyFOo8r4J/dWZkdqq1b9K/cc9+0wm4XudtHVyqeSRfgeaR
fFu0/5vhJp3zjTA/YOc/D9boHEbhAz13TPqq9cs95B2ks+0ctPK9O7hfJ/xF
3dVoP+C4vil5W2n6HibmGrxB3CP8YeixHiTmGecuUF+0Vp3PJGzBHPw18CFx
n2XmpSfa/4xjZ1FqeQob9b7yfzCgs/RJ3ojW2QFPaj3X4Vut+R2cdOwsDcJU
wN7xMLyrb+EY7NIapJZu7Y/0aZ7MEDnr4WPdKzn26f/YbXiFs68ScwL+dO1c
uOg5uldypDT+lmffnpzbAoPah3J539rDIVirOU+5tgdyrrz//5W/vbU=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlEtIllEQhk+m/pv/+38/ioIukpaVEiIilWlqZTdLotq0CCoXqZuyKHJV
EFErF12sIKpFFC3EXUS2DloE3dTuRqlhWtJFuqnY8zKzeOH5zpwzM2fOzJfX
cHDHgYwQwi6UicaSIVRnhVCFfsBRTgjd2SF0oJF0COvjENoTIVxAtfDhKIQe
9nai/fBS1s5hO4+K4LdJ8yWf7+A+91+D3sNrYturMzXwAGursO1DE2LWDmG7
jCrhYfJZCNehMfgPe5rY24z+wnfdPk6+N+HPObZXa7JVe35nURU8yJmKLIup
2BtZu5iwO26Ah1irzLI9n+DH3LEXnkQzUyG08n0f7kf34DKvj3wsh28TcyLb
4nfBm1m75PZN8ElqehX7A3QDLomttvJRCn/z+q1Go/Di2HLXHZbAU35/1fN3
0lTj9f4FD6XN91eUSfxev6/u9AJe5/H0BmvhL0mLJftw0s7o7ChKwP9QE3ub
0QR8C81KmL0BLo2sF86gQnjQ4+uOV+Bt6BS8GxXAK6hhEh5g/2y4M229pp77
Dh/3+hxFFXC394fu0KO7eD2UTwFc7v7K0An4pb+f7vQKnkpZbOVQjL86v59y
nOT7GXvKvR+ew0/ZX+/xx1J2x1Gv5x447fOhN94Jd3j+8n8abvR6qGeOwf34
3JtlMT7AW3OsV+VDs5abtliKOUK8Sc9X9+mB89yumtTC11Nm056+lPWkerOA
7xL4keev7zY4N7ZaqWbqpe7Iaq+azcc+L7Z50czlw8t8PtUjxbH1uHpdZ7rg
uT6fOvOT/Ofw3eLnZWtJWWzlVAhviW2WNQN1cL3XUz3UCK/0+ZO9HH7i8TRj
d+CP3t/qec1+WWS9phqr1uqhAZ/HGfB27ze9SVvafMq3csyDMyJ7D/kogqe5
P62N4396ZP8ifWvvNa+36tUK50f271E+C+C011//xId8v/Z50gy/gY94PfQm
7SnrWb2HZmoR/B8g5r/M
           "]], 
          PolygonBox[{{3428, 3427, 3379, 1426, 3426}, {4332, 1855, 4342, 4343,
            4344}, {4263, 1814, 4278, 4280, 4281}, {4281, 4280, 4331, 1855, 
           4283}, {3366, 3365, 3328, 1385, 3364}, {3377, 1426, 3367, 3365, 
           3366}, {4344, 4343, 4381, 1896, 4345}, {3446, 1467, 3429, 3427, 
           3428}}]}]}, 
       {RGBColor[1., 0.8820749086270235, 0.8820749086270235], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkrFrU1EUxo+JJoJ5eSk1RAxYIxLBLikxtG4OLmImZ0EIhRCFBsGoHWuh
dO1QqEsWNSVYUBARFXRzC4r+CyoJ6qJgK9jo7+R+w+V33j3fufe757xSo31l
KWFmF1lJ1mbWrJwyuwXTkVnjkFkKJljrxElYIHcEzTw8q33P/8yZXUqbDeF+
JtT6GWm+36E/CL/GZo+Je7BC/RjNUfhLtcUpSK6Lpg5PU7+BpgyLrCbxMVhG
dx39Cfia2gLxS3hG+56fnEV8HH7gjipnDuDHKNybJ86Ta6MpwMvUf0JzGL5l
XWD/Ry74dv9D/Dyl9hW1HXhetQvwj/R7MNI5dViSxrXT6pv37wW5U+yP4Kx6
WIPf4lDrZ9yV5y58Lv1DeE09uRqFN/vbt3Ohj/6u9+y/kR9/xyPV+p13yD1B
04Qtxcvwhs7pw5Zi3zugfibhX830cybMwGcxJu7on9nKBk/urQLXNOsduJsJ
+n/wgeZ7Lw79cp/f4Un1ymdSl2YVLqrnt6Pgw/3MwJvqZzUbPLm3L07pvW6g
Ht6HNfl0v8+k8Xn25HMF/pbPiV/15xzsx+EfGMXhX/Q3zsH/0qVmpQ==
           "]], 
          PolygonBox[CompressedData["
1:eJwtkssuQ1EUhlfELejp6cCQaIVQt1Z7eAEGBi7xCCaYEImBuYlXMDExEhKj
egRjJTxCqVL0MkHL92fvwZf8Z+11/r0uO7m1v7nXYWYT0AmTCTSkYQrKA2Yv
UIJnuIqbXXabPUAFnSNnHvIQQZOcBtSgDnPEZiEDWfgi9glV+JB3aLbSY5aC
AjqFZxKWYBnGYQxagVk7cJ417yGvGTyn/R26a5GcfmrLwRH6NHBasQOdcUcf
rMJa6HpMew95lUNXi2qqo5v80whcTaqtN3S9awYlvhOchXAXMyt6pAtwA4Oq
u4s+yI/QeWLXfJ9AGn0YuDPlZHQPsREYgmH44b5v+IUWjBJL+RzlvjODN3iF
iuZJTbf4ncF53PWoXrdhJ3Qz1Cwf4SlwnvJuw1/odlL1nvI+jjsveV6go5ir
XT3sxtzOtfsFzR7u8Sz6mWl2Wb97vRG9lYqvVW9Kb2sDz3W/Y+36H5hLXp4=

           "]], PolygonBox[CompressedData["
1:eJwt0bsvg1EYx/HHpW2iytsY3EtLXGIhTTAaGBoS0n8Ab9IWg04lRgaxGiSm
Tm1EDAZxidtoRYX/AGnCIkhc+rbfkz7DJ78n57znOZc3aCejy5Ui0gYXnFqR
BMU3+YkvjPhFhjGKpEekk1yvFzlwi2yS05jBiU/kGCs4p8cR+W6JjLHmh/zF
H4pwEKDPEnMVZIfWvWQf+jHP+jkMYZt+s+Qr53nBM2zGCmRK97P1e7PuDKe4
hcNcjgzXiXg5cwNpwQ+3r9znnz7V1C4E0I6ivkUr9aCeoZsMoQsT3HkcG0jT
N0LmcUPt4X418GKXfXoY2yHvkcMC4wnsoZF7L5IZhKizZAxxM6dvHiSb0KxM
3YIIcx/6rVkzhQf2miTXOOMhZ17VtzBvsq/7XZCXuFKmftN/dW2V38G8RxW2
6DFAPnHuR6QRZo87sgQCHkmS
           "]]}]}, 
       {RGBColor[1., 0.8349048720778329, 0.8349048720778329], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkjtIXXEMh0PF66PnnPtXxNbJXgVBrFgR7exQ8AG2uAjtID5R214FqaCL
iJObYwcncdFBpMVSER3EtWCvYPcO2iIqKg6tKH4hGcKXc07yS3KSTP94d/aR
iLRhedhYLLKRLzIDE2wQP4I3iUhXSiQHS3ke4n2A5dgwfhlMlYi8LxAphK/S
IlPEV8Finj/wPoKPyf9N/A/iM9gifjVs93jNu03Mr8ZPgsgFfoCbWAadP3DU
+2yGOewX/nfYRI2PxDTCUiyLXwZn0ZpHpyNt9bTuC7iObeGvwevIZrmBDd5z
PUxcM8Adaj/FX4VvXacHHtHzO/Tv4RuvNQdr/Z9UwgOP0dg7agyQewLryF/A
z4eVaYv5R0yf9/YJfvHZl+Ezn+slrMDa8J+UWB/aTwMsjk2/CNZ4P9rXHvmt
xO/DCZ9lDT73Hlpi01X9ZngVTF/r1PksOtOu5+r/uIjsHi4jm0fr/oWXnnsc
bDbVT8FOnv/Tz3Cwvep+X8Mlv7HDxL5pzEqwXrXnc/gttvv5Gdu+de/TcMR1
uoLtT/d4D796vOZlvWede8D12+FpZHd+BkddR/W2Xf8Q9voudCe33s8ZTPye
9a7v/L1+z/ksnxO7Lc2dhA9Ig3Jg
           "]], PolygonBox[CompressedData["
1:eJwtkc0uQ1EURrfqn7q97r1BCNHUQCSNiFT7DCIYmJopEn8VEk2Y1sQj1FCE
MBKJkWdgYuANSokIYkKCtbPPYKWr59y993fOyS9uzVdjIjIKcZjtEpmBOhxA
kBVZTogsgY/f+SK30IAjmNZvkyILkMMv4Bxa8AxeKLKREtkEH28GIlN4Hq7w
E/hO2v/rwGbWXQ/t5WVtdgUy+D5c4g9wg3fDSsIyRvivb1k00wj1r57V6/4b
/hTYLM3wge9lrZf2XMVbns3Smhe8zNqh21/DO6hJQ5Pej/DuWW/N8In3Mr8H
SlCGILSzVyEKbU33dqEGg/QcgD7oB+GbP/q38RtzqLdDHHao2YYiTEKatfWU
3XEGHyZTjbPPwZdvb6Bv0UlPL7AarQ0h0iyhZdOMxdDetOFm6Kwx9346o4Af
u/vTN6vgOTIPuTPoWSbcebVmPLQ70rs6hTMouffTOy3g975l1cw/+D9sKExD

           "]], PolygonBox[CompressedData["
1:eJwtkL9LQmEUhl/6cVWym4babcmkNah/oS2pDBzTCBKCMG5D6BrR1NbY0Gzo
EEVTi4a7UTa4t1c0Flg9H53h4T33nPOee86X2z0shiOSAhiH7UmpDMtwTmIL
jUGFeBiXIsRRWLJ6Dp2DLNR9qQYXUPCkS/SF/IC+PprmOwP5hPRNfQ2NQgxm
qQfwwz/26M8QH8E98Y7t5HZr0RtEpDbagQd4hxVyQ/QXlMQPaZiBVWqf5Hv4
X5l3h97ALVxNSQ04gVN2OkbH8IxCFqp4PTSOfwIK8EGfn/j3uzk12/Pa3sa9
kQdn5BbRFP6QOfO2k9vti3coMecJ7cEjHDCzCk27MbT73J1vdmMXnaY3Cc92
j0+8aXvt2ww3a4Fb6uTy6DpswB9FUTr+
           "]]}]}, 
       {RGBColor[1., 0.7877348355286422, 0.7877348355286422], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkM8KAWEUxU80GPnGkCYLhb0/KYmtDZaUF7CWeQ8bTyKPIVvyBEhJ/jwB
53bv4uvcuXPu757vqy/i2SoBoMaT5AkCIJsCitRDCAzTwJva4/fPAyJq2eo+
dZcH9vQ/qVMHbNhvUT3OHNm/sv9hPSLnEipX+F3q3viy5+yUKeyxzQqjwf6a
/YzT3eI5OWUJ80at2t62U5/4fWqioHxQc6HmfDDPwDx96txmJXvFauE1zSPe
wGaFcc9rNp/11zJE5C/tXh1qbLX05J94SgXNIXlenNvau8n7+XbfCfUPwdct
7g==
           "]], PolygonBox[CompressedData["
1:eJwt0s0uQ0EUwPGJFNWPe+e2RdggPIEF76BBY0OILrDy0aINCYta8BI+NizI
bUK0SxaqLNVCn4Fn8LHwP5mz+CU3M3POnHPmjqwU5wodxphxRHDiG3OMEFUc
oYIpZDGYNGYAfehX8p1BL66sMZdYxRqWWFvEPBbQwhvuUUMaKVgEuOGOa71T
7q7p2Vvc4Yucn6ihDp81DwkkUUYJy8hjhhzT2pP0NoZRXZO9vJ6VGqXW7sCY
LkTRAx8eLILA1SC1hKiqUO8saw1SSwxxTGIC69jQHq3W7Oua7B3gUMn3Ax5x
5hlzil2UPDfjjM5MZrfFDDZRQBE/nPlGC+9IIO65mcvsA+0lhTT+2Pv13Exk
NkXNtY0d63K0tAappa6zlzeWt75g7RwfaHsuRmJDVJHkjoTOUGaZY21Wa5ba
94nZ0xySK86ZmMZIbMAZqzE5zSm5n9DAMDUP+a5n6b2he89oWveGUc0pudta
q/QsvWf135YckqupsS94RScxEf0n5N/4B3zVXrU=
           "]], 
          PolygonBox[CompressedData["
1:eJwtz88KAVEUx/GTDDFmjD8bsrH3J6VhbYOtEmusKYp3sPEYRJ6AJdmTN8CU
5M8T8NXcxadfnXvOufemO4NG3yMiFjTEIiJRxFH1i7w5KBsiUw4zpI0SrpZ7
/iFvcNCm3kIeM/qb5It6hT4P+7zQMDJFhigi6BMZkDk1kyITSGIVFlnijgN9
a7LHvi7qOFKr/d/H/JdZmxxjgoLabZI6QtjTu8NTvelAXsLuHoecYwGdu4MI
qH9nyYd6g8mMhQi21Dc4Ge79Z/IHcfko+g==
           "]]}]}, 
       {RGBColor[1., 0.7405647989794517, 0.7405647989794517], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkksoRVEUhld0Cd17zgkJE0oZMTAhlPIu5TWkJJl53EQkBlIy8BiaSG4x
kEfCxICBjCSP8i4lrwwZKTLwrfYarL511vn32v9ee+d2RVv740Skmognsj2R
tgSR74jIly9SmyiSGohckVeT30IvLDIbEglgCjFDHoYhdFVoPtE8EDXkj75b
r30CGKNvE/3vYA9rdlhbDDvR/VCvUz3fc9TTtX/g9k2C5bZXGaw3TQ2sND8V
MIuYJy+EQ/TKZO0w3CFyyGPqP3DewrDXPIzDPv594aEZJtpZ9EzD1mcTHqK7
R38Ln2w+L/DD+r/DPcu1topuH/0AXOLM+fQfgQfWZwx2mGYI3lhd/28Tz+S7
cM002i/VfKb5LjRvgVHL9RzH5vnId6H5BhznfifR1MItYpl8A04Q6+RrnttP
9z2Hr1Zf9ZxO9VOw0ebcALvt7lbgme/mdgnrra7/C+zu9L1EOX8R9UGYHHF7
JUTcXHQ+JVDYY4Q833Oe1MOb596K3lcJbLeZ6PwaTZ8HW83nNPyz93YNM8yz
vpGLiHvnv/DE/CzAHJtPg+c8qbfTsPOqmkVYaj5H4T9TI2vP
           "]], 
          PolygonBox[CompressedData["
1:eJwtkc0rhFEUh08yJnHf+16Shc2oqVmbtVKYSU2RKcJKtr6WkllIWfn4B6SZ
YmWDrC19jA1FPkr5B9gqsvCczl089XTO+/7Ouff2L6xWV1pEJA+tcJCIFNtE
5uAev05FruAGbqFIbQA6wcGsE5mBKZiG38T+3YKcF9mGOr4G4/gZnMInfHnL
1Owm3MEGGa8ZkXNYxNuDyGhWZASyeMFblmZW8Yq3WSewiR97c63V8HcyS/xb
hg+85ixbZ1w620F3CfS6oEJtn94ejOE9zlxrvXg+zp+AP85ajvP1zH34U2K9
AhziD6ntrmd4xNcT6+k3Dfwlfq+ZonsE21V39sHuVO92EqrwnFqW9t/wQG03
7tuNN6jl6P2QN48fpeZau8CXmbcU31Df8ju+l755U980WLbO6MAdmTsZm+Hx
oThPa4N4Kd6P1obxf7VtSQU=
           "]], PolygonBox[CompressedData["
1:eJwt0L8vw0EYB+CLpF+JaOvXoBuTicFUNUowNXQiNnNpSP8Hg8RotYpWqptd
SBA20pXWrKvNc+kNTz6X99578+YWDxu147EQwhw5XvMhfDl0ZIs2J9yrHcg9
9qmxywoX7qrydEovLUrjITTlp3rP/YecL6gXRjPj7Gaaey1n9E6zwzALYVa+
8MwvG+a9yS3+3G/LHBkV79co0zWvHndLcxppp7jbuvq5++XUH99lac6gGMKN
/n5xtGPctcySWkUO9PT5YcEuXfnNpvMw3cWeM++vvLmVHe5op/94kI88kTdz
kvf03xPOl6zGnWWdI/4BF+g3hQ==
           "]]}]}, 
       {RGBColor[1., 0.693394762430261, 0.693394762430261], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkL0OQUEQhQdxhWTtDRUNHkCjpKdXSLQKjZ8brQQvchPRE0HhDeS2Gnq0
PIMzmVNMvtnJ2bNntjGK+vO0iNRRGdQqFKnmRA5gu4hBIFIBJ6g8+jF4o2YP
flA19C8wdiLXrEgEdnG+Q58K7b76PDAPOO+pP85n6DvOdDp/eXhT3wGn1Ki2
DE2CeQmccb5xVtqvneXTnE1wwDxDcMdeMybMr3tcvHn+wBN30Z0K9HHg01ke
zfX2llP3KDHP19sb6r8Aj/SJQ7uvPi3wzLf0zSUz6H/H1G/BP5+yL+I=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0c0uA1EYxvGXCKtpZ8GKjQ0ughDSIoSY3gD2KlEfIZ01V8C2TSohIeEC
2JsiFU2LEK6Crf+T8y5+yeTknOc8553Rze2k3GtmY+jDYmS2gAKKmME0JjGF
k7zZMW5wi2XWlvyMziax2Rp2UMFbzqwLY28PSkg8Q1mrnFnxDGWds9ZAFSnm
WJv1DuoyROag36G7SrrTM5SV+tki5vPhDQXPUNYHZ97xiS+c0e0UWyjjmj1X
uMBlFPZo7zd+0ESGJzw7fbfwgj8yfvGADBN0GPc36+1t9ryig27sHTGMEadv
ZSirzp4a1rGBOms1n6lm+0jHpndW94rPfhd73qnld7b9zo7PQLPIvKtmoFno
H5l3VveUzCrucB+FTGXv4yAOM9KsGvp3GCCjPxc6qdsR34feWd3/AdwbWQ0=

           "]], PolygonBox[CompressedData["
1:eJwtz7sOwVAcgPF/JNqQVCVYLOIBLEZlZa/EjNWlsRCCV6FJbcRlMTE3TBZG
wswz+Jqe4devOafn0nzbsfsREUkiCivBQxMp0TEmWDCZ00X2dAkXLzzxVnNb
ujdFdvjCZ48D7bO+hyJijHVoi2+bqOHGWJVukGUfn15wRUGtiVMNOiqGSBkW
Dly4R8844W6Ed39QB0fmG9RGHXO1pkunmGHEOUOs1fkT+lP3T/GeRib4TzO8
64d6WAVY72GgznLpH/vaLO4=
           "]]}]}, 
       {RGBColor[1., 0.6462247258810705, 0.6462247258810705], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkL0OAUEUhW/8dWa3FBWdVk0pHmCDTkErWYVodrNqSpVyrUSxhYIHEImG
RI9OvIFOx7mZU0y+mTNn7j13qsOx52dEpIKVxboYkXpB5Ay+HJEU+xi8F0We
eZEjeMB5DX0PRtRn4MQV+UD3XHunnjn4w90Lnis4pUe9EetvwR79C8f2Uz0E
T6z/AAd484WegCHy1bDfgCNm9o3Np37N1ae/BSb0B+COeW5gmx6t3aRHa5eZ
s+PafuqJwZyxb3WmgP6Gsb01w8rYeTT/27H/qPoS7HJGnbXE+tonZR7N9Qe4
Cj3e
           "]], PolygonBox[CompressedData["
1:eJwt0c0uA1EYxvHTRsKmoxtWLCQWLPQONKRiVDTE9AosWJnaEeLjQtoFCTsf
CVehDSFEVQg3wJKl/5N5Fr9kcs6c533fc8bWGqtpPoQwjj4cFEPYxzku8Iwn
vKCLuBDCPCqYwxVrl2ii5X/0bw9vzlBWGx1sRCGsYwolrJCxjCXUMIsZTKPs
GhWvae8Ex2iihS8yP92DennEg3tW72f8c+ozOruIqmeInaGsBrbwwZl3Zyr7
lR67yA2GkMc9a3euoVp72PWd6e5qnqXqWmXPsokUo2SM4JfMPyzwHXtNeztk
bDtT2ZOsTSBBHT/4xhB7w8WsZ/WeoF7I7rznGTRL6tqHOMINZ6+doSz1oF5u
0Y6yjMRvorfp+O00s2Yv+e36MRBld5Jzj+r1H1VuVFM=
           "]], 
          PolygonBox[CompressedData["
1:eJwtzzsPAVEQhuGxcWsWDREqnVZNKagXpUZBIaESEnEpKVUa4pKQaPEDlG49
24l/oFN6xRRPvtlzzs6ZEys3rLohIgG44PWJeHAzRZ4sOKmjiCCJuFskRY6R
oK6RFVRxxQUT3TuRA/r00YNNvyNpcJkDL7/IlnNPssD3m7pJttDGWWfYkmts
0NF/umQWOcw4O8UcH/ZK5Ij1BfWO3OOAtO5n9P7fHA+d627+3/h7a4j1ICyd
KUyu9O1L8gEbBXrmMdS7iuQXygos8A==
           "]]}]}, 
       {RGBColor[1., 0.5990546893318798, 0.5990546893318798], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkLFKgmEUhl+UdPL73RwqsbEuIgoCJQgkdHD1AqxRcNJQcHBoEBQ33UNI
u4YgIQgCSwi6g0bHnsN3hsNzzvnfc773/CfNu9tWSlKJSBOvQWpkpDfYy0uH
WakPl0SR/Be2E6mL5gJ+Uh/R/4DnOen5QLqEab610ZzBIfWK/gA+uKYHr4k1
+Q3cMX/Mni2sUr/Qr+Xie/buD3x3PxvY8j325sb7T7bDvVWSeIPdsodT3zmG
E985y0ed6Tvw0T2M4ZV7LsO631KDKaJK/hVibf1Tm/VbRnDo/2QEFyHqv0Oc
sXwe4m3m5x4Wkujzj/4/2so09w==
           "]], PolygonBox[CompressedData["
1:eJwtkrtKA1EQhodcvBSb3SrRXARLm/gCCgoJgiAE8YJFLGxMpa2SoAZRSCBF
BMEmURT0AYzWijbaCIIQFUSfQEs7/YYzxccOc87555/ZGV5Zn10LiUgWIjDi
i2z0iBQgRCwxkT9P5AEeYTPgHMpQgQake0Uy0CTu534fRCAac2/07TlceC4X
MU3VnuF7FRW5hgLxoedizTWJP9AcMv134merl4In4ns07qAJBzFXQ2udwhl8
0cMnHMMJhHkTClxOz7qB01bNF+tJe9uC7cBpqFYL2rDImwWoQd13NbX2KpTg
ljs30IVXQ+MUZ2kYRHMAkpCCHzS+IU6cgCnudqz/aZ2H+dMZHAVOQ7XGYBza
5FpQhGXTiFsNrbUXuFlpfzXiX94s8W+rkKFunlzOZqKzmaTmZdR5yOm/4U7H
PKrXkvWahVF4i7ld0Z0J+86TeitDBebRnLOd0d1p2P9W/RrxhO+8qKeE7zSz
tkO6S1Xu7NhMdbZ1m716Um/7Ni/1vOu5GRStp7zNOGke1Ms/A2hc/Q==
           "]], 
          PolygonBox[{{3486, 3485, 3440, 1462, 3481}, {4223, 4222, 4270, 1819,
            4226}, {4251, 1822, 4272, 4253, 4254}, {3824, 1625, 3784, 3779, 
           3780}, {3708, 3707, 3746, 1616, 3747}, {4000, 3999, 3963, 1665, 
           3960}, {3458, 1459, 3438, 3456, 3457}, {3882, 1656, 3925, 3926, 
           3927}}]}]}, 
       {RGBColor[1., 0.5518846527826892, 0.5518846527826892], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkLHKwWEUxg8ihj/vJiVitLgCyuAGFIOBkplZWbiNr77F4BZkY1BMVgZy
B7JYJL/TOcPT73lP5znved/KaNqZxEWkiBKokRWJpTjDJErjM3CbEzniX3Dj
Xmv9IPLGt+DQ+2tw7F5ru0jkmhRZRCb1S7hCd/wavt0f4MBn/sOS79OEe89e
I8to/wmW6XvRU4X5YLs92W3u9Vkwqe8Ge5vOvJD9+By9v+BZnfEgf8Yngs3V
bC/YWevtYP+ib6zDr/ffcra37v8Hf2n2MkU=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0T0vQ2EYxvGblq3aTSdh5Uvo4AtYmAwmFtY2IaSlco6ck/RIGzV4iX4F
dgm7VX2Jmmzif+Vcwy85uZ/nfu6Xs7Z/vH00HxGrqKJVj9jEMpooahEDZMgx
wtAxnTV9d7YU8YMbFDjAIe64M3aOcr+JTVEhp4p+I+ISCVKMMMQtxigwcExn
OTLHdPbFm3OLvLkQ8cb3KW+f4BkT7FJjBymu8cCde/ek3lIk6OMKH+S8ewbN
ck6NM3TRs657Vu+5d5P4rS1in/Tziz2+N6i57h7Ui3Y0cw3VSj175tm0k4pz
lDvxLNqZdvdE7BFtdDCtlbNrByuctxplbfXwVy9n0mw9XNTKHWgXL3j1G23/
c/37fydtTKE=
           "]], 
          PolygonBox[{{3646, 1537, 3645, 3708, 3709}, {3689, 3688, 3631, 1544,
            3684}, {3526, 1503, 3491, 3486, 3487}, {4062, 1744, 4065, 4000, 
           4001}, {4022, 4021, 4080, 1737, 4024}, {3460, 3459, 3458, 1498, 
           3522}, {4249, 4248, 4251, 1783, 4186}, {4182, 1778, 4220, 4223, 
           4224}, {3585, 3584, 3530, 1503, 3580}, {4124, 4123, 4181, 1778, 
           4127}, {4082, 1737, 4121, 4123, 4124}, {3626, 1544, 3589, 3584, 
           3585}}]}]}, 
       {RGBColor[1., 0.5047146162334986, 0.5047146162334986], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0zsvhEEUxvGxWeV6lSTuOtRKwkdQuBZEKCioSQhxjZXdZFdsrMIlfAXX
juA7IHwGFBRu/yfzFL9kc96ZM3POmW0en+2bSYUQOpFGuTqEPQxjBPWoQyOa
sIF1bCGL96oQ3nCHe6wSW/Earc1mWIsNbOI8CeEMF7hM4hk6qwe91TGHchWx
gzyxHAoo4pnYE9LsrcQAsX4sYRn7nFHGLkq4Zs0V3vGRxDtvOady51mT8x11
1ybX2oJW3Yk9PahBbRJjLT5TZ3cQa8cghrxGa9UT9eaJnI9o4HdjVeyBerGK
NSwSW8AJTlEi565nUHbNBcdKrnHJPVavXznrBUc4xiE5D9wD9WKanFOYwKR7
WnRM39TDtGtQLT/s+cYnvjJxj/aOYgzzrJlzT9SbMX9rQzv+iP36TrrbqWvT
zDS7bnS5ZtW+5l7c4DYTcyhXBVLuWYP3aO+l345mqtn2+u3ozD/PQLPIYjuJ
NaiWezxkYizrN6i3WPJbKaDoO9x4ZppdyndRT9SbD7+lOv83jt179US9efBZ
msGhcxb8xvTW/gH8Jn6P
          "]]]}, 
       {RGBColor[1., 0.45754457968430795`, 0.45754457968430795`], EdgeForm[
        None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkL8OwWAUxW8Im7aPwCQ6eQHRZ7AgNUksHRglhoaExCCdJJIyICHeQAwW
f+IhpPUIBmJ2bnqGL7/b09PT891Cu1frpkQkj5PGOZoim6zIDJzkRJ4ZkSm4
M0RK0H1wjecY+gMsWiIf6DbYxPlhroBveu7gl7NqQ+bsQZf+EFzSo9k2Mxvg
Cj0OmPvggPMWdJijeWP6R2DMzhF4xrsy9AC8Utc73TirN2SHBXihX7/zmV8F
O9Q9sMX9BOCJs+7Mo2duJD20T91Kumrnl5nsRf/lgBF1vZ/LHM3+AxfjPu4=

           "]], PolygonBox[CompressedData["
1:eJwt0E0OwWAQgOFJqR21kpCgDTt1ibqBHSscgGOQtIkmbcJdWHMIdQksWPh5
J2bxpNPpzHS+L1isxktHRBooI62LbJEhRwdt+AiMxj30kSC2Hu19eCJ379+j
vRusrUZrh3wLMcEUaZVexEhQqok4eBN/UOCCLjkfe+IdMuQIyQ2sR3vvuOGE
M0b8I0ITLaPxzWpzm6U76C5zcjObqbN1B93liRdGnCHClxnC80pNAZf3inHt
jHrWIw52J3o3P5pkLxw=
           "]], PolygonBox[CompressedData["
1:eJwtkM8KAVEUh0+KHeYNECU7b0Azb2DDsEHZslTWypTJxtQoKwvyCmLl70OY
4SFIrPhu7uLru51zOr/TzbR7lW5ERAyIwikucuMxxz7MoJ4UscGFRUykgfuw
5j3AJlgw0f0N3sJO1RIiRWod3IQW5AjLQhUe9PI4JOdK7kEZArgwewZP79jj
MrMvdQM2wTL+x3/JuuubQuxRm4Kv521c03lDPAIH0uxMQQkK9MrYJXsMjr7p
iFe6v8QBhPCh/lZ36j974h9X8DMN
           "]]}]}, 
       {RGBColor[1., 0.41037454313511745`, 0.41037454313511745`], EdgeForm[
        None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkDFOAmEQhScQoNpdEjsLA5UWGAoKCi0wewKpVoyNB9CKGDpLCwoKCk+g
xzAajYmNB5ANMRYW2gmVifGbzCsm35vZ2fnfTPv0fHhWMbMdokpcNc1WdbMC
FqlZA70Ny8zsFW3US/JD9A3sqr8Ht4gX9IreBjFBd+F9FvU1zJsxZwA3yS/R
OXxgVoF+TiNc/8A7/eszTuTHfR1r/ggOyCvoFtzI4t/vNL55zy5cJNFTwnoW
/n2PXB4u4K32WsKq3urAOV7X6Bmcal+/0zWzyprZE5xLe+1L+hP+6m5v8JF8
QX2axB297vdoy/8B7OutPa/rnn7Xlnp8j7E878O/JHy63w/Nf0/iDdczeKSZ
vsc/8hlEUw==
           "]], 
          PolygonBox[{{4147, 1780, 1781, 4151}, {3807, 1617, 1657, 3847}, {
           3983, 3982, 4028, 4029}, {3900, 1664, 1624, 3859}, {3472, 1500, 
           1501, 3476}, {3578, 3577, 3572, 3573}, {3885, 1657, 1617, 3846}, {
           4136, 4135, 4138, 4139}, {4240, 1781, 1780, 4236}, {3774, 3773, 
           3726, 3727}, {3727, 3726, 3681, 3682}, {3559, 1501, 1500, 3555}, {
           4133, 4132, 4135, 4136}, {3933, 3932, 3982, 3983}, {3827, 1624, 
           1664, 3866}, {3573, 3572, 3567, 3568}}], PolygonBox[CompressedData["
1:eJwtz0EOwUAUxvGXJlhpe4UmRIKkBxBSR2BVoQsOwErEru7BlksoibCxcQBK
rElY1AKJ+E/axS/f9M30vRmrN2j2NRExkcLREDmkRUJyihlsjKm1yQ48FHSR
DLVfVuSND6440WRLnnFBwNklIuw5vyYrDHuxbpFV1NR3sm+xziGPEopwEbFn
J2fVP44Z3/NrxHPUvBCa6sHd7nBZb8gAK/TQRTm5u0dO4GOOBrWFHr9ZvX0E
n9qQfNL7gZ2awxtvZF2P5zlJD9XrD9SeMd4=
           "]]}]}, 
       {RGBColor[1., 0.36320450658592673`, 0.36320450658592673`], EdgeForm[
        None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0s1KQlEUxfFDBDbRK9QLGFT2AQoFBVlRj9AoBzqweY1qXi+gL5BTewm1
eo0EtQKDDGqgg2zQf3XW4AeXe89Z5+x9d652eXoxF0LYwDz2siHsYh8lnGRC
OMYNblFMQiiggiq+0yF84QNjvGOEV7xhgD5y7F3GDpnbPkNnPZHxiAmm+GTN
GB10M/Gdvq2wdjUbM3K+k+5W5F3Bmco+510NFVTxy94ZntFLYoay8ljHFjad
oayqa6ujkcSaVXsL95hRyw8mmKZjRt4Zypr6m3qi3gzY00eKrIUk1qTa6mhk
Yo/V60McmZ51Z929g7b24SGJd2g5U9kN37XttT3XeodmEnugXpyh7DPr7pF6
1fTaK1ybnks4MD0vYsk1pDwDRb/TN/2z/3/nWRh5Fso+ew35TJwJzcYQL+lY
U9czoFnIe616PPOaoWdIs/QHDUFk4w==
          "]]]}, 
       {RGBColor[1., 0.3160344700367361, 0.3160344700367361], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtj7EKQWEUx0/U3e69HsCCCIsXUIoXkLIq7AzKA7CZrs1ksOAFLEomdVNm
g0Ee4koMfqfvDKff/5z+3/c/JzcYd0YpEclSaaqREbl5InX4C53WWYW6oktw
FohU0U14wrNBR7BL76HbcEq/Ra/hzvz6bm56D1fmmcAjfQ19gHkqjX76Lk9z
EzxDy1rCS+jmMTzbXHeJbf6Gie/2+cKP3XIPXYZmLWDf3urfmqe5L1iwHVqB
u0H3fOgO9jYK3J36fzFwGarL6J551PsH11wwSw==
           "]], 
          PolygonBox[{{3809, 3808, 3848, 3849}, {3849, 3848, 3888, 3889}, {
           4141, 4140, 4144, 4145}, {3651, 1539, 1578, 3715}, {4145, 4144, 
           4148, 4149}, {4149, 4148, 4152, 4153}, {4060, 1703, 1742, 4092}, {
           4056, 1742, 1703, 3992}, {3650, 1578, 1539, 3618}, {3565, 3564, 
           3560, 3561}, {3861, 3860, 3821, 3822}, {3570, 3569, 3564, 3565}, {
           3902, 3901, 3860, 3861}, {3889, 3888, 3934, 3935}, {3561, 3560, 
           3556, 3557}, {3822, 3821, 3775, 3776}}], 
          PolygonBox[{{3722, 1583, 3678, 3673, 3674}, {4087, 1739, 4137, 4140,
            4141}, {3621, 1542, 3574, 3569, 3570}, {3557, 3556, 3554, 1539, 
           3619}, {4153, 4152, 4156, 1742, 4089}, {3955, 1703, 3958, 3901, 
           3902}, {3674, 3673, 3624, 1542, 3669}, {3753, 1578, 3752, 3808, 
           3809}, {3776, 3775, 3728, 1583, 3771}, {3935, 3934, 3984, 1698, 
           3937}, {4035, 4034, 4086, 1739, 4038}, {3985, 1698, 4032, 4034, 
           4035}}]}]}, 
       {RGBColor[1., 0.26886443348754563`, 0.26886443348754563`], EdgeForm[
        None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0r1KA0EUhuFBbBQ2SaO9RNNFSMCAFrEwFxAFU5hCXa210DvQylSm0kvQ
C4iFFpGIQa9ASwMGDLiCFv5Uvh/7FQ8sZ86cmTNnZ+L9tb2xEEIB4zjOhHCE
C1xiFnmsoIZyLoQSFlDBeTaEMxzgEHfo4R59x7RWxTJa1DjBBprYJbaDU7Tx
jCfXVO0COXP4jEL4whaxTWwjRoO1ddSxmklzlPuOJEpjdddQrT/2/PoMnbVE
D4u5NKa1Mko+Q2fV3LveRG/zQ+wbRfbM45HvB8e09kFOgi5uMUlswjVVO/Hd
3jDCNLGpbLpHe0dee8UwSt+s6hzlDr2W92wqnoV6UC83xK7RwZVnqFm+YJBJ
71z0DDXLvmelHtTLwLm6s+7e9Kz0xg3X7HiGLffY9Zk6u+1Z9vwvxJ6VZqxZ
/wN8cVtH
          "]]]}, 
       {RGBColor[1., 0.2216943969383548, 0.2216943969383548], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4154, 1741, 4150}, {3936, 1658, 3890}, {3850, 1618, 
           3810}, {3571, 1541, 3622}, {3810, 1618, 3754}, {3938, 1658, 
           3936}, {3661, 1541, 3658}, {3566, 1541, 3571}, {3558, 1540, 
           3562}, {4046, 1740, 4049}, {3856, 1623, 3816}, {4052, 1741, 
           4055}, {3862, 1663, 3903}, {3903, 1663, 3956}, {3851, 1658, 
           3891}, {3620, 1540, 3558}, {3755, 1618, 3811}, {3772, 1623, 
           3777}, {4142, 1740, 4088}, {3777, 1623, 3823}, {4090, 1741, 
           4154}, {3655, 1540, 3654}, {4146, 1740, 4142}, {3954, 1663, 
           3896}}], 
          PolygonBox[{{3671, 3670, 3665, 3666}, {4049, 1740, 1741, 4052}, {
           3890, 1658, 1618, 3850}, {3658, 1541, 1540, 3655}, {4040, 4039, 
           4042, 4043}, {4150, 1741, 1740, 4146}, {4058, 4057, 3993, 3994}, {
           3896, 1663, 1623, 3856}, {3676, 3675, 3670, 3671}, {4037, 4036, 
           4039, 4040}, {3941, 3940, 3986, 3987}, {3811, 1618, 1658, 3851}, {
           3562, 1540, 1541, 3566}, {3653, 3652, 3716, 3717}, {3768, 3767, 
           3723, 3724}, {3823, 1623, 1663, 3862}, {3724, 3723, 3675, 3676}, {
           3987, 3986, 4036, 4037}}], 
          PolygonBox[{{3717, 3716, 3754, 1618, 3755}, {3654, 1540, 3620, 3652,
            3653}, {3994, 3993, 3956, 1663, 3954}, {3891, 1658, 3938, 3940, 
           3941}, {3816, 1623, 3772, 3767, 3768}, {4055, 1741, 4090, 4057, 
           4058}, {3666, 3665, 3622, 1541, 3661}, {4043, 4042, 4088, 1740, 
           4046}}]}]}, 
       {RGBColor[1., 0.1745243603891644, 0.1745243603891644], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{3755, 1579, 3717}, {3944, 1699, 3946}, {3676, 1582, 
           3724}, {3717, 1579, 3653}, {3954, 1702, 3994}, {3718, 1579, 
           3756}, {3990, 1702, 3952}, {4037, 1699, 3987}, {3946, 1699, 
           3988}, {4040, 1699, 4037}, {3653, 1579, 3654}, {4058, 1702, 
           4055}, {3764, 1582, 3761}, {3994, 1702, 4058}, {3761, 1582, 
           3720}, {3671, 1582, 3676}}], 
          PolygonBox[{{3817, 3816, 3768, 3769}, {3857, 3856, 3816, 3817}, {
           3852, 3851, 3891, 3892}, {3892, 3891, 3941, 3942}, {4047, 4046, 
           4049, 4050}, {3659, 3658, 3655, 3656}, {3662, 3661, 3658, 3659}, {
           3667, 3666, 3661, 3662}, {3897, 3896, 3856, 3857}, {4050, 4049, 
           4052, 4053}, {4044, 4043, 4046, 4047}, {3812, 3811, 3851, 3852}}], 
          PolygonBox[{{3988, 1699, 4040, 4043, 4044}, {3756, 1579, 3755, 3811,
            3812}, {3720, 1582, 3671, 3666, 3667}, {3952, 1702, 3954, 3896, 
           3897}, {3656, 3655, 3654, 1579, 3718}, {3769, 3768, 3724, 1582, 
           3764}, {3942, 3941, 3987, 1699, 3944}, {4053, 4052, 4055, 1702, 
           3990}}]}]}, 
       {RGBColor[1., 0.12735432383997358`, 0.12735432383997358`], EdgeForm[
        None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0DFOAlEUheEXQwkz0ZKOPTgFrEAjcRJlBRQ6QoK4CZWekU1IIZEC1oDR
QGAFUMAq/E/eKb5kct+be+59je7z3eAshFBHBddJCFd4xRt2aQhbfGCSxprO
PjHFCUcssMQMX3jHCHN8uzbznYVrOqvRs4pLZM5Q1hAv2GDtGTTL1Nl7HHBB
7TyNM2iWP75//Y/+bVO78U7aLXPWAx7RQtM91KvEGCv8oI+ea6VrK2coa+Rd
79FJ4sxD92w5Q1kFntJ4R3dvkSexVjhDWbnPNHPbO2pXvZHe6h833T3L
          "]]]}, 
       {RGBColor[1., 0.08018428729078309, 0.08018428729078309], EdgeForm[
        None], GraphicsGroupBox[{
          PolygonBox[{{3898, 1662, 3953}, {3855, 1622, 3815}, {3854, 1659, 
           3894}, {3853, 1619, 3813}, {3719, 1580, 3657}, {3943, 1659, 
           3893}, {3765, 1622, 3770}, {3657, 1580, 3660}, {3663, 1581, 
           3668}, {3813, 1619, 3757}, {3760, 1581, 3759}, {3668, 1581, 
           3721}, {3949, 1700, 3950}, {4048, 1700, 4045}, {3945, 1659, 
           3943}, {4054, 1701, 4051}, {4045, 1700, 3989}, {3770, 1622, 
           3818}, {3858, 1662, 3898}, {3991, 1701, 4054}}], 
          PolygonBox[{{3814, 1619, 1659, 3854}, {3895, 1662, 1622, 3855}, {
           3950, 1700, 1701, 3951}, {3893, 1659, 1619, 3853}, {3758, 1580, 
           1619, 3814}, {3951, 1701, 1662, 3895}, {4051, 1701, 1700, 4048}, {
           3660, 1580, 1581, 3663}, {3759, 1581, 1580, 3758}, {3818, 1622, 
           1662, 3858}, {3757, 1619, 1580, 3719}, {3953, 1662, 1701, 3991}}], 
          PolygonBox[{{3763, 3762, 3721, 1581, 3760}, {3948, 3947, 3989, 1700,
            3949}, {3894, 1659, 3945, 3947, 3948}, {3815, 1622, 3765, 3762, 
           3763}}]}]}, 
       {RGBColor[1., 0., 0.], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{3895, 1661, 3951}, {3949, 1660, 3948}, {1621, 1620, 
           1660}, {3814, 1620, 3758}, {3855, 1661, 3895}, {3758, 1620, 
           3759}, {3763, 1621, 3815}, {3951, 1661, 3950}, {1661, 1621, 
           1660}, {3760, 1621, 3763}, {3854, 1620, 3814}, {3948, 1660, 
           3894}}], 
          PolygonBox[{{3815, 1621, 1661, 3855}, {3759, 1620, 1621, 3760}, {
           3950, 1661, 1660, 3949}, {3894, 1660, 1620, 3854}}]}]}}],
     AspectRatio->NCache[
       Rational[250, 513], 0.4873294346978557],
     AxesOrigin->{Automatic, Automatic},
     DisplayFunction->Identity,
     Frame->True,
     FrameLabel->{None, None},
     FrameStyle->Automatic,
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{{0}, {0}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->Large,
     LabelStyle->{FontFamily -> "Times"},
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True},
     PlotLabel->FormBox["0", TraditionalForm],
     PlotRange->{{-6., 6.}, {-2.9239766081871346`, 2.9239766081871346`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"/Users/elias/Dropbox/Documents/EPFL/Doctorat/etr/papers/\
pynoza/funknoza/data/plot-order-10-a-5.pdf\"\>", " ", 
    GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxcnQVUVtnXxrEJaQm7u8Zu9zt2jFhjdztjjsnYXWPnWDO2jt2KdRQBCwMV
EBQlBRQUxVacz/98Ppv1PrP+a33r93m995x9fnC9e58o2n9Uh0FZbWxsmrnb
2Pzv//7/f94Xm05wj2gzMNdFsPuA8LI1q+RUjm27cVKhr9mVD9fvcyPnjWzK
08sWL/ByXVblNp6Jw8MHZlEukG3feVPFRjn0SVSBdhkZBjzGb9CFIus+Kzuv
Su3z6oePyvuHj8/if/2dcstmGdtWDnyj/LTw3CYDvr5SzpmeN3jIDy+Vf9xV
1tlu4DPlyd3qdNi7LkH5RO6Wa1rfiFZ+PP3I4YiMcOUdwVtH1L4erOxd7VL6
pCrHmIWuF7qf0POUv7dH+Xt7lb/3R/l7f5W/x0P5e7yUv8dT+Xu8lb+Ph/L3
8bLQeCp/H2/l7z4of/dF+btPyt99s8x95xbZeqiX+geGf2D4B4Z/YPgHhn9g
+AeGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf8RC1wvdT+h5Qu0R
aq9Qf4T6KxQPoXgJxVMo3kLjITReFhpPC423MvwjX5ThH/lmsUsteXzdHU/1
Dwz/wPAPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8Dw
Dwz/iIWuF7qf0POE2iPUXqH+CPVXKB5C8RKKp1C8hcZDaLwsNJ4WGm9l+Ee+
KMM/8s2yNK72t/9l+geGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeG
f2D4B4Z/YPgHhn9g+AeGf8RC1wvdT+h5Qu0Raq9Qf4T6qwz/KF7K8I/irQz/
aLzUD/hH460M/8gXZfhHvlncv/02rLzVQ/0Dwz8w/APDPzD8A8M/MPwDwz8w
/APDPzD8A8M/MPwDwz8w/APDPzD8A8M/MPwDwz9ioeuF7if0PKH2CLVXqD9C
/RWKh1C8hOIpFG+h8RAaLwuNp4XGWxn+kS/K8I98s/x5p3ejyXaZ/oHhHxj+
geEfGP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhH7HQ
9UL3E3qeUHuE2ivUH6H+CsVDKF5C8RSKt9B4CI2XhcbTQuOtDP/IF2X4R75Z
Clz57dv/8qh/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g
+AeGf2D4B4Z/YPhHLHS90P2EnifUHqH2CvVHqL/K8I/ipQz/KN7K8I/GS/2A
fzTeyvCPfFGGf+SbZev5Od++SNzVPzD8A8M/MPwDwz8w/APDPzD8A8M/MPwD
wz8w/APDPzD8A8M/MPwDwz8w/APDPzD8Ixa6Xuh+Qs8Tao9Qe4X6I9RfoXgI
xUsonkLxFhoPofGy0HhaaLyV4R/5ogz/yDdLqW9fI70bZfoHhn9g+AeGf2D4
B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn/EQtcL3U/o
eULtEWqvUH+E+isUD6F4CcVTKN5C4yE0XhYaTwuNtzL8I1+U4R/5Ztm393//
ual/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4
B4Z/YPhHLHS90P2EnifUHqH2CvVHqL9C8RCKl1A8heItNB5C42Wh8bTQeCvD
P/JFGf6Rb5bK//1CzPQPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAP
DP/A8A8M/8DwDwz/wPAPDP+Iha4Xup/Q84TaI9Reof4I9VcoHkLxEoqnULyF
xkNovCw0nhYab2X4R74owz/yzfLfr8PJruofGP6B4R8Y/oHhHxj+geEfGP6B
4R8Y/oHhHxj+geEfGP6B4R8Y/oHhHxj+geEfGP4RC10vdD+h5wm1R6i9Qv0R
6q9QPITiJRRPoXgLjYfQeFloPC003srwj3xRhn/km6XOfwlBF/UPDP/A8A8M
/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAPDP+Iha4X
up/Q84TaI9Reof4I9VcoHkLxEoqnULyFxkNovCw0nhYab2X4R74owz/yzXLh
f58jrTP9A8M/MPwDwz8w/APDPzD8A8M/MPwDwz8w/APDPzD8A8M/MPwDwz8w
/APDPzD8A8M/YqHrhe4n9Dyh9gi1V6g/Qv0ViodQvITiKRRvofEQGi8LjaeF
xlsZ/pEvyvCPfPteD3am+QfONP/AmeYfONP8A2eaf+BM8w+caf6BM80/cKb5
B840/8CZ5h840/wDZ5p/4EzzD5xp/oEzzT9wpvkHzjT/wJnmHzjT/ANnmn/g
TPMPnGn+gTPNP3Cm+QfONP/AmeYfONP8A2eaf+BM8w+caf6BM80/cKb5B840
/8CZ5h840/wDZ5p/4EzzD5xp/oEz1X+dqP7rRPVfJ6r/OlH914nqv05U/3Wi
+q8T1X+dqP7rRPVfJ6r/OlH914nqv05U/3Wi+q8T1X+dqP7rRPVfJ6r/OlH9
14nqv05U/3Wi+q8T1X+dqP7rRPVfJ6r/OlH914nqv05U/3Wi+q8T1X+dqP7r
RPVfJ6r/OlH914nqv05U/3Wi+q8T1d8cqf7mSPU3R6q/OVL9zZHqb45Uf3Ok
+psj1d8cqf7mSPU3R6q/OVL9zZHqb45Uf3Ok+psj1d8cqf7mSPU3R6q/OVL9
zZHqb45Uf3Ok+psj1d8cqf7mSPU3R6q/OVL9zZHqb45Uf3Ok+psj1d8cqf7m
SPU3R6q/OVL9zZHqb45Uf3Ok+psj1T8cqP7hQPUPB6p/OFD9w4HqHw5U/3Cg
+ocD1T8cqP7hQPUPB6p/OFD9w4HqHw5U/3Cg+ocD1T8cqP7hQPUPB6p/OFD9
w4HqHw5U/3Cg+ocD1T8cqP7hQPUPB6p/OFD9w4HqHw5U/3Cg+ocD1T8cqP7h
QPUPB6p/OFD9w4HqHw5U/3Cg+ocD5Z/tKf9sT/lne8o/21P+2Z7yz/aUf7an
/LM95Z/tKf9sT/lne8o/21P+2Z7yz/aUf7an/LM95Z/tKf9sT/lne8o/21P+
2Z7yz/aUf7an/LM95Z/tKf9sT/lne8o/21P+2Z7yz/aUf7an/LM95Z/tKf9s
T/lne8o/21P+2Z7yz/aUf7an/LM95f/sKP9nR/k/O8r/2VH+z47yf3aU/7Oj
/J8d5f/sKP9nR/k/O8r/2VH+z47yf3aU/7Oj/J8d5f/sKP9nR/k/O8r/2VH+
z47yf3aU/7Oj/J8d5f/sKP9nR/k/O8r/2VH+z47yf3aU/7Oj/J8d5f/sKP9n
R/k/O8r/2VH+z47yf3aU/7Oj/J8d5V9sKf9iS/kXW8q/2FL+xZbyL7aUf7Gl
/Ist5V9sKf9iS/kXW8q/2FL+xZbyL7aUf7Gl/Ist5V9sKf9iS/kXW8q/2FL+
xZbyL7aUf7Gl/Ist5V9sKf9iS/kXW8q/2FL+xZbyL7aUf7Gl/Ist5V9sKf9i
S/kXW8q/2FL+xZbyL7aUf7Gl/Iv6ZvlvOkyBXOofGP6B4R8Y/oHhHxj+geEf
GP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhHxj+geEfGP4RC10vdD+h5wm1R6i9
Qv0R6q8y/KN4KcM/ircy/KPxUj/gH423MvwjX5ThH/lmCfnfb8PUHOofGP6B
4R8Y/oHhHxj+geEfGP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhHxj+geEfGP4R
C10vdD+h5wm1R6i9Qv0R6q9QPITiJRRPoXgLjYfQeFloPC003srwj3xRhn/k
m+W/6dDns6t/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g
+AeGf2D4B4Z/YPhHLHS90P2EnifUHqH2CvVHqL9C8RCKl1A8heItNB5C42Wh
8bTQeCvDP/JFGf6Rb5b4/6UDl2ZT/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAP
DP/A8A8M/8DwDwz/wPAPDP/A8A8M/8Dwj1joeqH7CT1PqD1C7RXqj1B/heIh
FC+heArFW2g8hMbLQuNpofFWhn/kizL8I98s/y2H651V/QPDPzD8A8M/MPwD
wz8w/APDPzD8A8M/MPwDwz8w/APDPzD8A8M/MPwDwz8w/APDP2Kh64XuJ/Q8
ofYItVeoP0L9FYqHULyE4ikUb6HxEBovC42nhcZbGf6RL8rwj3yzvP9fOa5y
FvUPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/
wPAPDP+Iha4Xup/Q84TaI9Reof4I9VcoHkLxEoqnULyFxkNovCw0nhYab2X4
R74owz/y7ft+CDa0/4YN7b9hQ/tv2ND+Gza0/4YN7b9hQ/tv2ND+Gza0/4YN
7b9hQ/tv2ND+Gza0/4YN7b9hQ/tv2ND+Gza0/4YN7b9hQ/tv2ND+G8pC1wvd
T9l6/w1tj7L1/hvaH2Xr/Tc0HsrW+29oPJWt99/Q8VC23n9Dx1PZev8N9UHZ
ev8N9UnZev1vhrFe/5thrNf/Zhjr9b8Zxnr9b4axXv+bYazX/2YY6/W/GcZ6
/W+GsV7/m2Gs1/9mGOv1vxnGev1vhrFe/5thrNf/Zhjr9b8Zxnr9b4axXv+b
YazX/2YY6/W/GcZ6/a+y0PVC9xN6nlB7hNor1B+h/grFQyheQvEUirfQeAiN
l4XG00LjrWy9/ld9UbZe/6u+fV8P8ln9A1uvP/qs/oGt1x99Vv/A1uuPPqt/
YOv1R5/VP7D1+qPP6h/Yev3RZ/UPbL3+6LP6B7Zef/RZ/QNbrz/6rP6Brdcf
KQtdL3Q/oecJtUeovUL9EeqvUDyE4iUUT6F4C42H0HhZaDwtNN7K1uuP1Bdl
6/VH6tv3+agf1D+w9fznD+of2Hr+8wf1D2w9//mD+ge2nv/8Qf0DW89//qD+
ga3nP39Q/8DW858/qH9g6/nPH9Q/sPX85w/qH9h6/rOy0PVC9xN6nlB7hNor
1B+h/grFQyheQvEUirfQeAiNl4XG00LjrWw9/1l9Ubae/6y+WX4a+t+KEPUP
DP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAP
DP+Iha4Xup/Q84TaI9Reof4I9VcoHkLxEoqnULyFxkNovCw0nhYab2X4R74o
wz/yzdLnf+nokm/UPzD8A8M/MPwDwz8w/APDPzD8A8M/MPwDwz8w/APDPzD8
A8M/MPwDwz8w/APDPzD8Ixa6Xuh+Qs8Tao9Qe4X6I9RfoXgIxUsonkLxFhoP
ofGy0HhaaLyV4R/5ogz/yDfLmP82RHil/oHhHxj+geEfGP6B4R8Y/oHhHxj+
geEfGP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhH7HQ9UL3E3qeUHuE2ivUH6H+
CsVDKF5C8RSKt9B4CI2XhcbTQuOtDP/IF2X4R75934/thfoHtt7/74X6B7be
/++F+ge23v/vhfoHtt7/74X6B7be/++F+ge23v/vhfoHtt7/74X6B7be/++F
+ge23v/vhfoHtt7/T1noeqH7CT1PqD1C7RXqj1B/heIhFC+heArFW2g8hMbL
QuNpofFWtt7/T31Rtt7/T337vh74mfoHtl5//kz9A1uvP3+m/oGt158/U//A
1uvPn6l/YOv158/UP7D1+vNn6h/Yev35M/UPbL3+/Jn6B7Zef/5M/QNbrz9X
Frpe6H5CzxNqj1B7hfoj1F+heAjFSyieQvEWGg+h8bLQeFpovJWt15+rL8rW
68/VN0un//5LUP/A8A8M/8DwDwz/wPAPDP/A8A8M/8DwDwz/wPAPDP/A8A8M
/8DwDwz/wPAPDP/A8I9Y6Hqh+wk9Txn+UXuV4R/1Vxn+UbyU4R/FWxn+0Xip
H/CPxlsZ/oHhHxj+geHf5P9+IUarf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgH
hn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4Ryx0vdD9hJ4n1B6h9gr1R6i/QvEQ
ipdQPIXiLTQeQuNlofG00Hgrwz/yRRn+kW+W/z5Hjoerf2D4B4Z/YPgHhn9g
+AeGf2D4B4Z/YPgHhn9g+AeGf2D4B4Z/YPgHhn9g+AeGf2D4Ryx0vdD9hJ4n
1B6h9gr1R6i/QvEQipdQPIXiLTQeQuNlofG00Hgrwz/yRRn+kW/f9wMMVv/A
1vtPBqt/YOv9J4PVP7D1/pPB6h/Yev/JYPUPbL3/ZLD6B7befzJY/QNb7z8Z
rP6BrfefDFb/wNb7Twarf2Dr/SeVha4Xup/Q84TaI9Reof4I9VfZev9JjZey
9f6TGm9l6/0ndbzUD+v9J3W8la33n1RflK33n1TfLP+fDjyq/oHhHxj+geEf
GP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhHxj+geEfGP6B4R8Y/oHhH7HQ9UL3
E3qeUHuE2ivUH6H+CsVDKF5C8RSKt9B4CI2XhcbTQuOtDP/IF2X4R76BhfwT
8k/IPyH/hPwT8k/IPyH/hPwT8k/IPyH/hPwT8k/IPyH/hPwT8k/IPyH/hPwT
8k/IPyH/hPwT8k/IPyH/hPwT8k/IPyH/hPwT8k/IPyH/hPwT8k/IP6H3r9D7
V+j9K/T+FXr/Cr1/hd6/Qu9fofev0PtX6P0r9P4Vev8KvX+F3r9C71+h96/Q
+1fo/Sv0/hV6/wq9f4Xev0LvX6H3r9D7V+j9K/T+FXr/Cr1/hd6/Qu9fofev
0PtX6P0r9P4Vev8KvX+F3r9C71+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h
7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h
7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h7w+h
7w+h7w+h/ItQ/kUo/yKUfxHKvwjlX4TyL0L5F6H8i1D+RSj/IpR/Ecq/COVf
hPIvQvkXofyLUP5FKP8ilH8Ryr8I5V+E8i9C+Reh/ItQ/kUo/yKUfxHKvwjl
X4TyL0L5F6H8i1D+RSj/IpR/Ecq/COVfhPIvQvkXofyzUP5ZKP8slH8Wyj8L
5Z+F8s9C+Weh/LNQ/lko/yyUfxbKPwvln4Xyz0L5Z6H8s1D+WSj/LJR/Fso/
C+WfhfLPQvlnofyzUP5ZKP8slH8Wyj8L5Z+F8s9C+Weh/LNQ/lko/yyUfxbK
Pwvln4Xyz0L5Z6H6m1D9Taj+JlR/E6q/CdXfhOpvQvU3ofqbUP1NqP4mVH8T
qr8J1d+E6m9C9Teh+ptQ/U2o/iZUfxOqvwnV34Tqb0L1N6H6m1D9Taj+JlR/
E6q/CdXfhOpvQvU3ofqbUP1NqP4mVH8Tqr8J1d+E6m9C9Teh+QdC8w+E5h8I
zT8Qmn8gNP9AaP6B0PwDofkHQvMPhOYfCM0/EJp/IDT/QGj+gdD8A6H5B0Lz
D4TmHwjNPxCafyA0/0Bo/oHQ/AOh+QdC8w+E5h8IzT8Qmn8gNP9AaP6B0PwD
ofkHQvMPhOYfCM0/EJp/IDT/QGj+gdD8A6H5V0Lzr4TmXwnNvxKafyU0/0po
/pXQ/Cuh+VdC86+E5l8Jzb8Smn8lNP9KaP6V0PwroflXQvOvhOZfCc2/Epp/
JTT/Smj+ldD8K6H5V0Lzr4TmXwnNvxKafyU0/0po/pXQ/Cuh+VdC86+E5l8J
zb8Smn8lNP9KaP6V0Pwr9e/7fED1D0zzT9U/MM0/Vf/ANP9U/QPT/FP1D0zz
T9U/MM0/Vf/ANP9U/QPT/FP1D0zzT9U/MM0/Vf/oeqH7CT1PqD1C7RXqj1B/
heIhFC+heArFW2g8hMbLQuNpofFWpvmn6h/5xL5hPrT6B6b59+ofmObfq39g
mn+v/oFp/r36B6b59+ofmObfq39gmn+v/oFp/r36B6b59+ofmObfq390vdD9
hJ4n1B6h9gr1R6i/QvEQipdQPIXiLTQeQuNlofG00Hgr0/x79Y98Yt+wHkT9
A9P6I/UPTOuP1D8wrT9S/8C0/kj9A9P6I/UPTOuP1D8wrT9S/8C0/kj9A9P6
I/UPTOuP1D+6Xuh+Qs8Tao9Qe4X6I9RfoXgIxUsonkLxFhoPofGy0HhaaLyV
af2R+kc+sW9YD6f+gWn9pfoHpvWX6h+Y1l+qf2Baf6n+gWn9pfoHpvWX6h+Y
1l+qf2Baf6n+gWn9pfoHpvWX6h9dL3Q/oecJtUeovUL9EeqvUDyE4iUUT6F4
C42H0HhZaDwtNN7KtP5S/SOf2DesB1b/wLT+XP0D0/pz9Q9M68/VPzCtP1f/
wLT+XP0D0/pz9Q9M68/VPzCtP1f/wLT+XP0D0/pz9Y+uF7qf0POE2iPUXqH+
CPVXKB5C8RKKp1C8hcZDaLwsNJ4WGm9lWn+u/pFP7Bv2Q7DQ/hsW2n/DQvtv
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
QvESiqdQvIXGQ2i8LDSeFhpvZev1v5n+kU/s2/d6nCfVfz2p/utJ9V9Pqv96
Uv3Xk+q/nlT/9aT6ryfVfz2p/utJ9V9Pqv96Uv3Xk+q/nlT/9aT6ryfVfz2p
/utJ9V9Pqv96Uv3Xk+q/nlT/9aT6ryfVfz2p/utJ9V9Pqv96Uv3Xk+q/nlT/
9aT6ryfVfz2p/utJ9V9Pqv96Uv3Xk+q/nlT/Vd++78eW6R/Yev+/TP/A1vv/
ZfoHtt7/L9M/sPX+f5n+ga33/8v0D2y9/1+mf2Dr/f8y/QNb7/+X6R/Yev+/
TP/A1vv/ZfpH1wvdT+h5Qu0Raq9Qf4T6KxQPoXgJxVMo3kLjITReFhpPC423
svX+f5n+kU/s2/d6sBfNP/Ci+QdeNP/Ai+YfeNH8Ay+af+BF8w+8aP6BF80/
8KL5B140/8CL5h940fwDL5p/4EXzD7xo/oEXzT/wovkHXjT/wIvmH3jR/AMv
mn/gRfMPvGj+gRfNP/Ci+QdeNP/Ai+YfeNH8Ay+af+BF8w+8aP6BF80/8KL5
B140/8CL5h940fwDL5p/4EXzD9S37/sheNP+G960/4Y37b/hTftveNP+G960
/4Y37b/hTftveNP+G960/4Y37b/hTftveNP+G960/4Y37b/hTftveNP+G960
/4Y37b/hTftvKAtdL3Q/oecpW++/oe1Vtt5/Q/urbL3/hsZL2Xr/DY23svX+
GzpeFhpPZev9N9QHZev9N9QnZfg3ou3EXs8zPuj5Pq3H5qpz9ssHk7NY/x96
f71hTv/9pdycHh/1vJ9uj2eNmfKNp4zoFrmi5m7T2PtTHZtx+ufi02vGH31/
/2g6lG619vy+c/J6WeUGnh0/6nlAG4dO9x7X/aMpcXm976Rmd7Dfl+lacFTR
GUm3sZ+Z8Z0TtS/PgnCZ1fTJzVwdP+h5RHeffnAtVv29tndui7E9e7d9b2xT
l7ed1S/IZB/8aFn2yPfa3hcbXLz6z32nbFvq+NFzCe/NltyRoZO8F0qF3+6e
G/Ltz09fiyp3utQxU3vppAqTc33Q/sje6TMyQvXvi0enHltKv39vajR80dah
XaDUXpMyYtndd+b+g/QfThU8LTE+zefWj9H2ybQVA0fM3vpOufrxf4L8oz+Y
aRc3llz4OlzGLSnW9JJ5bxL9phzy7XtPTgzeeNn89c5sGXx2zJ1NN+X50q/+
V55o/yV2Y47Rfbu9Vz7ae/L6e4s/mEuTTtuczR8tj64XGlak/nvjMrfBP23i
I2WJ/c91DnT4oOctDdzyZ9I/WT6YqqWLvh14K07y1Y3qtjDbez1/qWLbCm+a
JH7rT4ulBwv2eYr9AE1M7W5xcZN1f0STO/Tky6n97ilXyFia43Zb3Q/RdP+Y
sc7x7W39+wcODIrYVeuJ8pGyn5zN5afi1t3t/bzrmefPV6n+xM+79VvTd/b5
oynd75m78X1efZr1ziyu9XJuRptjZmyT7r959XtrWo722erR756s/jRYlvll
ni/fIPeUMYlV35k/x6/12VYyWrra1vN7P/SNqXC6kaWZY4Ts6Da7kWfSW41H
Hefdb9JyvjXZh544fn1lrCw83Tun3am35scizju3XE6S5GoLti/fmXkefc1d
S53bjH1jft7zpulem+d6XnyxogMmzPig+5eaOQV/mfprvnvK3nnqVowucFw5
akW/rOVqRurf79dy+oCNxeKVpxy4EDFgyHOZnjhoYO6I1+bv9geTi42IM789
3TLWY0e6xuvCntMBNz6/Mvm/3PLZ2ffb93NScvP9fV/rz8uWYdPqDcz32lQd
39P/4P4w4z30Tei+zekm9B+73WbxHfPyxBfvAU1f689TSLGFvz/ak64ceuv+
0BzFXpvguI+98j+7Zt7/mrt4WtF00/PPxRcSQy6ZvLmaREUWfWPC1zdsOHTs
MdPZ7f3ldQVf68/b6rg14ccLpyuHHK/+POTb9WBzyNHhZ5fXZlrnpVeXFD5g
po16Vj/y2Wsz2q9GryWbh5gGla+M7BuYbtr+nVjgUfm9cqnJH2HjHmae9+5T
/XS+bTf0eRJZPKH37bP6PMlecNFPzt+uvzzoWu6F445Lj15/xi8Jem1+OdTd
I/+BS3J0864puY+mm1f72u14VfiafKr5+vzd2RoPeZjtzCn7TRoP2fb+3bm9
u18bn903GjZ8HSJnmjYpXeBtuikzN0uOWrXDxa1Z1peVG2r8Jb73sOvbE9OV
c/X79Knc5tcmrfWwApP6PpTI3gWlb6HX6uOH3ybePZIv3bx5NXnpWPdUcd70
KrRx2dd6/tmIz23+eZjltcnztN/Sjrszz6O/OiDVbnXeszI5yO5Hv9/T9Py3
Sz1Dr/d2emWuL5lYNUvkc+zXbLL4+BY5mDtN2jT3HbXqFz3v3mz0H3Qw3e+V
8X3neLDN0QTTfdzYKSXOv9Lz4lp0b1Au6+ZXZnu34e/mFokxfarunJll4yv1
cZTN+uxbG70y2Z69zl/LM9KsKHv/aJDrK/Ux6NLiwYOD00z14Xv+KNbzrpnb
vmvxuW5p6ltJ/wLeQXnTzOGxi+6VrnjFrNqZWPdeqzSTcvBEq8/+F/V88gHr
4t4tL/7KzB7s9qXt+DQTELFoypQ9afrnE/b3Cvqxx2U9n/3IuJ0ve7kFS+XL
7+tPuptitqe1P9RjQ5r+ef+/7+f9peYreen007/hdVK1v4ULLC41NkeqabI3
/6Vsm2JN6UMhl7yrZZ4XP/ePGnVWz3uuXGJC6a4b/0k1vXdMufOlQ6T5pX2X
GdU6Pzf1a27I19j2iSlXcN/qEiUyz5dvGVUmj+vVlMzz9jbvWpUx7LlyavPI
dbUupRpvB5/s4xbdMV+H/eVbc16KmVV8cemCtveMy/L+3Wq0fm5S6l1vFTQ3
1LQ94NMy0CHzvPqVnj6NfEqnKodNb1MvvFGKct7kn6r37f1cuVeHnyom/555
3vil4l1yzDzywiwxw8/UqHjcbM5RoOPiB6kmbcvndy/tzprfE6O3rPs3xZT9
MTBvp/SLpvO1nS+2lUoxkUdy1z7aL8BU3fdr/YNtnps/iv3c2fnOFeO8pPIi
v3HPTINVG8cNb3jD/OxZsu7gky/090G5Xp2rbPw3Vdlmx/wyd1pkctiz04Vz
rExR3l/lmWfdh8+VZ/nmdxpVIpO7mp9y7BiReV76sYgVF3wOvDDu3mGrA92P
SuCKxjbP3qcazwrBhf89sEfCW779cW6jVJO73YPyT4dukOQsu2cXWZJi+or/
xdEHh8knv66BZ8Ofm+oXd39uOXWVyT3GPleXYs9NufhjuarU3mkKljvX4vXw
Z6bgm2sLHnc9bKLzXrDdfFD7JzOenbz9IrN/UuTsobWW9pl88Y89vVZu0/5J
355bS8Sna38kS8UNz2s0zeStGSuPzl+bef57sgn2ti/0wjRMWNGq0/trkneu
d+0iv6aar35LSqUVuiKtWg3sUvNkirmwdGHWP5oFyCTnwxN+yppipg6Y+7jk
yEuy7/7nNf19npvfR2cdP7P8eXm4vvkJ3w3PzIe8nyqcmnRKilpyvB6T6ZdE
+57dfbOJ+iV/H/mtV5lp6pf0flbaffYp9UsKFn98NSot83z6Rz1WT6tdLpMt
rkenDWz+woS8D3IvlBQmPXO0bW87PtW0u7d2ZcuGoeL78Xnx/d/ic+vgYNfx
q7+9/1MXvGt757lps6jm8i3PQuRITMlr6RnPzI1BOZ2DLXfkZqj/xnXln5nV
s/bnf1nxptz8eNdpfGH9+ZMVaUdeRjmnZp5Pnrj8TjMb/XkU78ejjhz61l7w
sSJVVhcf+sLkTn11YGW/aNn2ys12ZtNUczelzrM7Ex7Lcv83kx8XSzGL/13m
O6XcI5m2KuxlPZvnprnb05xlHkfInR37q4aU098f8qRefMbSXinKL+7mv/bT
8mfKnVfkTN7d/oU5uHtxeGWvBOnab/2Xn8ammBK+pZfnqBYnPapUcHm9+tvv
7Rb+LR76xMiUF0X3VD6uv78k/MKgPwd8+/k5U+b8RNfwJJzvYZycPl58NOil
abou+Mq6jG/+Hm3favryNP3zJR9tb2e7nYjzTcye92sb384Vp5x8taNznWWP
lf3WxZbN/1LPSzFuBaq+3d8jRHm5o8OK8sf9leOmlsiWe3uYPi/XOYdpM+fc
Uh6Y9XXP1i5RypHFV1XrWVzPRzHHyhRbnnQ6Rra0Kln3p6/Jxn7Zoy4dmup5
L+Zwcuc5Y6Ylyzu/tw/7f0rW92HVK74Xl+RJMjYm5cGOoSl6/et9gzMefXsf
JvTY8uTaw6f6PlxYZaC/T96n5kjJ0y0Pbk42IVOK7br8Ocn0LT/Z58ej3/7/
LSv1WZOh59ebTV+GpfWbnWB69z20wOmXBLP1zxH/FvVNMjLk4oyCw2KN05fh
sZP6PdX3xe25XZu3cFK/TJHbS888fp+o/Jt3YMXxMQnKX4KjYoZFPTXN/s7b
tVT8fTNwXba/6/km6+/r7UN3yJ+9k5Rj6zSN/vYPeuUiDk9ntC//VHlN1zkB
K7skmyJuKyvdKuRnmuUf+vpUXKKpEVS7Ttxof/MuqnWRqFFPTY/ZZXr06XDV
nKrUqsyHg8n6+/Tq0tdpi5KSlCNebPArWCyTk30azzrcI1H508HnrRqveaps
77zaPexWgvJG9yrPwp4kmzWp4WPnrToiQ38o88dxl2RT0ye04a7cu6RGm8IV
Vv6YZGbNelt+evwKyfqr581RYxLNnUrTW2/aMsPcnuc4ss32p2Zv1zNnlzTa
ajZtz+5c/n6C2ZKweuCbngfNrI9T9m9K0vaLfacyP+dokMkrD9/7PGKFtl/y
5Z6+PSxB2y/bh5RrLXUzufzl0Ne7l2p/5HihmRtc4rQ/0qb32mXv5ieb4UcW
35247rrk7dsxef6zJOOyaHo1r3xX5Wk/l8Z52ySZ4/3HrD65KVCODri5ae+h
RNO13qC3nQpflmmDFr2r55Zovrh37fx260VpPaR5u5vjvvkZsWZk2ZbnxPuX
7Ht7hyeYRYsm/zDU55SERncuNWGC+iCD+tZ/Uz1QfZC3T4r6p7tn8rw+uZYf
7a9+iOeTlF6/HVE/ZHfvu+V/sMnk1UXfPN70Ptmcazmr3ZSgcOma+vHe7v7J
pueROc/T/wyTAn7/Xj16M8l88Z4/b9iwUImek+PC+dpJZtOMhUXjGtyXne0c
jl3dnmjqJ/1xrrvLPfmlgOuee06J5lHbpV3uxoZIpSTPzY9/f2qmnFr+uuWJ
O/L6WIGVyfEJpk7DUvlnO9+WOgV+3/z5WbL+Pu7ZrbxPA9dMnr426uu0WknK
2+4tO3Sxl/48SaBLo75Z5zxVTmrzxqXJXv35kirVvfMHr002oXGBef9uEy0z
88dcaJOSZHoHhjYs2OiJhGTd2//2N//cLhdu9SUpSoo+G5Oz/bpEE3Txl04P
lz2S30Lq7b2b8tRMunCs75maD+XS6ew+Pzd6aiqeyxi2PipC3LbcfBX67fdE
jF/zib5zHkjN7X/frFUmWX/f/5w8LCX2m296Pkrl2g5Lt+vvC1k2Pnu5Ov0S
Mr8Xom4sOZ/+Lf6V/2nm4psg8UWH7s2wTTbb/h42acKieLk9KPuVBoWSTLJz
pYOPNsXJ2X+2xE2tlmh+mJEW0+hQrOxKrW9zocVTMyHtqMc/l2JkZZWIAl97
JZjzfce3dL4fLQ3fh/zsfDlZ3yeJS2vZtPk1UTn9/Y9O6wOSTZsJnV+eyvNM
TpYte6N/vSQztHKc49l5SfJ7D5cFFb79npyVNKrChQ9PpafbsiX7vvmB7+mN
/tdG2+dLNLe3/hrUoFKK+CQG/ZK44KlJ+hKX72G1NJyHZpJOb+oyuFMyznsz
n6PXb1k0Xs+PM//k6bQ+oEmccpcWLiu/uscoL67SPsYm5bHyx7LZll54+FB5
cLETdafceKA8aFVA0c3vQ5Wz1MuZq3qde8qbY5unXJ90R/n17tFnxlW4oZw3
x4ra738LUJ4R0H9E+sizykFDA254ndmovH5E7mKjv9zQ/mYv9Gu3PadClW8N
qutUOiNEeVqzjv3f3H+s/NvIUm9afXioPGDtx7lb80cop2w413TPMD3fzkyW
kNZ7E+KU7eIT2u/vE6v854JPXQ5G6Pl4poDzrFue45OVy9mlH70xNFH52O/p
Hn/UTVG+0O5lz8HZ0sS2y+7WW0JjjLi0G2gplmx8qt89u8QvxtQ3E2e0HhNv
kioend5xWJzJY3fE5sezsWZW6ZWN8xZMMKkdns2omT3G2ISfqZglKkbfl9XT
lkb2fxmvbF9k9BC3bDFmb79RU/7uHW1G7hm48e+csabI/kazww49Nnd/6Ha7
gn2cSVm9y3Hktkempl+bbGcc483pqfZ/5lgTaTb82KhWc9cEM2fwyGKb5z8w
Tovq/JB1aIy+b3u/OxA8tESc8sH+xX65HR2vvLVIjZ/s0qNN9kXLR7xvEm7E
rkPWuBMxpsDtS20WnAk1j1+NPH3ON9ZUz5NeMe8P982UyD9Grq0XZ37qVsJp
7867Jt/lPSVGf40zA//q9KJu/hDjty8wsuWlePMxyHHzuqK3TXqxuGEntkfr
+zoyoEKwT1yMsv/gCRWSisUp/2N7cfHM/vHKXR5Nyb/sr2gTnXXezxMPBpsI
u/a5XDrFGL9tK2+uuXHN9KxVMn25Q6xZ2ejvZseTgszjgR8fu/rHmmGx+8zd
HAGm38qb11f6xpkms07XflXskokzW0+6V443dZssGlB4xjkzOHX8ttUJ8SZ1
9vZOPc+cNBMjKgec6BKj7/Mux3znzxsTq1xryaVWXZbEKXsNsXcqsydeuUq1
WR/7Vowxjjcjprk9329S8p45Gm4Xa+YU/Vj8r1ebzW6b18N8nsaa0c3ftj8z
tK/pn1i2ZKB/nPnn9uRlo8LXS6Fb/R7X+zveFCmxsfrnqL2yoNLBPQXORev7
+HS+rOtvvtT2SVLOzgunFdf2SN70f36v3EXbIxsCZ69uHRRtfE//1O383uOS
tcPEjw7tYo3v0shRM5ddlF8f/9o7OCLOHL/oVG3HtSD5YfW0Ug3cY/V9+fFi
Ycc3Z3V85Eqb3Qvtb0Xr+6aE6/SluVzUJ7kWUOeHyanf4vXHycKppx7Jjqc/
Lh22Nj7ze+GlS6kepRJM/Llg10JDE2Tf/MHvc8+LM9uLXJlwyT9OfAufu3oh
IcYMmHPp4cCCsTJz2+eOQxvF6+/rP8KKnt65Mt5E/+6S/8tfyRLdslBF38Rv
z9vdo9NfLxKlxvl821rVjzHt7u9aZmn4VPaFfKiY0TVWf1+X9Fz1sM6gONPv
wauApnVTpVC16ik+lWPMyJD6tSdnPJOvdeL8T0uceTej6uAuaWk4T9Vc3P3D
smFfEnFerEnMWD9vkF2c8nC37KVcFz9Rfj2s2PznmyKVI+JO1/6hRJhys+oL
t+2rclc534Tyaz9M1vNpzbyi/r2DuwYox68/4mMZdlo5elT6hXLps5X7xmzo
V+r4ZW3v5gZrJ9Yer+fVmnFLm5TvveCW8uiO1S5M7Kbn15oWg9vtfVT1kexe
Kn578kUaOo/X9K52s1PTPvF6fbPua/q7DYiVYvlHbq7tG2ka+fn/ULt15vVj
m+V71+5skl6/7cskn8oTn8rFbOPKzXKK0u8Z/Hn3B67nTvR7odebTnOHJ9Z7
Ll2nnZi6ZdxjM/FVjY77Ap/r9Y63gpK2zX0lxyNP5nte84l+79xasaLw1DYR
yl+Xhm1aNCrSnF48YLBX1mTTpMUsu5xVHur3TsOYykuGtHho9rSpvrn6+yjz
6k7LNeWLPzEDnBcPG+cSaZbM67L35dAI/X25uHvdoq0mP1JeVKngnzuWPMn8
/mmQO9/UPQ9Mov+qq4tyhpun0mph376Rxmle8/VtW4aa/Y0WfGjs/cjUaPn5
lzyL75kxTYOGlL4TZXrkPlQ34laIqdMie7j9gidm1u3+Dn+53jHPfD12NUwM
19+HbmfLtAoYH6FcN6Pei5bZHyr3l7Yrb698pLxoZv+anYo+Vj56eXxk5KEn
ym33XC30+UG4uTN5fsae6cFmZva6bj9+eGCGXEnbUazudXOs774c870izVe3
7j9tenPFJJwr8DG45kOzpvfldI9DgcYr79IUt86PTIW9FTYu++WyaTn+3ydd
x0eZy2/XNLIrcclMChl976/Vj82xWV/v5Th/3uyvGBsUf+yJic4bUuxjFT/z
MqBsrzW/RBunI9t/S9l13PScvLT9wLfh+vt0QZF11SyuEcrHA//2KFAxUjn6
1z3v338bP3BulyMR9wY+Uq5zwu/soRlRyoO6+2/+Y9Nj5ZX/Xp8+5PQT5T53
kw8X/VV/35p5O2/P6fA83Ay/ubFXvg5HzbvxBXP3efjAXI2qP3Rq7gNmcLNh
q4bdiDCnizTyCBq304R5+uXzPRtp2l5ZOqfgt38fNUvMuW3Ovoem54aq53t5
LDQnT/1cdsXGR+bPITF1v5YcJKUWbDu8+Y8ok2d3+xGV7q+QtV3Tau2d/Nhs
WL594a2ZWyRn2Ybm5LAnZm+bvx7NzbtHzn5puj2mYrQ5Y7++coMjh6Tlwcgk
t14P9Pe9w4Wm/l16aLzk5s3DGzd103jJsqj842O6aLykfeo8n1KdNV7invGq
9LCfNV4SmrtXlsMdNF6ytsDVyDftNF5SYW3eyE2lM99PbtcW9fuh2wMzZlWh
Ef/cPCERGUV/3NQ+wried1n/61k/2VLVr4htq0hz+GnWwPL/nJchQ9rZjGv0
0JRZMMl3wo2LUmlT4pMndR+ZD5vGOnXx95e3d6aZ1tWizNUjw3fU8guQczk8
/z5V/rH5M2hQXe/DQTK77oFpxUs8MUMf9r7zYddV2Vmr2KHmTtGmVlqXwRGb
r4vt3dS/pi6KNrlytP/itzpY1tiuK76mzwN9n40Jcmr6KPPnSdrOmTe4+OJI
5QqNvs7/dZv+fImdzYR/jpzWny95ej71+odbUcoBkwelSIL+vMnWOlGO8z/r
z5uYyXu9Ehfov4cky0rnFpUmPTBNHOpu9e5xS8pus6m37WyEWRMS7Z845o60
P/qqomdGpFmwuUSNxqdD5Hf/2CKLGj4yk38ZuvuvjLuy9e4996/To8yIGvvz
fmp0X67FBuQcc+mx6Zsl7Y9OC/6Xb4z8MiZLtOlws9rXwzfD5JXXufQscx7o
+zr1VFLy+4/6+02Su3hEp456qJzw/sewuAT9fSex60YGR/R4rPy41kb/2yH6
+0+mzc5a72TyA/NoQ7d5FWpFyFSPhmV3eT40zlnXl4z+9aFM2f2719rGUabx
Lw8CVv0VJZPqnMgxb/QTM+GO18Dmd5/IkmwXRjQrFKn/Xtj75Z/h4dsfKV95
u2bY0LJPlBu7rjWvJjw2hd8Ob1m9Vrwc7bk1sNnrcP33wqaTY56t2/xY+b/y
5PFw0/hqWOP3DdNNxtYjz+dvf2LCQgeWcRn6Qm5m3d6k2qYI8/XFxck5ezyX
tmdXLN0+Vd9X+vdTfbvu8WiTalYMzvZb89zR5qTjD2Xun3olZUde/P1N/khz
NKJ17ZzV0+TimutXpp15jPepXJ65vV6f6Idmy5qBbw7lTtf7JS9ZPr2lRBtw
71zLl7n+cUd5U7Fek2zPLFaunbwraLt/oIx+13dl+rtbBvNZ8Odh9rdubPlw
T+8vT2sl2I6LVm7YImewR784qXt4Zi6PR6H6Ptb2TH88OCx3il4/Z5Xv5pKH
06TLs68r3T7f1fcr/jy+SotcCx+kS6EB8yIqDb5nvP6tZNclMNF0zXj+JMMh
VN+3YT1vlcp37I5ytbpt2jlWum/aPN/U+e6qWNNg31fLwv53TIdyJ89Pmh5v
mh/s0Xrhsfv6vdTw0KvooIkhyr/2dU619Q1Wznlr7ZGudcLMvxtKnbNMjTCR
TVuk9l92z1Ro/WfqtMqPzMHzH8uMSLhjun22K3w+5rHJNqzztRcTgs3l0AZ7
Mq5Fm31r92U7WTVM3+ftb27Me2vKPeX32RZXfhp0R/mR46RhR4eEm+YTVj/6
NPCmqd2sxfbh7qFm4rRbNbI4hZjV0zwfljJ3zY1LHTLm/HLPpJ2Md4v59Y4p
nCM8wDYw1LzrWMR7Qu/M93vHwzuyl/G/r3w4d9lXESXvKue72/2sl/tt5ZOJ
j16fLhRuzhSq6PPb0hOmxfNGqRtX3zcPE0dkmxxmTOSLPYnT7O+aaV279Gzk
HGjC4wsGXLa5bZzPv6/ZvNp188PEk7NSc2S+b68XGjwwzfm+8sAgj2bpeUOU
GxaNO7GyXagZWnfZspf222Xyo6TXOU6HmOF54qeElFxt1o4a1v7Ee/37UtNm
ZNKgiDvK82IL5N/qcM/4JI18V7PnZRm59OylBe+0f9IhT8XDgcXDzLAyk7If
sImWUWn16zarEao/7/+//iXY/GmXFua28o0pVWF7xqKcd0xPp9+m7m3zXP/c
p+KpGeEjsZ4p2PgOaD/BNy7V9E8NXBc15K5ZsWdiUtXdaXp9SLZ5Zco+TtLr
Z71tbL6GRptq7zvXOngp1MTZzq//29N0vT5f3bKH5k2P1utXVhs/zeOHE2Zc
9qjtR2bfMC0fpkQemfXG+PTy7ljZ9Yb+fPr1D7389+aLpltv/0Izp6ab7tdK
h9sGndB/b48tPb/UXy2Omxm1H3/8N+mVaXGt6qPQ8wEm5/Aekw6vSDP5XZd8
SN5rjPX6rGDzqVzcrs3NnstmG/vVHiv9zLsCLxoM7P7CPH+wY/Lc24HGcmHG
ikuuKXr9ghX1ckdfTJO7nZY8X+Z8xliv7/r2nd36Q+/AH95I+X/COrXefdKk
D3lkOzMl2dzaGxKds16Q6ZWt8LNK5RKNt7tdqGORb/GyDR3x8cm3eCRPenm4
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
t7S/YU7Yrh6+xydBnF+c6pIl4Ipp3K9MyJqh8TI6qlBu/5oBJsTvXI3Zs+Ik
JHjuxVn/XDR93NpvGL0pVgb5RiTPq33GvPg14WuvkzFSpsvuDraFjpkpl38f
0PpOtAQ+zFLDbf01/V69e71Hh91bLirnK7rlfLxPkGm8O6LPH2FJcuveu/vj
O18wbhvG1sljmyhVw8Madf7281LldtacTS0pEjzMr0PO8PP6/fr/05ePmpf+
sxqNvPLKgAOuJXscPZ1qGndf3/nX6frvUb1+7+e3vbt9TNbr+z5a7vNiVmIm
ZyR32lcrQXn+kN+3BcyJUz4QYvsyKiRGOeplpzP3G0Yrjwy9tuTI6SjlYjcS
d/mlRyqHX8xx8VKlB8oP9nldGNEzVDmtyIqOBRbeVXap4HF3zbDbys1edd7p
P/Cq8rRW/4ZI+YvKM5bfulJm/2zlCo827/d8eFX7fyrBaUnPqX7Kvvk6T0n2
D1O2DLw/rOW2e8q5Dnbo8c/MO8prXkwtXOnDY+XZU1dmi2n1SPm33LsTV22O
UK456vzZ6q0SlHevuJXU8WacsvfxJx5j28UqLwhLa7TyXrREn+qx7OWqZebo
oJpd+vyRpv3xXVazbnrFZL2+8UbfM6GVEiVtaWyr8Z/m6PcE/nznzujQLqde
6PVDNhYevnnTc7Hft2/FsAabZFfn7g1jD6aanjVvj325eZPxdspTcGbsc/37
+XLs6Z015pUUmLe9/5fDB/T85L5BCR2bf1is3xv3T3fsvSvisGys+cxhY+Fn
pvqH+23fTtssw3OOczyUkmTuJLQ81itkhmkYluF02S/RZB21bGbZMruN8675
LuHznprCGwJedk7Ypucxnxl66myzPBs0vxB77e7tA/UOyO5hVYvF2yeYh0PM
8O6tNktBx4SeuwrFG5u0ehF1uhWUVQfXrRtaNc58epn7427nzcauXau75ZrF
mtdLPq75udABM/3Vl9yp3WLMq3LzG/tW36HnPVfcf/3Tafst+n1z68veNy8s
h2T5nDFfGvSJNlNifOuU2LhV7JY3PT0u+xPTs0rN1zf2TpfXnrsmjmgVZVrv
Dfs9tu8qE7k5Z63Byx+aCaMLfqjXebe5XGLIu95hESYucHe3bNOOmn37rpzo
UuCBaZGr8HC/jof1e2V46IY1tu93yuzzSdMSPoSa0y+XJZc/O0vuXZljKXXt
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
6qtX2sDol/V7CvV1PB/+DwaFd1M=
      "], {
       {RGBColor[1., 1., 1.], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxMnXWclUUXx+/uvbt797JLCojSJUgJSHd3d3d3d3d3pyAg3ah0SXeKIKBI
G4goSPme3zvf+9n94/eZmTPnnDlz5kw88zy7N03LbjW7hno8nltJPB6vpa0N
RQyFDfVDPJ4GhpyGXOQbGroZyhm6GsqTF62RITc8XaGXhae7oQJ6GsLXBb6y
6M5FWxUNaeHPYHhntqS39JGl8SyNb3jvcXUZkfksxNkr+jvqxC/ex5YmIFU5
2vC5IY/Bb4g0/EQbkn1rKIN9sq2joZOhlKG3oYqhsqGpoZkhnyE/+eaGPvCI
typ50XpBqwy/eAsYWpA2R0d+dMqfjbG1PD6WH3MY6hrqhTg7O2OrbCyNnXXh
y059aerr46ugbGnq6yCTHbl68KULcX55i+/l04ce52f5/j9L7xui8KvG7bWV
01j6xuPyosU1PPA4nvukKscJcbK/eBzuQZNsOtpNg85/DalDXPlf2ryPXCRj
+RnIybimoI/q6yvk/2V8NbYp8W80doiWCnqIIbMh1PCbyfxq+AC9P3tczKSA
9x+PS196XD6T5T2GTwxPLZvQ0kQhLg6Vf+JxdR58GEI+E/ziDbb3K2XJBGNZ
YyD/xcX+3MRLRtr8j7p48KbCtpTYrj4E8InqUmOX2lY7or+kTvziDY7NPcpv
GNt0+CoT/gqExKwZiuO8IW6uKJbzYO9lk71i2EC6kfx+wwHDPDA3Fm0+tL/x
+z/QVHfQsAk9V+FJzvhrnO56XHzUNGQxfMp4FApxPi5MWog+1IBnProXGJJY
uYihKPzKJ4a/OjI1aONT6j6IxZsE2lXsVL/XGy55nD8W0s4hww3DD4ZtpNvJ
HzV8Z1gCFkNT368ZNht2wH8T3qXwzjbMMuyhzXWGi4Y5hn34+iL0tYYLlNcy
BnPhO4SdB9G1F9170TWbfl1mTOdQtw/6OtrPyljUwoeZ8KPW2w6GGSFuXVS8
a02MT6qy1lSt8ZWJeZWrwl+QWM4I7RPSauQTokO8JWlPa6bWvmwhbi1UTCu2
tRdVMvQMcet3D2jam7pTroDuTOjPQ6w3QbYi8j3J94CnSay5kZdyQeIyaH8G
+paP/scjjhSDSQ3FSFVuZ2hvKI4fM2FXLfxck/7J77VJa5GvQ53yH8bSXYl+
V8Yu2VeIsmzT3hBNf+LSj7iU0yGfHj93wNfxQ2L2zLzk48Ef9Hcl2khPXVD3
UmL6mCEixO1Vmtea51rTtb7VsoNMbUNWQ1FDMUNSQ03Dp4YahizkRUtsKGwo
YihhKGn4CLpoSdCXDZ3ZDXUMdeFLhlwJ8sWpz4ZccsMLO2R9bOlfpCrLhlqx
dGZDTvZ+iM0fUi4Oj9rMAb047X1m8EMvir1F6GNN2pBcPXgaGBoachlKG8oY
Uhjqo0t8OcmL9rmhkaExcrmR/RhflTKkNqQylAPKlzV0M3Q3lIf3Y3xWD/05
8L18/QF9TkI/GtGW2kyJnWWxJzf1KaGloj4lfUmFTa/Mz78Y4lg+ynDO8v8Y
zhtOGU4a/jTcNvxoCDOeE5b+YXhGqvJx+J4jF2F8dy29A/0k/JKXHp+lZy09
E+rG+idDpNF+Jq/xUvk0Ov+Cfpe6d5a+NaTHnme0Id7T2ODHBtkS7nXpHer/
itX2Gcq3sU+8yofDrzbUVjqv89U9/HUBP700pLVyGkMFQ8DreNQX+fNvfHof
X8vPf1N3Fvnz8MRBNkAslGJ+xDU8NPoD7JA9byhLbzT+CuDDF7Qr/ZKTfDzD
61Bnp+yVzH3seU0f3pCmIx9N22rnM9YSrSk5mSe5iKfkzJVwqwtjrSzJvvEx
aXLy2ke0Non3ma1Tf3jcepqNOtF1Dvjd486VxVizte5+ZCiBbrXjY50uCV1r
qI8Yu2XIYPkqhoxel69MWfupziA6u56y8grDSYPHZD4xZDIUMSQ2FA51toXR
1ke0p74kMJn4hvxep8+LTtmemL1IZ0+d6aJAHGh6ZtHemIY0LfkU+Erncp07
y8GrM6POjpHQU1FXjnxZ6nPFaiMOZfn3D85oPuzMArz4wkc5K/YnQSYiJOa5
5wPGRuOSGrvSYGtyxjk/PslHzOWjLN9rLlUi/ioSZ3GJxTxeNwe0Rr0kLuOw
lv1NTCdHtgLyivmcxH0ka2ZO6sTTA73RrIvRrHPKa5/THpfZUJ1yZuTrE9+5
sUFxXsjr1uIP0JEbPa+Yw6lYV1/SB63z5VlnkzNP1I+c6AuQxiGvuKxKrGYy
VMMutZeI9guRLwjvJ7FiOz0+lv8LeF1s5mUMgvM/L+NRGptK0VZ1+i65hMjm
gT8utv8Tay1TOSW8BbGpEjakw/ZPsLEidengL4BMJnjEqzVK9j0KdWcYnV+W
cW6/ytn9msXWJsNVwzHDd4pDw2boqv8V+lHK16k/YngK/Sl8R6nfEovnCfVb
qPueNr5DZpthq+EGPN/HKm+lvMZw3vCV5o/hhOG44QfDdnTcoLyNNg8bHmve
IXOcPv5O/orhsuGNIdp89Lkhj/YJQy7tGxoTjY/mYajjiYLvnxBHV31u6HGQ
zYl8SsVwiONNQVl50ZRPha4odLzWvNdegZzqX2ldIk2FDbIxriFBqOun+vhv
SAyvID2i5VUMwC+5vOTT0N6/+OQ3/LKRWNjE2B3GlxcNF2jjvuGXEGf3efpz
gbLo8sN9fPogxPlEtHuWfxTi7IlPny6ExPhIus6RBv10H73SdSnE2XwZPQ9D
YvqmvNp6Rmz8QZ3oqn+D3Gtk1f5j+vMv/fubds8RU4qlm4aDtPWIvNJDhrXE
4wXoB+C7AF392Ecf9mPfAfJqbx06LlBW/iT2P0PuAfy5iBH5cR/+v097B+Db
YFhPP6X7UqzyesrraOsScXOYvlxh7DfAf4X8RvJX6fdj+KPx+wNsU8w3IKbS
4u8/DR9aPlmo82Oopd5Ql97Ev0ksnzTUjdePhlsGX6hDWKijiVdyt9D5DL0h
6JKeCEvvWBpuaQ6dqwx+dNxGt1KVw2nzGXHyIfmk2PqR4bmVXxj+MnwMTfnn
lJX/CN3htC07tAbJLtmZDD0aq70hLv71XKtn8oWG0SHu+VvP7Xqunx/intNH
hbh7tZEh7t56JOVxITH3teKfh0wTdI0xLA5x9766811EuTcyeuYfiw2LoGtd
Dc65fdj5C2NwC7+PRXYMdsv+BbQ7JpbecbTTCz61cTfE+Ubj8z7E7R/vQtx+
kCjUrf+ai/kM+VkX8rO2pSOOFE/iTWgoaHgb4uiql670lmaAPz31BeBPgIzy
BWgnHutgoVB3Dv3AkBH7MtBWIeiJkC+EbrX3lj5kQEY6EsP/X4ijSZ/OvB5o
wbLy+bElAf17yxz7m5hLTh+uhsTMvbex/JYQu9SO9F3HhwlY08TzBL7r+Pw9
ZdHFdxV915CNh2+0B6gvScgnYW6qne9DYvZvldW3F8yH5MzHG9AT4Q+Nr/T8
FhLjI+V/pay8aN8jJ/mb3CXqDlJrs9YqrVla+35hHukMreecE9w9SuaWYTln
nOPcZ+qOWHp+5c5Sd81nDF8aTns8/7///t7j7q6PUC++aYavDdPJ76K8Clnp
+Ib6IF20s4YVhpOGU9igNmTHKdpcadiJzqnQvoS+i/amolP6VhvOG9YYztGX
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
5HPfWuub63GG8T53HyQfvsSPkhmDDt2LzdcY+tzdUC/81tQw1ufuk/RMpjVm
BOO+HV/1xddLDGcZr7997l6pCTp0fgneS4lvKXLb8fsk5M7i+6X4SDz/4WPN
wXuGODqnY7/6Psrn1ijNWc3dWcxD+aMpfRyLXBSyUczxX+iz/KTv0v/BP+cN
cw3zfO6ucAz9aIINgTCnrze+WgRvd/j17DoS23rQhvRXwb+9oXfH743gbYxc
I/z9kjE7D85hYzP82ZQYmYwvI82mny39Cf1qU3eUmhs6y2ktUswN8Lk7U607
Wi/fgnfQtM4r5i7BVx25LvhW/7tX+8sc/BSP9VYxWZV+Kiam0HZbdF1Ed01s
GEhak3ZG0P+GjKnGU/E+DfulS/f+a9lfutK+fN4enmm0LR8v9rlY1f5zg7Gq
hF8mQt9Gv/7fJ4/zr/ysGNb81jwfz7hVQoc/zPlaflacKl6X0d/JjIliRXMg
D/b0xTdn0X0OG9S+4l/rtGJcsb4EGdmveNOYKubWsdeo/wHGOpI4XAR/c+Jj
HO03JVbGQddc0N2hzos6o/Rk3dJ6PJZ9RPuJzhRr5G98rLHeB5Tf63M8XzFu
a0mD/OLbT17pPMY2yCus88XMk/U+N6c1VzQnDhoOkJes/s+0/s93N8MhKx/2
uXkbHub2xdu0cwD+UehfTzqKtg6iU3x/Rrn19lmU+98U2r/0/ynW+GLOaFqv
w8Kc/j+i3Br9W5RbE2TvBrDR52g9iRPNOx97qPbSBbR9iHgaR3xtwOejPY7n
EP06zJguRPdY9MueW+gWbRO6ZHsv9t8N2LaeNsbBp/8rqP/DMc7jZDdC/xF9
6qfiT/uw4l7rkeJYMbyfc/YBno8PUP6Hs/950gvkf+Isr/u+c9w9/g3Och+5
h2eAvfDrPvcu94Z3KV/k+eES5+69yLyirZfYoOcRPVuEE9eKb90r6rnlBTb8
g23Xebb+Dxt+Rqeer/V8/BTaHuy/SFuvyL/Cpt3Y+BP6/6aNf3mGuMQ9gp7d
Y9/nPqR92XGNZwr5V3e1ure9zPPJ/ljPN1egBZ9dLtPGHuaizvzv0CudV5F5
C9/lWD68T1v78Kdo6rfeRzzFD7pf113GE8qiv0Pv21htiCYe8YtP55wdxKji
KZy5c9fn1k2tmat8bp/XWqg1ZxMxuZ914z5Q/hfmhPYXneXV390+t/YpvrWv
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
DWl3tmi8QwzfLnngpS+7xTUIu6RjjTCm3dRzqGM3Uv16OSdqtWPbQuNzzDXS
QcO6IebA2hnjmI+Wt/yc2lf8GPNjHIPLlV1r2+eoC7+hsCZ5zieGzDP8BabE
km9xDHqIH+J4tJZniHni4OwL3eW9Wnrw7A1fVv6/WD/Ydgc5Hrl2xk4njafT
35J9xh+q8ow50/PgLM+Q9u5ZHcyDOx481Z5XVVmjX9mN/SvgC+uhe6eQfLLz
suRf/5M+GvkB8lYqBxktA4pZ8vMq9OFop1rZpyi/mzK/7vn3NWVXyjfAuvNs
r6v1tHuqcrqrI/LfLaTyKbaDDw2ulTodKyQdT9o2OiCb54V/8Mw+W77m7ufs
6/jm+P/4522zdAa0Mz/Ucsl+cvYftZ1j2o60pTqj3/m29a56nyruNHU7oV4t
tRkykFm28Unru2kTdP/ceujwMa6yLeyAj32V+YHqiVx+r+c3XPyyuab4Zuxl
H7rv8LsFsSJidfiF7D/sQ52y5DPgU+QBWZZ8jr7m8U06Wd9ZfD9p2av5fYX9
uottlH+DoZ3yXv+5ZejZ16vlgZe4Vmf54eV8Ye8eYJnzpLNlaCtNq8xf4trh
/EDHK9WzqJ79nY9drMPnYz2xrvCZCgEtTHvb3wHO2/6Ozde1fbVjOVBomTWu
tW84LlfaFjrgh3UMONd2ezdpq4/27Sr919S3qG1r5T9X+3d0nFj7I6xvYV9q
rOsoTwfr4SV20zVPsZzvGMcnht8lT79zUDeHOZSl50SeCScETDSlzLPiw1l6
noTuNvPgiJ/MzpKMW0zLcpBxg/zEUH4tTBA3VznQf4z+ocsn9NeUcjEgD+iX
p7jPr5TVT3zfgPVRfifgeMDigCcC9gnkX8oSDfUbbOvcPMmflaVYD8/QPKfy
vHpPwB0BCwLqAh4JGG/+gYA1Ac+aJ/2tNI8G/ET8/dLdrr3mWTde2jXSPGNb
ddbdpl2hp7+/tM8zs6Trj7XhdeLvkea7pt8zf4v9mi38v/z3OiaMDc/qM5S9
QD3GaRts1JAl+2LnLKBPQO+A0QGvZem3Hn7z6RBQH+X2kf4h0jMibR7QJqBt
wAeB+yigXZ5oDkW+WaSvRHq6aTNlvqrcenmgJ/1Q/s8j/SxL8xaeC/Iko4cp
5XMC3g+aL0VaFXBRwD/mSS7ym4sH1zJPcpHfVv2bS0e/sEWDfaLusFDWHTmV
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
9eLXKWuDbWyyjY3acmre+P/AtdL/DZRaYLY=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlU1sFVUYhg/2zp1S7sy9MwOt0GJiagwo/1CQ0pYWgQ26cWFiookxomKM
mBglUVyQ2C2KoIhYiiZujOjOlRsIAaEQo1KqYvxBUWpBhEYRkejz5p3Fmzz3
nO/MOd933vPdWx/ZfN/TN4UQXkAV1JqG8EkUwi70TxJCcxHCa3EIT6ILeQjP
MP9z5Jj74ZnE9MC9qAOuEb8z9ppp8GPEjDL3LzoFn+cbTzD3OPoVvpQ7fhe6
DM9izUF4D7oZnofGY4/NgSdzx76O/oRPZiHMgFvRZ/CrnGGQvQ6gIXg6a3Yz
9wYq4Ou5WWM3csco9kM0DM9l7DbNVUMY43sd9RDuge9Fs+GEmJXEdqMUrifm
VShLXCPVahOagAcYe4q5taoRfFfiWK1ZAT/aCOFlvv0g6oHnc8bm5hCmogXw
lVoIx7mYY+gyPD9xrTdqT/i33HuppuPwXNb8EPsb+pZqrFpvRzG/L+a+G9X8
d/gYOU6PXcMReB0xy1m7Aq2H5+SubR/qh7eiDbFrNAAPcqdNnL2CtsM7y/Oo
Brvhn8p6aE/t3cQ33yzvtwJfzX2XupNr8C/o2dh7nIVbyLGdXCfJvyKvoYci
33E//AU1eZu5vehzeIlqrNqixXCFnIY422G0BV6U+C460Dy4k7ER5k6gO+AU
DcP7UAu8OPPcSdQNR6xpRN5jWmKJ5YkavJWYA8R+gF6Ez+KZ5+Dn0Tn4cN1e
0pjm3kn81uSRHYlzUC6H0NfwN+goPIy+gk+hoYpz/hI+jfZVPDZac41Uqyuo
KfGd6e5WozXwNWLGK85BuZypeS+NTcJF6U+96Vb4j5q99ym6BF+smXWmCfjv
mveSR+XVWeS0oeo30w5/iyfORe4ZZ1LnoFx05jG4u+wf2nMl/ErZH+ShHfB/
ud+qPDMFvywr359qvhReXr4/jXXBCzQW2SPyysLEXtCY5nTnunt56k74Jb7f
X74f7V1lj7die1Be7NMbLeuhs8aZvSFPyVtRYS9rjdbeTs5dzCWoDW6gzqpr
otocqfutK0ax46ljVSPV6sfUvVJrtHZK3W9Lb+xGag/LyxfQNngQjVbtOXnv
fN1e24Im4N6GWZ7eCG/mG2N8/7Q8B29KzerR6tXXyfGjyDFt/F5FTi30giWo
F16NlsLLUD88UJi70Bp4YeHepTWL4G7UaHYPVy9PC/dv9Z8Evju3N3UH6+GD
mXNTT1JvUs9S7/oYTS18Bp1FZ+jT+sJ7q2ethdvRd8R+jzrgvHBvUY/J4P3l
e9ab3ws/nLiX6o4fgPcn/i9QDd6F38/89rXmvcw9Ub1ROfUU/o/Qf4Xu4Cjc
WvY3eXaGci+8t3Kuw7MLn009+pbC/3F7Sn+3wTML56oclEsjcy/Rf8Rf3N//
O7v0Lw==
           "]]}]}, 
       {RGBColor[1., 0.9300279662407999, 0.9300279662407999], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtllls1UUUhyfQ21Z65/b2/ulCASNQalE2pSyWAl3QGI08GENMTBSrAVoQ
qpLUACYobokGCz6r1MQ+4IuJiRvuUIxLTLCtrSKmlKWAolAVKyDx++Wch8k3
d+bMOXOWOf87rWXz3ZvGhRC+ZYxnDGZCuJoK4STsZxxn/ghszIUwoyCE7bCR
tUrGJEZ9DOF+OBduLwmhLz+EZ+FdjO+Yr4YVjK+ZV8IJxSGkmBfCvzmzh7Ov
wX72ytE/CJtyNm+AR7E9DvkO+BK/72B9G7yRM82cnQ13uK134UT0ppmPIL+A
vTXI1MIy9rpYL4UNKfNB9z+cDuFAXgjfw8lJCO+hfxJ8Crke2S0x3+TjPDiR
33tZT+CGlN2hjTGWNf2yM5QxH+XrHvd9F1zI+QeRXQS78WEDtk7Acz4/Dm9i
7wFkbo7mm/TPhxs9L5vhWsZ/zFvhj35/+TGAjSvYmoWeAX4fYn0wbbZ1hycV
A7cl+11+z31wXdb8Wg9L8f9TZMrgNs+pcrvRfWzPWl4Vc8X+NLKfMUYY5fhc
y3o1HPD6UR09gdxbrKeV58TkK+AxOMz4sMBi/FzK/M9j71HWxsMz3LWT+Vn4
ArFYz/4zcAVcl7J8ZrFXhf5j2PoVud3I/wZXIfcQ+3fCnzNWG2dgnue3ABZg
42XdH/ldyLUi/yIc5vdjrJ/Kmc0Gt3fRa3I0Y+utXk/l/H4bXubs7YwW5rdF
q1n5Il2681rX80rKakhv4Avu0YvOnfBkzuSHcqa7yfUrt5fz7R22+Tmd3xJN
56Zo9atYyZ96/Cou5A7wiPuuGCjGz3ucpxO3Vaz3wGuRe59zU+EHBZYb5UWy
a1xeudrv6+1eD6r9fV5Lqv2Z+Vafyke156kGXue2ZPN3r0PVfofnQjmRH5Jf
rh7k8sNwpb+dZniN50t5u5i1uspytoTfH7OeS+yMzh6E9cjsZP5w1mLZ5u+2
yXOn36eQuw+ZA3B6NPtV0XqK6vwdOLXYfJsC53jtzkqszlRvhcwXMIqIeW1i
b0Bv4RD8y+/QAq/PWR4Pl1jNyZfTrkPxV+wv8W5z3CGfO0xH10esTYMLGWn0
L4LzE8vHPFiT2DucDXdEq6+tMC9ar54QTX+n26j0mlIM5rov8mnQ+/AN3OcC
d7hADxlNWz8Y8Xc+6vWv3jze9ctOJtqdI6xgb5D5vXCY8z3oGUrbW9I7yMfW
Mo/V0sRqVLV6KyxJmZ6znGlwf1fAlYwM82bYxIjMG+EU79vq36N+5zG43PXL
TjXjE2Rmwq/w8Rz3/xymotn7F/k/GOc5ex72Mg4y74N/pu0uR2DieibCfvfr
B/nl/fYELErsfaThN25LNiu871Umln+9Z/VWxUIxSSXWr6XnJ/il93P19Trv
Y8uj5UGxUr4Xe59ZEi3WivmWjPV69Xx9e8f8O6vv7ZvRelQ3rPL3MgO+Hq0v
vBqthqS7LrFvjt6y6v4Xj8lReAm5/ayXYavIY6hYVnofVj+OifWKDJzs69pv
8O97DUz7WenY4vd/HNZl7T3qXXb7na/AWzwOisfTHtsD8I1ofWpvtPpWnasm
iv3tZBOrd/Vw9ezd0fpvF1zstbQkMf8Vh85ouen1nnvVa+MfeE/GfC+Fff4t
1je5wf8n1HuOVKvK02r/DrbDZdF6diMM0XRKd4e/qa1wqfefOfB//nc+/g==

           "]], PolygonBox[CompressedData["
1:eJwtlllsVVUUhnfrLYVyz23vOS3VShmkDG0TESxTgZYOVsU3JRo1UanKoKjR
+KCgiCJoommBEiGBYHmQB3yQNwecEXxyojjFIVA1QkuxlYptKej3Z62HL/e/
a++99rDWXvtMbX3s1kdzQwj7IAVXJSG8nR9CO4xDj4uw5YUwQGMOuhbbadoK
x4awBL02E8Il2i/DOvRwOoQsuof+59Eb4hCW038a1KNrGDOesWmYh34mtjb1
aUOXYfs43+aYhc6DJ9CPQwrdUxjC3WNC2AxLikKYyP/p6Aq4Gv1AkbW9CRfQ
Lay5lfWshGb0GmydtO2HdejrsDXR9jAsRd8C9+fZmJvQRVnz1QXr0aPYDtH2
A1zJfn9mj0dStt9B9NP0OUrfPngBvZ/+HfQ9DCPoXD/PMrgCXcGaa+ibhmJ0
PbZVtNXBYvQNiZ11BprRjdjuo+0l2IGu8f/a3zx0Q2R70Zzb0ftgB/ohaEff
BXfCbbACVmq829S20M9LZ7BIZxOZb82hubfBVvQ9sAz9CqxFr4GXdb6w2n3K
99/EdADOwyC8GFnf1bAJXc2e/iS2H8FM9HL63AzPwkbYAduhA3ZCP/zlPuVb
YzT2Q5iBngKH0d1Qhf6FmHyWshgpVrMjW/u9MAcdQZxnOZtGn6TP0ZSN+RX9
U9piq/E/ojsjO3udwevouZH50vlcjx72eOvMh9CbyJHnYAtshZKM5YL6qO8j
/P/N82MFer6ft2KwAH1HxnJNOVeKnp7YXj+ACvS0xPT7cA16IUSeL4vQ8xO7
a7ItkIb38u2MIvRkeBf9DkxCV8KpfLOpLcB/nHMOv7lwGX0pNpvaNIfmUgwV
ywafX3MuQ++m3y7YA3thG7R7TBXbJh+vMY2JxbjDx2hsva9fNaMOPYrtoq9B
a5ma2N61H8V+gueDakipfHs+qE+haldstW0bnEHPTixXtOdrE6tBqkWqOd3o
k7HVHtle9RxWLv8DFxzpf2HIkR6GESjw89WZj0cX+XoVsyx6LGz381bf2OOp
GCeJ+Rj2PWvvv5ODx1KWo93oobTVZtUU1ZZ+/venzDaQtpqk/FWOj6DHUGPy
IAdyIaZGZSEDhXAmY7VINanU+6jvJeyXHelhGIGKyGpVPcxAf4OPi14vP0WX
ZK3WquYWo7+EL+Ar+Bq2wAnaRuFzt6ntOHTBIXgLDqoOwwF4AzrlF/7I2Nuj
NyBmnacy9hboTTrhd053rw3a4bjXa93vLvQZxpyGXjgL6yOrTarBT6In+H3V
Hb0d3RNb7ihmvbGN0dg+OAfHvJ7rjepxm9qW8tbUwRF/v9RHtT/t74verMEi
i4FiUQDjszZGYx+EVdDq75t81KKbdYegBW6Mrcar1qsmt0Vma/Gaqtpa7++t
YjQTXU6fiTAZpsCsyGK5DCpVGyELCRTrPYRCt6nthNdX5eO36FKdmd44KIvM
h3wpP/UtURDZ29cIVeizjOmF04pF2mxq05tcHdk3h3JZOR3Q33l91h34Hn0O
+tyHfJX53NpTua858TVpbRv9bWn3WlTBGU+DKqiG8sRqob6BJiaWY8q1PbDX
c/Cg5+ABt6ntNdgFk2GS+6xwn/I9B+Y60rWwOGs5qdzcBbthc9bujnLiqax9
c+i/7sgG9CdZ+7bQN8bz7kO+mqAZKmO7S4pxA7rY3wvVxBL0/6rVTW8=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0btLglEYx/Enywtpr7chCFITggiCLmNQkK45VNBelEGgWVMN2dbukEEN
2WVO6E8oG4oaisgMCrKbg5cpqSD6HjzDh9/Dc8573nPpmolPxEwiEoQZOadI
xCLyRn6ihA9DxEHvkXxAAYdtIgf4RZYPj8gUNqn39ZiaU3KwDgo4bxF5J9f4
3sR6T2QSG6jTrzFeJcuoYJl+AnH8sW6eXEGeelqPqTlT/GcSI5hlLEKavCJN
aEbCynk8Ir3UL9T95AAGNVUPw24TGSJfmbvIvApZRQ0x1pxn7VEyigVY4KFn
kE641ByXyBzq2OOMUTJA348+tUfmB8mwWySEJK6ZN056uOtu6k7SBz9sMNN7
5pxmagt+qL+Nxv2pe/wyGnPVN2f6/QLOxjup91pCkf/ek3b+0worcsxbJb3u
xl7Vnt1qHzhFmd4leaX2iDS2sI4LxlJkh65Vzwc/ermvdu5vjAwhjFv6N+jR
Y3fUJ/rs6g6OkcU2e0wb+ryMZchdvtlBUb9LhvwHtnZeoA==
           "]]}]}, 
       {RGBColor[1., 0.8833799437346348, 0.8833799437346348], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlEtIVGEUx49WI9G9d2buKAQROeZoj1323CjZvueqTYugAkknjEALCgp6
EPRwG7SqZavaZEiUlAaRTgRlGEE5RvmqFHMme/wO5ywOv3PPd+73/c+557vZ
w/n9HZUi0oYtwc6nRZ4nRLphY0ZkvEpkI6zHivg5WJsUaSBnDazjeYz4WviY
d4aJ98E4FMksE0nBLp5fE78AV/j+SbiJdz7z7gYo5K0kvwJu87O2wpi8AfIz
cIR1wa/Aav3dLGzzc/Nwh2veDp+ir4l4Fs5iXfgtKZH3ETrwv8ByLNJB/gKs
9vx62IjtwR+Ay13b+tBM/XWh5Wl+PxwNRCaWinwIrF+qQbWUPT4HfwfWkyre
XcSfIT4PJ92fDqxfmpOAg65tCK6OrP6DkfVINaiu06zVkdMMi9gJ/ErOzeKX
0PYybc8al4ydoWf9gn/JyRNfhOmk9WSc/X94r7Rnvay1k/Mktu+kPdfe//F9
tI476LiMnh44i93EnwrN1L8FQ/ZKsGcA97HXTvY5By+hb5D4RXgVe4F/BX5n
7Tg5Y3DeNczBnx7X9a/+jZ7BA+ju5ay9MOdx/YZHU1ZLc8rmbjph83TM47q+
ENq7JbjbtanGksdr2PNTZPq1Dp1l7W05YedpTgbec2334Q3f52xsfdH+tMJr
3pProZn6t0ObD50TnaNXadPZDxt8lvQudvvd0Ts06TVqD1b5bOiMdLJWIH4K
vvU513mv9j7X6N30+1sk/ojnIfyHet99llpgn9erdc9EduemYI/XpfVNRHYf
v8G7XqPOwrDr1zoe+D663zvsHzmdsMlnSf8Boz63H+Ebn8mR2PI0/2Rk/da+
F/y/o/q1jlY/d1doulX/GZjz+dd7sMX/UZv1n5C271aAh7z2I/A/5z21bA==

           "]], PolygonBox[CompressedData["
1:eJwt1EtMF1cUx/Hro39shcH//LGixCoImIirYqsppisQ1IpJg4/qqpomauCP
rWIb2Ki1UqMtjbYREl3IAhJ1gdHUxKZpfcRqYmJplUjS+OThI7qw+EKL/f5y
zuKTnLlz59wz956Z/DX1H6dHhxCaMBbvZIUwFdORj4+wGFVYiKWo9jHdOx2H
UJcRQhoXiL9hbAe2YhtKGJuFclTENqZ7jWjCT4z9iFa0IcFY6o0QHlDMcGYI
7YwdQgc6sYb7n2IVVmM91vmY7h1kzgF/pt1ztvqY7q32Z2uwDLcYu4k9+A6v
UO/vM0xchUoswuLYalbtm9GAJ5lWq2p+STwvFcIAz/ZjLnE+7hD3oYD4/ZTd
0/V7xHNSFmtOKfEtctzEddxAr9ezEf8Qz/D5ylFIfJ859zCAQae4D/0o8vVU
UzFxJTUvQDkqkIcpfuY6+/aIvcNhHImsB9QLBZjhPVDlOSp9TPcKUYTnse2d
euJpbHtc4z2j3hnyfqnFY+I71Hjb31nv3uB7m0a951TuYszMsh4q9zPR2bRR
Y6vXrNov+/rasyux7UGfr6G1dpHjW+9R9erx2GpRTaeIP0uSIxHCn9hAXMzY
MPELFKmnGDuEAzjoFO9HK+5TQ2Dua/rhLvH47BDewji8iU7W7MAr/IeJPHOB
+RfxNnEGcxIYjTHYFFku5dxM/Al6uR7FdYPuYQTDeBnZmppfzP0Uz/dwfRV1
SOMoaxxBBzqTVtM4X1Nrp31uDZbp/BkrJdd4JLOtBtWiGlYSX0ra3nTjd98D
7cVe7HOKv0cLenAV19CLCpRjCapRn7S9V74viEvxLsowH1fwt+fo8bEyz6Fc
RShECWZ7TuVejhU+VuI5lfssHrHWeWwnbuaddqIFP2APZ7Tbe0a9sytpZ6Uz
ayY+gePowjHX5Xusvd6BPxK2xjniX/391GO/EJ/Ez55DufojOzud4bXI9rTb
+/E34q/xV8J68oyfYYf3pHrzK575Eo1oimyPtdf6B+tf3J20Zwvo95lcfxhb
rDH1+toJ/EfxAcom2DeY9n+s/rUpfx+9fw7xdEzzPdfeD0bWK+qZHPoli7FM
DJHrCR5G1rvqoQfE6xlbh1rU4XNsxHO88GeGvKa1XpNqGyD3YLY9U+vP6NkG
3y/t0RbiycjFFOQhO2lnrXeIiUPK/q36X4zE9g3pW3qKZ5F9o/pWc4knR/ZN
6tsc8W8vl3uT/B+qf+k2xrZ6DzV7D7X4P6rNz6TR52juTv/+VY96ZSI5cjyn
cud57dN8r595bY/xL/4HEfQV7A==
           "]], PolygonBox[CompressedData["
1:eJwt0jssw1EUx/FDUKEtrVcbi2fZ7USwkJB4TwYLEsGChniMEq94TRIbEmIT
wugRMRHPGGglVNC0oWnV4PG9+d/hk9/Nzbn3np5/c9t763tiRaQA8TBZRNJY
2Ml0ZODPLPKLLwTjRH7IdbvIGp7QbRLZIquorUQFJrhjgVzGHOsZchJTGKO2
nDPz5CKWcGQTCSSInJOXuEJZqoibvQ6yE12YpnYKw8jjjiGyhdpmjOOM+jZy
ABes3aQZFnio7ePMM+nFo93oUfW6Sq5hHXv6HnXfDnbVHSkiCex5rSJJrJPh
ZO1AK+64I5v0MJsH3OOdWYXJiJ6bn3zFG5qobUQG9jnbQPqQzBu35DVukEg/
DvVhLMY3UN+in/0Y6u7JQbixiQ2r0Z/qc5sM0mMApXqOH6y/WUeRyW86ZS+L
TNM9RHkjjAhqmE01RvW3qiXzOZ+HY9RxtpB8gQ+HKGHvIMW4U909QjrgxIk+
49c9qd5m2Z+xGXWqflL1wr6LdY5+S70Z0X2t6P9SiCyCC8V6PmpOIX7Hp9WY
i5pPkPwHo6tr8w==
           "]]}]}, 
       {RGBColor[1., 0.8367319212284698, 0.8367319212284698], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtk89LVVEQx4fy+dLeu/eel6YPQXjIy0X2c+FGcCcWtDLctCiobdiqKFcS
EbVopX9AtOnHslWrFHElrkTcFIhZGWIJgpFG6Gf6zuLwmTN35nvmzJnbuH1v
bOKYmV1jHWd9KZm1tZq1s1Judhk24EJmVsZehNVk9g77QZLvPOtC7N1/PynO
v23AkarZc3RH4UV8l1p1xt+K2XaL2R78msm3DF/m0puBIzWz7rLZWTjGfgD/
KDzF6sf+Qfz1THWPw7v4z+G/BVepYwd7xeuM3LZce/cvJNXSHvU8Cf/TJJ9/
8/s346w+2M0dOjirE77PdZ+3uWpy/TocLMxu+N2xu9B6hb1f6LydOGeI/WPs
O/AFd7vKHdfhJr34RU+24FSh3AP4OakPAzXFefwavBL98T7N5zp3E36KeM87
RKuLmk9Q87+w3XeGnAYxw7AedXq9zfD790dRg9fyMVdPPsCfLXq7jtB1zX5Y
J+ePzwk6e4XmweflZLxLBXaWlO+5s0nxc0k9dV8Zvo6ZmYa9oena3hvPdQ1f
p0vyzYXOUlLv3Pcb9lYV1wPXYt7W4UZFOt8qmiF/3y04Gb31N5mJGt7AvqrO
asDVTPPxPdPsuqZrT0e8z/vD6OFQTXPj+v9nNnrVhM9y/TuTcDfm4WahOfZ5
noBHYvp0KA==
           "]], PolygonBox[CompressedData["
1:eJwt1UtsVVUUxvETLRbk3nt6SxWxSLwxPAZUVAwTfE00QbGlTVAspCQQSLhg
ixgI8ojSBGkrhBrRWBRi2gEP0QQokWcDTCgjDQETDQygAgOhYKlgwsv/l/UN
fsm+++yz9157rbtPYV5TXeMjSZKsRQkGs0lyC9fRjza0Yj0+x+UMzxjYj6u0
W3JJsgHt+BLfM+Y7bMQmjKavEs9gDJbS14RFKKIrnySd2Ibt2IKvsBnt6MC3
7tOzN8qS5HUsQtHU/hCN2MoaHehEFwZT4knjHb3bgObHkqQeU2hfTaOtvqn8
ns+e5mE25uBV1nwFb+ItXCTmayVxBn20t5ezd3SiCz/jJ+xHN1Ywx3LHrNhr
2dMMjEAFmulbh9VYgwKeHJIkT2AM7XuZ+D0S9zNxxu2OUbH2O1c6c539Hdx2
DpXL9zATNZihNXhnNdZpbXyCle7Ts7HZWEtrPke7FBVDIua7rF+Zjb2p7yna
K3hnuefQXEXnVmeos2z2WqoR1com10ara6vCZ3Hbe3+A+xhF39No4wynlXIu
WFkeMSiW6XjXNbneZ9jsPj2bhrezUXOqvQ9Qr3UyUbuKT2db72eKQbGscS6U
M+VOexjlGlYt96GUWpmEHLWzk5rY4RpWLe9kjztcA6qFQcbfwg3cxH+4475B
9+nZdeUS93DXYzS2hDUexUPaSRoeeozGvlYeZ6MzWkW7DrX4FJ9hOt5BNWrQ
xh5bsQEt2Igv3KdnW9KI7Xm00D7JOyfQi9OYQN94nEJvGnNWe806j9HYX/Fb
ecSk2P7GNQzjnYnMXYXhtI+y5hEcwuF8nKnWfwEp7eN4ifaL6KHdyByXyN3j
/P49F2M0dhj+4ncmjbm1/yztK7kYqznyafTpmXJ4KRd71F7P4hx62MMx70l7
6/Jd8iP2mNrdOGBqH0MPDvLOL+jGAcd0yH16diYXe1UMxVyM0di92JePnCl3
X+MbjKNvLCaiSvui77Bzotwspq+IJizNRwyK5Q/8ifm+73bjX9qjGVOJZ1Hw
HbvZNaBaWIgFnlNzD83Hu5pjoCzm1NzncQGrfJ468yVp3IGd/g/ovzDHd+lM
30VznR/VQF0ad/423/G663tdWzdwM40z0Fl0YKv+V4zZ4/+c/nsF14fu8JO0
+3yfq0+1U3CsOsNxvsN1l1ejxme+13Nq7oNp1Jpqal8aYzT2fczKx52+3zlQ
Lhr97fkIy8piz9r7PxjALtenavqHNGLo8DdD344q53YyXnYOlctl+Nh9k/0N
0rdowHPrm6Zv2yzvrQFzrcE5VC7/B2n4HXE=
           "]], 
          PolygonBox[CompressedData["
1:eJwt0DtqQkEUxvEPY3LT+ISAoggGRMHswAUkPoqoO7BMEVFJ4QZ81VlBGiV7
uKaJjaQWfCFYxoBtDBj8D07x4zvMnTNz7iRr9cqzR1IYl7ilSOIrJP1eSQnq
qa0/SBdjPPmlLQ1V8hFl/GCHb6TZfxOQmkGpgQPeWGuTC/rnyHJ2xJGW1C00
8YJ39l2Tf7YnSh1DHD100cGebxOy4JPyuEefmV7JNWevsEGeOwbh8zxmrpRJ
ZHBnZ3ggiyhhzPyu+T847P/0n+8x983s7OYfoqafNYe8gBc5836cl7LvaN5z
ZOcakkf84wQwxTKk
           "]]}]}, 
       {RGBColor[1., 0.7900838987223048, 0.7900838987223048], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkU0rhFEUx493Fve5PZMpZENNjZdSFrOzsRSRhcLOB2Cn7NjpKWWBxeQD
sKQUkp0aFsp27LBR0jRhKMnvdM7i9Ps/9/nf83YHVtbmV5tFZJxoIa5TkUa7
yB0cTESqbSIFOBVEMvQMfOO7iOcd5qNpPVt3/xLcc7/e6+f7BN0HR/EP4++B
QoygW+Es/y7wTMODnMhkh8gm7CK+8DTBOr45dC2aT/0RZtTYRe8Eq6G1/tDb
zFDDn8Exr6v17/F0oh9g2WtpzY9gORvBetLeeuGE6xLc8Bl11oLr5cR60t4q
sOp1b2A+Z/uMcMg9t3Df93MMr3znuvsf4hNdT+2+5tE5Hl1r7hfvP5Jn0fvf
gkm082f+P/lOyvDVtZ5F96hXd6S7Ogo2s87enVht7aGS2k717iEs+lvrm5+n
9i6X8Dux3f7CBe9H+zr1PGfwH5N1V2Y=
           "]], PolygonBox[CompressedData["
1:eJwt1MtLVVEUx/FdlOTgevUOgsISDdJKa1I6sKQm2qDwBZVQKRkJXp8ZPXxA
KZT2gAwdZKCJDjTSyFK0RC0L0iY9yEFlk/oDyrToAfVd7N/gA4dz9157rb3W
ufHHKvMqljvnirECf6Oc2xzh3Ba4oHOPYpz7wfNPjPPcjz70oBclOIEwylCA
QyhEEf5EO/cbsTyvQxPxG9GMFoRRilzkIYE18diIRFSjCjU4hSXWLOIrvkX5
d/bbKkRiK1KwHTuUU1gxLFYrruMqriE16Gu1mrfxfIuYHehBLxpQr5wt90Tl
lqKzcpCtmgtUc6HupEQ1x6omq23YaojwdzrKcxc6cRMduMEZrcrBcukPOHd5
pXP38S/ga7LadiEDz1nzDLN4idXUkETsHGzieZA1A+qZ9S4LmcrZch9gz10M
YwR9AX+WndkW8HfQozW29i3eqGfWuw7l3ob2GN/TZtVgtfRqVjpV64ugz81y
TAr6PW3qifVmRLlMYBJXQuSCsziHMDmVohjHcQSHcQAHEQz5WbX7jQz5mbDZ
WGAGv0f7GBYrHTtxhxz6cRvdWMIidrN2j9hzKcKY5LcJjGIM94gxiIcYxhfe
fcYUnsiU9tjeQmIcRSrSon0NxarBaskhRjbykI/92Kd39ttrvMI7zOET5nVH
dle96EEf+lFNzCrdmd3dmHIfwgMZ0h3YXXSxp1MxLNY8d/cRyTynSLJystzy
2ZOHLOzFGc44rTPt7BbeNaMWdZhmz1PMYFZmVJPVVsOdnLQ+oRYNxKhXTIu9
gTUJWI+4kO+59T4HuQHfA+vFY4yrx+naY3vLyaHM+oAiXGLPRTSiKeBnbkLf
lH1bcTprDdaG/AwtqIfWy3ZitKlGqzVD32amvrULrDmv/0D7L2zSWVaT1VbJ
uwrVbLV/4Iz36qn1dlnIz7L9Z/yK8TNYqj22d06zYHtsb63uzs60s+t091Zz
uWouVM+sd2maRZtZm91x3Z31aFoz1KcZt1nv1rdiNVvt/wHsqeUb
           "]], 
          PolygonBox[CompressedData["
1:eJwt0E0rxFEUB+CT8rJhoiEjESvxGWxs2MgYZcHOB2CtKDbURNnYTOITUOx8
ATFKYedlxcZmDM0/djxTd/H0u5177zndO7KyVlptiYg8rZS6IubJc6kwJz87
I2occaD2IStpXZY77HLVHVFvi3iWL7zy5X6dGmP2+nL6O1tklrIeh/LWfpU3
Opy7k/dp/S4feGSgJ6JAVe8fe73Wy+pP+qzLDTbpN2fc/q91g4xrdzK1C3nK
GcPqQyylHqMyl97eSO9uvn/BnBJbTLVHLMo/9XPnBlOPZq8bc4tmfMsGGdvp
TkUec8K+2XuU0581/27G2WkKTKhNyn/E6j75
           "]]}]}, 
       {RGBColor[1., 0.7434358762161397, 0.7434358762161397], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkb8rxHEcxp/oXIb7/hrEYGC7wuQfYLKIbrNar1xKyWw4hWQg3WJgucW/
IIusYsOF1C0G50cJg+fp/QzvXk9P78/712dsuVFb6QMwwehnlHKgPQC8ZUCD
sUFdFwtgrgxsk18JUKU/nALfaeT8kDX6TyXmJ35Df4bsOV/vXln/k7pLHjDe
qVvkA6NHfUmeOeeKHGWcUP+yzq5z9vPIk5b3kcXMg/ZGylF3KI2+6n9bAfY4
2xF5QX+J/gt5rPfUp+Smc5pkx/veFbGztLy2Z9OMh1nM9keeu6ZqL/gOusdU
Fn6H/rS1vHHvpf2qnlPzPnuexzxuqhvOMn/HvdSz7vo3SYT0NTlfxO6T5L13
0d5N6xa55v9dzeNe0vK2vOM6ueg6qvcPZY5UiA==
           "]], 
          PolygonBox[CompressedData["
1:eJwt1EtszFEUx/FrIoSk8/gnJFhMqddCsdFa6FgiITHTptUqZkRDoq14JMSY
Jq1u2h0yXdBkkJnFTIMmaEOIJkqiFcKCFZFaiG68JWz4/nLP4pP+5997zv3f
e869yw8eS3WHnHPNmIuHgXMP8BiT2BFxbjsakMCGmHPrsQl1GGPMXYtR7J4q
51qQRArXibmGPIaUi5ht2I0kNion1qEWp6LOncRZZPGVHF/wGbP4QMyPec59
x3ue7xBzGxWMYBADyOIctjImYXNq7hPkOI6j6MSusHM7EUE07HMq95L5rDPw
YzT2EDqq/BryNofmqjCmjFsYxSA5BnARl4yer2AY9cTU2Zq19llb2ww+4gxO
2zfqW/vI2YsCrqINrfZO/3tKzieYxnM0kbPRaqbaTTNmCq/wOvBjNPYFXqLE
u6KtQWvpJqYLaWQiPkaxb/A28HuatTEae5McNzCGcfQgh/Pox37WsM96Qr1R
4l3RYhR7nxz3rIaqZYfttWIUW2e9phqqluM21yNMYIqYZ/iF3xFfQ9VSPaPe
mbRe1h5oLxqwBTVYiWrEsRTL9J7YFViF1WH/Tv9bhMUWU2Mxik3TowdQj83o
Yc6c1VC1bOObW5FGJuZzKFcE0cD3uHq9F31wzPmPuDh/q/GXmD/qSfU9juAw
OtGFop2Hnyjz/Cnmn/VuhueFzLEAcxDCELnzKKOCC4z5Zucpz/Nl63/FF+yb
0zan5q4N/NlQzDt+N/G7Ec1oCfyeae/2oj3se7ZgPVayMc3Ww+rlfusVnZlB
W3PcaqBaJOzu0ZnR2Rm1s6Y7R3dPu82Vs97LWO/qDOgspOwu0pq19hG7K3Qn
6W4atrOpnlRvrmVNa+yO010Xsr1TDVSLiu2daqRaJe0uU41V6wnrTZ1Jnc2o
1Vo1UC3+A73bvhA=
           "]], PolygonBox[CompressedData["
1:eJwtz7ErxGEYB/An5Uw4JkYWTpgUAwOTgQjLTS6LBZco3UBhMSirrCZ/AosV
A1kYSDlGgxxSDD7XvcOn79PvfZ7n/b0dC8WZlbqIaKWe5ZaIJVY5yfgmXxoj
yhxxoOlRvmdr5xU5T4GK3g8u+HT2JjcsHm+IKMlhRrhpirjmlmf7FmVPc0TO
TE5ecsWfnce+ddrTRTf35u94SHv35JPevL5zecoZQ2YHeU1nA+o+dS9t6a7q
nf3m2+2ZlrPMcZjeuSs32eJb7xej9pTM/qh31Nv8pv/cz9beUn3TlJxgkrE0
U5RrrPMP2So2FQ==
           "]]}]}, 
       {RGBColor[1., 0.6967878537099748, 0.6967878537099748], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4768, 1859, 4738}, {4773, 1859, 4768}, {4644, 1824, 
           4669}, {4703, 1859, 4707}, {3478, 1419, 3410}, {3410, 1419, 
           3416}, {3627, 1499, 3631}, {4669, 1824, 4727}, {3631, 1499, 
           3677}, {3716, 1499, 3710}, {4726, 1824, 4665}, {3710, 1499, 
           3676}, {3501, 1419, 3500}, {4707, 1859, 4739}, {3479, 1419, 
           3501}, {4640, 1824, 4644}}], PolygonBox[CompressedData["
1:eJwt1E9IVFEUx/GblYti/rnIRS2SoqxoVKi0jUZtUkhIlEIhm4HMIBXSIEkT
bFNaq2IsyE2RCyfSIDOKpKAScqIooxalmYFhBUpRpgV9D/e3+MBw7nvnnnvu
eZMVbyirT3POVWMJZsPOzeAgYniS4dxjjCCFXcR2ognH8Tvk3C/M4Q/GMYZ7
uI9VvLMSK5CJTmIdaEErsoLOrcYarEUBsXzkIg/pEeeWRnxNVtsCsfmQr8Fq
yVTuMCJYjmVIw2KU8e5eVKIq4mO2Ns/vBYxjDFFiObgccO4STqENg8Tu4AGG
MnyNVus6rA/6PcPa0/beSk1bEEUOrlHrVSTQpZ5Yb25jwPrAMyfRjtNh38M5
ndHOWkcNR3EINQGfI6EeWi9vIKk9bK821X4CzRgh9kx3ZHeVpMZe9OMWXuMV
3uKdemC9KEeFnulXD6wX+7EPlajCRXpwAVfQje2coUA9sF4MqXc2QzZLrbr7
ejSE/B7lymm5Y5o9y2G5anT2A6gO+BkcUc1W+4B6mVQvGnnmmHpmvcvTLG1G
NOTvxO5mTLNahELNnM3eedbOIYEu3Um7YrYWZ1ZiqMURbOKdjeqx9fouPRjE
QzzCIjjNuM16JzrUM+vdP3L+RTa5NuAnfuAbvkd8Dsv1FMNBH7O1KXyJ+Duz
uzuDsxm+p9bbGOJiv8ut15jgnY+aeZv9Cq0VoyTkv+kmzWSLepBQjVZrkp72
BvyZ7GyT5PiknBOqaUoxWytR7kL1epZ3ZzCNr4iQIxz0MVsb1llTeI4PxN5j
FG9QT846/Sek6w5qFbO1Wt45jD0oDfp3RvVN27cd1SzYndndVem/we40rv+E
ed2B3UWpclmNVutnckyqJquth9h13EQfXuKFarBamvUt2kw26szTymG5+vSu
zYzNTjF77tZ/lv13devbsj161JOU9rC98nlmG4qwQ4qUw3LlIkfP5GvGshWz
tf8uUt5c
           "]], 
          PolygonBox[{{4699, 4698, 4738, 1859, 4703}, {3623, 3622, 3676, 1499,
            3627}, {3423, 3422, 3416, 1419, 3479}, {4739, 1859, 4773, 4778, 
           4779}, {3677, 1499, 3716, 3722, 3723}, {3500, 1419, 3478, 3498, 
           3499}, {4665, 1824, 4640, 4635, 4636}, {4745, 4744, 4727, 1824, 
           4726}}]}]}, 
       {RGBColor[1., 0.6501398312038097, 0.6501398312038097], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkb8rxHEYx9/ucqYPXzfarqSksBjuLzAoRSmbThKDr0GUSRalsMpuuGJA
JpPNIFKW27BbTJeB7vX0eQ9Pr/f3+T6/P43V7cWyImkMq2K1Yaldk0o4jl2i
/wppry7NDkjH8Mh6Fx4k6axfuoAfxI/g/4LL9ayX4Mag9EnMGzwn7gS9krKF
Xk/5X8S8wAZ2h+6Dr67/lPJ3+K9SttDXcM25c3CGWQ+ZuQnvXf8WTgxJC/gn
4bN1+JqObxV5t9irAx/JOSX3AXYdH3lT3it27Tj+HY56tpj9psh3+4fzni1u
0HKvH7jl+jsp3yhqRu197xt3Lf0Wm3DabxFv8ut5Yq6KY76jp/tG/x7+gEGk

           "]], PolygonBox[CompressedData["
1:eJwt0ztoVEEUxvFB1zS6r9toEQsrBQMbbUxskhAbY7eihYka9oqdRhAFwQiS
dNlYKdnGNIoKrhjFx2rEF5hYaKmdD3AFxVVISKps4f9jvuIHl7lnzjzOmW2V
sfLpdSGEQWQwWQhhAtO4gjP5EMZQQYp2MYQ1rGAV48Rc9BzNbeFORwiXcYTv
f8T8xS/8xpYkhM0oIsErvMQ7LOA8c845p3IfYM0h9KEfS4WYW2t0kO8wY4cc
o9hjuRCOYgrVXDyDzjKDWiHuQXv5gSaGsB9lHMRNctzADGpYzJJjAznwmu+9
7LEXndiKs9n4TzEX+H7CnMeo4x4axDz1GXXW546v4hHfI6w5jApSTBIzgbuo
o5s9l/CNXN+xibGNWI9MEmuw4jvWXe8jdtB3qLs8mY1rac1T2binus+os17C
uGusWveiB7uwOx/P2OmaqXbag/YyjxfYwR1vx0504StrfMEnfMY1xq7iOmZz
cc6870h3NULOYRzHKE4g9R3oLqqupXIo1zI5l/AHLdxm7BbuYw4D3EG/a6ra
zvlfA8/QjZJ7RL3Scq4mfqKHOXucQ7lmvXetobUSFHNxD8ue0/SZdfZRnyX1
Wd4S+waLeO89NDymfw+JeeAeUa+kfmvqafV2l++25L0v+K18wMckvok+10y1
S/y21CPqlSpjU66xal13b2lNrV1zrytGsRn3lt5422+i7B5Vr7aJWcvHHlOv
/QcT158O
           "]], PolygonBox[CompressedData["
1:eJwtzj0LQVEcx/F/tzB5uEabUkxcSh7egEEpJmHCYmFit5hkvex3MKB4EwxY
xEy8CXnI9+QMn36n8/A/v3CzV+kaIhKAC18WjlvEMkUyyGLlFVligQ2XDJ/I
hfUZM0zYO5J7v0iZt0/yhTdSSCKuz9SdHe+3OODK27ZaBznDCQWPyIh88Pcd
N4TYs9ib0s/GR/d0yDV/j5lj656qb1HPLpEmgr5/b9U/QkYRQ1//NyBzyKPG
zCGz02QCFlp0aKKDOWeG+e+jelXJOhr4AYpdLdY=
           "]]}]}, 
       {RGBColor[1., 0.6034918086976446, 0.6034918086976446], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4715, 1860, 4741}, {4666, 1823, 4725}, {4786, 1860, 
           4780}, {4712, 1860, 4715}, {4632, 1823, 4637}, {3564, 1464, 
           3570}, {4724, 1823, 4663}, {4637, 1823, 4666}, {3602, 1464, 
           3659}, {3570, 1464, 3602}, {4780, 1860, 4740}, {3658, 1464, 
           3596}}], PolygonBox[CompressedData["
1:eJwt079P00EYx/FLwc22tv4FbpJoUnARJ2t0oU5KNFHwF19WlUUncBFdikya
sshSIovYEhWpGkESWxPBTTfERE00qJNORXx/cp/hlXxz37vnnueeuz2Xrpy4
nAoh9KETC9kQnuIh5tC9K4QCNvj+jHG+b+IOJlFHDf+wjdPMOYUSjuNeJoS7
uI9pnMc5lDGBKeZUUMYEzhLjjPfU3t3MKXiN1s4wVvWe2rvB2CJeYwUduRBS
2OTfT3zl+wsKeWLhGGNHcQ3XcYM9x3AVI65ZtVcxk40xNp2TcutgjxT2oisT
YyjWKMawn7F9zlm5J8QY8pnobA6hFz04kI1nUPYZ6ayKjB32HM2d9FlXMIUt
xtrZWINqGXHu2iPxGZZdk2pbxTuv0dpt9+ogZ9KbizVW3QP1Ytq9eoDZTJyj
uUUcycUaR30Hxp1TxT1Rb1bcixbemr4TDONbmp5gHZ/SsSfqzQAGkbDHkHuo
XjYZe4NVrGERz/AKS3hCjMeoYx5pxnaiEzvyMWfl3odSLsZQrFu47Tma2+bf
Fn7gu++M7s57Yq6hiRYGGRtwjsr1N355jdb+xR+P6V+X74ruhO6G9mh7juZ+
JOYH76G9llybam76THQ2F3AxH2tQLSfRj2WtQQPPfabrjqnYL+npC7/pBb/J
ku9Y0Xewx3dEd6XfsVWjatWb33AMxZr13aihnok5KbcEw/k4VvOb1NvczVje
PVFv5t2rOTwyfetN6W21fNaqadk1Ndxj9fo/b9O1Uw==
           "]], 
          PolygonBox[{{4709, 4708, 4740, 1860, 4712}, {4741, 1860, 4786, 4792,
            4793}, {4743, 4742, 4725, 1823, 4724}, {3596, 1464, 3564, 3557, 
           3558}, {3685, 3684, 3659, 1464, 3658}, {4663, 1823, 4632, 4626, 
           4627}}]}]}, 
       {RGBColor[1., 0.5568437861914797, 0.5568437861914797], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkLEOAVEURAdBt+u9UqfQqSWUEiJKlUbIxrY2Eb8gqm39gfgEUWwiUbCN
HyAR0fkJ5ube4ubMe/fNTHYbUTJeFgHUOSVOwQGHCvCp8Wx6QTZ5nlA/QmAX
AM8ykJJt013y7oFBFbh69Yh3SkbcvfhmSLYsR/Jiu8/JrXklI7f7S6C5kj8n
E+76fLMib/TvmQPm95zqjtMR/eP+GGpXRo4sUzrX1iWdqeXPyLPln7yO6I1X
v+S8ycx6pV/+kXzjl/wDJLIvqg==
           "]], PolygonBox[CompressedData["
1:eJwt0r9vklEUxvGbirrI68tr/wFHTGwCNak/pjaBRVgajSYFk5JiNBoNOMhk
u5St6gqLLpC6iGB0EAZ1sQxVN91wEZMaxUkniN8n9wyf5OZ9zz3nnnPvydLd
1TtzzrlziKFz3LnnaKGNCziPRZxBGRu4gqt4HXfuFXp4id+hc7+whgK+8u0L
PuEzfmCMEb5hgL7lUK6FwLnTSCGN93x7ZzED2zOynMq9xRk2UUEV44Rz35GK
2B/5mqq9hyFy/LuIS7ic8D2olxzyeErNJ9jFs8D3pN46eGG0PsS/mMUotote
4M9QsRmVbYaaZQNNxIk5FvgZaBYP+bZjPaiXoZ1VPav3D/SQPepcBm8jfwe6
i318xAqW7Y50VwWbfQrp0McodooZftLzgc1Is6pGPrdq3GPdZE8DLbRDv0d7
M6yzRuv7qOEfOf5igj8JPxPNJolTgf82sZqqPU+NE4gjwFks2Tf9q1nuB9gM
fYxiD+OI0XpKrpmZ2hl0lradvYue5VCubdRD/yb0Noq4Fvk7adgd6C4eE/PI
ZqBZlIhZRxnXcRM3cAu3I99j0t6s3m7daimHcuXtbS3bXfXsrbxBP/BnKFqN
ktUoWw3V+g9Kz4bQ
           "]], 
          PolygonBox[{{4274, 4273, 4351, 1701, 4285}, {4330, 1703, 4355, 4333,
            4334}, {3680, 1500, 3734, 3743, 3744}, {4352, 1701, 4418, 4427, 
           4428}, {4716, 4715, 4741, 1861, 4719}, {3771, 3770, 3779, 1503, 
           3682}, {3634, 3633, 3679, 1500, 3638}, {4059, 1624, 4023, 4014, 
           4015}, {4723, 1862, 4724, 4663, 4664}, {4146, 4145, 4065, 1624, 
           4140}, {3656, 1503, 3658, 3596, 3597}, {4437, 4436, 4445, 1703, 
           4353}}]}]}, 
       {RGBColor[1., 0.5101957636853147, 0.5101957636853147], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4307, 1702, 4317}, {4658, 1819, 4582}, {3651, 1501, 
           3681}, {4723, 1822, 4722}, {3626, 1459, 3588}, {4628, 1822, 
           4664}, {4582, 1819, 4587}, {4706, 1819, 4702}, {4664, 1822, 
           4723}, {4702, 1819, 4658}, {4097, 1658, 4167}, {4428, 1702, 
           4352}, {3647, 1501, 3651}, {3588, 1459, 3504}, {4096, 1658, 
           4097}, {3744, 1501, 3680}, {4622, 1822, 4628}, {3753, 1501, 
           3744}, {4437, 1702, 4428}, {4353, 1702, 4437}, {4216, 1658, 
           4166}, {3504, 1459, 3507}, {3630, 1459, 3626}, {4223, 1658, 
           4216}}], PolygonBox[CompressedData["
1:eJwt0r1LglEUx/FDRE1q+R801FQEmgnZlEsONjQV2GJkFJVh/0AttfWy6q5j
olCDPg25ZIPlVthgFBQJvUw1ad/Dc4YPyHnuvb97znUkmV7c6RORSfTjaEjk
EKc4w7tH5A1tPGPWJxLBFEI+d42uzSKHv2GRX3zjB6tekSTmEcMra17wgQ68
1DxeN0OzarhGFQ6+WPOJBFbQ48yuZWhWgVoeJZTxyJ4H3KOJCWrjGMUYbqnV
LaNmPbVtj+7t2N00U7Ov4OAGdesxa5ma3bQsPVPPDlILWKZmx6x37VF73faL
bCGNXUSZ4ZzNVGe7jCXEsYA7NNBFDyms2RpdG+TMAKYR9ro9aq8tvj353Jkl
7E56txy1LI5xYvT3Pg4wyJ0G/O6MddZlziyhgqqp2Jvq2xbYk7cz9ewizq2m
3xx7ywtcetwMzcpgD5tkbdhMdDYh+281rPew9TaDCNZZk7I9urdsb+/YW2nP
LbtD0WYYtxlHLTNjM9RZ/gPFfHbE
           "]], 
          PolygonBox[{{4593, 4592, 4587, 1819, 4659}, {4720, 4719, 4722, 1822,
            4661}, {4661, 1822, 4622, 4614, 4615}, {3681, 1501, 3753, 3762, 
           3763}, {4095, 4094, 4166, 1658, 4096}, {4167, 1658, 4223, 4230, 
           4231}, {4297, 4296, 4352, 1702, 4307}, {3589, 1459, 3630, 3634, 
           3635}, {3643, 3642, 3680, 1501, 3647}, {4659, 1819, 4706, 4710, 
           4711}, {3511, 3510, 3507, 1459, 3589}, {4317, 1702, 4353, 4323, 
           4324}}]}]}, 
       {RGBColor[1., 0.46354774117914965`, 0.46354774117914965`], EdgeForm[
        None], GraphicsGroupBox[{
          PolygonBox[{{4711, 1820, 4659}, {4593, 1820, 4600}, {4335, 1664, 
           4331}, {3598, 1463, 3657}, {3553, 1463, 3560}, {4189, 1664, 
           4335}, {3560, 1463, 3598}, {3683, 1502, 3772}, {3772, 1502, 
           3763}, {4047, 1618, 3893}, {3893, 1618, 3900}, {3763, 1502, 
           3681}, {4141, 1664, 4147}, {4147, 1664, 4189}, {4714, 1820, 
           4711}, {4096, 1618, 4095}, {4659, 1820, 4593}, {4095, 1618, 
           4047}}], PolygonBox[CompressedData["
1:eJwt0r1OAlEQhuGRiBITFuQObOQC8C+RRBOIYqOJnZSaSCVi9Aaw0c6fFnoo
NZpg41poI1aijUap9Dr0/XKmeLKb3TNn5sycqe39zXrCzPIYxXnG7AxNHOMl
bdbHI56wEJnNYxFFVFmzhXVs4BtfuMJ1JsQo9h4xhlnW4Ae/SGAEq6hgLmc2
i3GkcMq3E1zgEkfseYhd1LBCDcOkWQ8TUahBtZRQzoQYxbbQxjvevAbVUvO9
dIaqn7npOZTrk5o/8IpBOuyhvTroOr3f4NbpPcYD+nj2nMpd9N4tYRltcrS8
5+p9nTPvoYGDXFijtSWUo/Ct4T1Sr+6oqYck/8ai0HP1voOu63gO5cpTw3Q2
zEizUoxiC5iJQs2x16zaY5+dcihXymfzN8ll4bkWhd5rBju+R8HviO5KxWer
GWqWA++l7pTu1j+pg1tP
           "]], 
          PolygonBox[{{3652, 3651, 3681, 1502, 3654}, {4181, 1664, 4141, 4134,
            4135}, {4660, 1820, 4714, 4717, 4718}, {4608, 4607, 4600, 1820, 
           4660}, {3908, 3907, 3900, 1618, 4048}, {3594, 1463, 3553, 3545, 
           3546}, {4325, 4324, 4331, 1664, 4181}, {4048, 1618, 4096, 4097, 
           4098}}]}]}, 
       {RGBColor[1., 0.4168997186729847, 0.4168997186729847], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4017, 1623, 4061}, {4721, 1821, 4718}, {4616, 1821, 
           4662}, {4718, 1821, 4660}, {4121, 1623, 4056}, {4660, 1821, 
           4608}, {4008, 1623, 4017}, {4129, 1623, 4121}, {4662, 1821, 
           4721}, {4608, 1821, 4616}}], PolygonBox[CompressedData["
1:eJwt0TFLQmEUxvGDRYHivX6FIKgPkGBgUHBNm5KgBttabKrFvkAutZWuuuee
kEs25KINabUU2JSfo//hfYYfXM499z7nPe/a2eXRRcrM1rGMl5zZEGNMsMAf
jnGCn6zZN2b4wBe1T8zxi25s1sEd7lGKzBLso4wuPR08oIdb3KCFtjI8awOb
qrX0jX+7hBQqOMCUjPc41PzdKhkr2EI+Cj0VZXjWHrVdzeSz9TTLI/q5MLPP
fo1mHM401w4W2slYZ/az55VVwDYySEdhR76rHZ6LyvTsIbVnPGGQDd8U1OO9
fc3id+B3ccUMDdRxjlPUcIiq7xeJdjBVT1093jtQlu/Ed9PU2fyf/u8R7141
k8/2holqI93xTDV/V1V2ouyy7jats/8DBkxSuQ==
           "]], 
          PolygonBox[{{4136, 4135, 4061, 1623, 4129}, {4056, 1623, 4008, 3996,
            3997}}]}]}, 
       {RGBColor[1., 0.37025169616681963`, 0.37025169616681963`], EdgeForm[
        None], GraphicsGroupBox[{
          PolygonBox[{{3641, 1460, 3637}, {3547, 1462, 3595}, {3591, 1460, 
           3513}, {3539, 1462, 3547}, {3655, 1462, 3653}, {3637, 1460, 
           3591}, {3513, 1460, 3519}, {3595, 1462, 3655}}], 
          PolygonBox[CompressedData["
1:eJwt0bFOwlAUxvETcVW6Ylxgqg8BCSQ20Yk64GAnJ1hggheARTeVteyy41wG
XaxDTSQ64WRfw/9Jv+GXkNtzv3vOoXk7uRofmNkpDtE5Nmujix5+6mbfSLHC
JwrUAurxiz3+UOISF7jDPa4xQIgzxNzt4xyRZ3KW4hlrnKARVG/62y/83iDD
Fi00VeO1kbIK9bbj7Es9eW8fR2Y5XvGGGTVTDDGqVz16r09YBtWZf7tBgpyz
d2XuNHNNM/qsC2rmyvTsUrsYaPalsn3GlXYQaoaWZsr0hr/1SMaDMj17rd34
DnwXiXrzHcb6T1Ld8bv/t+JCiw==
           "]], 
          PolygonBox[{{3593, 1462, 3539, 3532, 3533}, {3526, 3525, 3519, 1460,
            3592}, {3650, 3649, 3653, 1462, 3593}, {3592, 1460, 3641, 3645, 
           3646}}]}]}, 
       {RGBColor[1., 0.3236036736606547, 0.3236036736606547], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4051, 1619, 4101}, {3910, 1619, 3921}, {3592, 1461, 
           3526}, {3593, 1461, 3650}, {3646, 1461, 3592}, {3650, 1461, 
           3646}, {3533, 1461, 3593}, {3526, 1461, 3533}, {4100, 1619, 
           4050}, {4050, 1619, 3910}}], PolygonBox[CompressedData["
1:eJwt0LESwUAUheEdo08aDZWo5FHoNBQ0OinoeIFo6CLapKenjppWhkoqHsN/
J6f4ZjLZPbvnbne+Gi0bzrkWmih95574oMLbc+6FDDkOSBBjiw3WWCCyPWQy
nHBGDwHa6OifrV1w9eszYp1hZ1W6+4sfhhhgh70yli1wwwN3dS6VsewYE7Hv
PkIckapjrk7WzWa0WUPtDdR9r7tTZSPNOsXMqzsU6mBdcr1Vorf6A3QZNiI=

           "]], 
          PolygonBox[{{3933, 3932, 3921, 1619, 4051}, {4101, 1619, 4100, 4170,
            4171}}]}]}, 
       {RGBColor[1., 0.2769556511544896, 0.2769556511544896], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{3999, 1622, 4058}, {4245, 1659, 4235}, {4116, 1622, 
           4111}, {4111, 1622, 4054}, {4102, 1659, 4172}, {3987, 1622, 
           3999}, {4171, 1659, 4101}, {4235, 1659, 4171}}], 
          PolygonBox[{{3947, 3946, 3933, 3934}, {3960, 3959, 3946, 3947}, {
           4312, 4311, 4321, 4322}, {3974, 3973, 3959, 3960}, {3934, 3933, 
           4051, 4052}, {4302, 4301, 4311, 4312}, {4329, 4328, 4184, 4185}, {
           4256, 4255, 4267, 4268}, {4322, 4321, 4328, 4329}, {4280, 4279, 
           4290, 4291}, {4291, 4290, 4301, 4302}, {4132, 4131, 4123, 4124}, {
           4268, 4267, 4279, 4280}, {4139, 4138, 4131, 4132}, {4185, 4184, 
           4138, 4139}}], 
          PolygonBox[{{4172, 1659, 4245, 4255, 4256}, {4054, 1622, 3987, 3973,
            3974}, {4052, 4051, 4101, 1659, 4102}, {4124, 4123, 4058, 1622, 
           4116}}]}]}, 
       {RGBColor[1., 0.23030762864832466`, 0.23030762864832466`], EdgeForm[
        None], GraphicsGroupBox[{
          PolygonBox[{{4053, 1620, 4103}, {4052, 1620, 3934}, {4132, 1663, 
           4139}, {4139, 1663, 4185}, {4329, 1663, 4322}, {4185, 1663, 
           4329}, {4102, 1620, 4052}, {3934, 1620, 3947}}], 
          PolygonBox[{{4173, 4172, 4256, 4257}, {4112, 4111, 4054, 4055}, {
           4269, 4268, 4280, 4281}, {4303, 4302, 4312, 4313}, {4292, 4291, 
           4302, 4303}, {4281, 4280, 4291, 4292}, {4117, 4116, 4111, 4112}, {
           4257, 4256, 4268, 4269}, {4055, 4054, 3974, 3975}, {3975, 3974, 
           3960, 3961}, {4125, 4124, 4116, 4117}}], 
          PolygonBox[{{4313, 4312, 4322, 1663, 4177}, {3961, 3960, 3947, 1620,
            4053}, {4177, 1663, 4132, 4124, 4125}, {4103, 1620, 4102, 4172, 
           4173}}]}]}, 
       {RGBColor[1., 0.1836596061421596, 0.1836596061421596], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4108, 1621, 4106}, {3975, 1621, 4055}, {3961, 1621, 
           3975}, {4053, 1621, 3961}}], 
          PolygonBox[{{4104, 4103, 4173, 4174}, {4118, 4117, 4112, 4113}, {
           4126, 4125, 4117, 4118}, {4174, 4173, 4257, 4258}, {4270, 4269, 
           4281, 4282}, {4282, 4281, 4292, 4293}, {4314, 4313, 4177, 4178}, {
           4258, 4257, 4269, 4270}, {4293, 4292, 4303, 4304}, {4178, 4177, 
           4125, 4126}, {4304, 4303, 4313, 4314}}], 
          PolygonBox[{{4113, 4112, 4055, 1621, 4108}, {4106, 1621, 4053, 4103,
            4104}}]}]}, 
       {RGBColor[1., 0.13701158363599453`, 0.13701158363599453`], EdgeForm[
        None], GraphicsGroupBox[
         PolygonBox[{{4175, 4174, 4258, 4259}, {4109, 4108, 4106, 4107}, {
          4127, 4126, 4118, 4119}, {4119, 4118, 4113, 4114}, {4271, 4270, 
          4282, 4283}, {4283, 4282, 4293, 4294}, {4107, 4106, 4104, 4105}, {
          4105, 4104, 4174, 4175}, {4259, 4258, 4270, 4271}, {4305, 4304, 
          4314, 4315}, {4114, 4113, 4108, 4109}, {4294, 4293, 4304, 4305}, {
          4315, 4314, 4178, 4179}, {4179, 4178, 4126, 4127}}]]}, 
       {RGBColor[1., 0.09036356112982957, 0.09036356112982957], EdgeForm[
        None], GraphicsGroupBox[{
          PolygonBox[{{4105, 1660, 4107}, {4259, 1660, 4175}, {4175, 1660, 
           4105}, {4271, 1660, 4259}}], 
          PolygonBox[{{4115, 4114, 4109, 4110}, {4306, 4305, 4315, 4316}, {
           4316, 4315, 4179, 4180}, {4284, 4283, 4294, 4295}, {4120, 4119, 
           4114, 4115}, {4180, 4179, 4127, 4128}, {4128, 4127, 4119, 4120}, {
           4295, 4294, 4305, 4306}}], 
          PolygonBox[{{4110, 4109, 4107, 1660, 4176}, {4176, 1660, 4271, 4283,
            4284}}]}]}, 
       {RGBColor[1., 0., 0.], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{4316, 1662, 4306}, {4284, 1661, 4176}, {4295, 1661, 
           4284}, {4128, 1662, 4180}, {4120, 1662, 4128}, {4180, 1662, 
           4316}, {4176, 1661, 4110}, {4110, 1661, 4115}}], 
          PolygonBox[{{4306, 1662, 1661, 4295}, {4115, 1661, 1662, 
           4120}}]}]}}],
     AspectRatio->NCache[
       Rational[250, 513], 0.4873294346978557],
     AxesOrigin->{Automatic, Automatic},
     DisplayFunction->Identity,
     Frame->True,
     FrameLabel->{None, None},
     FrameStyle->Automatic,
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{{0}, {0}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->Large,
     LabelStyle->{FontFamily -> "Times"},
     Method->{
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True},
     PlotLabel->FormBox["10", TraditionalForm],
     PlotRange->{{-6., 6.}, {-2.9239766081871346`, 2.9239766081871346`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}},
     Ticks->{Automatic, Automatic}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.895467476499954*^9, 3.8954675827649183`*^9, 3.896147670735045*^9, {
   3.896149418397876*^9, 3.896149422823304*^9}, {3.896149523033877*^9, 
   3.8961495903744783`*^9}, {3.8961496227429943`*^9, 3.896149630422372*^9}, 
   3.896150788394878*^9, 3.896158646963212*^9, 3.8961730085621643`*^9, 
   3.896284135945545*^9, 3.896324693969283*^9, 3.896375479471654*^9, 
   3.896508256808442*^9, {3.896634784938877*^9, 3.8966348240687428`*^9}, 
   3.8966429588430843`*^9, 3.896672990908833*^9, {3.89703213752439*^9, 
   3.897032160724634*^9}, 3.897273719465077*^9, 3.897355089039095*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"e8542635-377f-428c-9f2d-a3799ec292b7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Efield", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"NotebookDirectory", "[", "]"}]}], "<>", 
         "\"\<data/field-v3-order-\>\"", "<>", 
         RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
         RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<.mx\>\""}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"norm", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Efield", "^", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plotLimitX", "=", 
       RowBox[{
        RowBox[{"6", "/", "5"}], "a"}]}], ";", 
      RowBox[{"plotLimitY", "=", 
       RowBox[{"2", "a", " ", 
        RowBox[{"50", "/", "171"}]}]}], ";", 
      RowBox[{"nPointsX", "=", "81"}], ";", 
      RowBox[{"nPointsY", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"nPointsX", " ", 
         RowBox[{"plotLimitY", "/", "plotLimitX"}]}], "]"}]}], ";", 
      RowBox[{"xd", "=", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"-", "plotLimitX"}], ",", "plotLimitX", ",", "nPointsX"}], 
        "]"}]}], ";", 
      RowBox[{"yd", "=", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"-", "plotLimitY"}], ",", "plotLimitY", ",", "nPointsY"}], 
        "]"}]}], ";", 
      RowBox[{"normd", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"norm", "/.", 
             RowBox[{"x", "->", 
              RowBox[{"xd", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], "/.", 
            RowBox[{"y", "->", 
             RowBox[{"yd", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}]}], ",", "50"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "xd"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "@", "yd"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"NotebookDirectory", "[", "]"}]}], "<>", 
         "\"\<data/v3-order-\>\"", "<>", 
         RowBox[{"ToString", "[", "order", "]"}], "<>", "\"\<-a-\>\"", "<>", 
         RowBox[{"ToString", "[", "a", "]"}], "<>", "\"\<.mx\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<x\>\"", "->", "xd"}], ",", 
          RowBox[{"\"\<y\>\"", "->", "yd"}], ",", 
          RowBox[{"\"\<discrete norm\>\"", "->", "normd"}]}], "|>"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", "order"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"order", ",", "20", ",", "80", ",", "10"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.893295310769754*^9, 3.893295342656204*^9}, {
   3.893295481884639*^9, 3.8932954970722523`*^9}, {3.8933046900644693`*^9, 
   3.893304694091041*^9}, 3.8933063583220463`*^9, {3.8933153821602097`*^9, 
   3.893315382259701*^9}, {3.893386522104722*^9, 3.893386537915353*^9}, {
   3.893403306750317*^9, 3.893403306769039*^9}, {3.893403362936163*^9, 
   3.893403434108122*^9}, {3.893404712967177*^9, 3.893404716912837*^9}, 
   3.893417534586487*^9, 3.8934175739898863`*^9, {3.89341760404039*^9, 
   3.893417629445187*^9}, {3.893417713750567*^9, 3.893417813718144*^9}, 
   3.893563225427561*^9, {3.893654341106513*^9, 3.893654357155602*^9}, {
   3.893654541317271*^9, 3.893654548701663*^9}, {3.893654706683943*^9, 
   3.8936547091226883`*^9}, {3.893654822389945*^9, 3.893654825198614*^9}, {
   3.894093430300171*^9, 3.894093449863216*^9}, 3.89409389231215*^9, {
   3.894179582841292*^9, 3.894179587598124*^9}, 3.8941799142543917`*^9, 
   3.894180114540235*^9, {3.894180268101232*^9, 3.894180271177332*^9}, {
   3.8941893720476637`*^9, 3.894189379518223*^9}, {3.894189912516293*^9, 
   3.894189915037539*^9}, {3.894190201819026*^9, 3.894190202367402*^9}, {
   3.894688443832053*^9, 3.89468846001551*^9}, {3.894688613289299*^9, 
   3.894688615893167*^9}, 3.89468869880933*^9, {3.894688729849118*^9, 
   3.8946887312862883`*^9}, {3.894698600720131*^9, 3.894698624918355*^9}, 
   3.894700395792509*^9, {3.895414441353413*^9, 3.8954144697131433`*^9}, 
   3.895414562890806*^9, {3.895414633202917*^9, 3.89541465621634*^9}, {
   3.895464988070408*^9, 3.895465050394731*^9}, {3.89546510340346*^9, 
   3.895465115171919*^9}, {3.8954652248487997`*^9, 3.895465225177898*^9}, {
   3.89546560032185*^9, 3.89546560142912*^9}, {3.895465669290098*^9, 
   3.8954657101488667`*^9}, {3.89546576952843*^9, 3.89546580248979*^9}, {
   3.895466050214232*^9, 3.895466079054206*^9}, {3.8954666678537207`*^9, 
   3.895466682677988*^9}, {3.895467211142272*^9, 3.895467222311702*^9}, {
   3.89546726062138*^9, 3.8954672607907753`*^9}, {3.895467392165413*^9, 
   3.895467422760066*^9}, {3.895467551769147*^9, 3.895467562645108*^9}, {
   3.8961470520923147`*^9, 3.89614706970954*^9}, {3.896150952775509*^9, 
   3.896150953147148*^9}, {3.896151008215893*^9, 3.8961510082484617`*^9}, {
   3.896493196945313*^9, 3.896493197042951*^9}, {3.896591382245859*^9, 
   3.896591383468623*^9}, {3.897273728739067*^9, 3.897273739396308*^9}, {
   3.897357136642951*^9, 3.897357139950635*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8821fa46-b57a-434a-9403-90cef85843ab"]
},
WindowSize->{1380, 949},
WindowMargins->{{Automatic, 162}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[
               OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5ba42f92-4543-41a7-be79-e6088f3f453a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 30055, 687, 2196, "Input",ExpressionUUID->"0769664e-eca7-425a-bd9c-aa18d11e94d9"],
Cell[CellGroupData[{
Cell[30638, 711, 18358, 387, 1260, "Input",ExpressionUUID->"b1664fb8-8d64-4d75-b4de-c141720ce0d0"],
Cell[48999, 1100, 9854, 201, 176, "Output",ExpressionUUID->"bf387e08-7026-4391-9964-4354cf5f10c4"]
}, Open  ]],
Cell[58868, 1304, 4794, 113, 324, "Input",ExpressionUUID->"19f345e5-4f94-4349-98cf-03059ec09d2c"],
Cell[63665, 1419, 151, 3, 37, "Input",ExpressionUUID->"7e76a07c-eae7-4e99-81cd-029481d36efd"],
Cell[63819, 1424, 1205, 21, 64, "Input",ExpressionUUID->"e2e12163-f3b1-429c-b7f0-5d97e07fa9e5"],
Cell[CellGroupData[{
Cell[65049, 1449, 13558, 213, 480, "Input",ExpressionUUID->"0d5171ea-b44a-4d7b-819a-6c63ab5bfb54"],
Cell[78610, 1664, 156, 2, 42, "Output",ExpressionUUID->"431755d6-8706-4c97-8a94-5b9ff18d85f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78803, 1671, 13239, 214, 662, "Input",ExpressionUUID->"57a71c0f-bed2-4ba7-835f-435317dcf938"],
Cell[92045, 1887, 198546, 3333, 901, "Output",ExpressionUUID->"e8542635-377f-428c-9f2d-a3799ec292b7"]
}, Open  ]],
Cell[290606, 5223, 5537, 112, 402, "Input",ExpressionUUID->"8821fa46-b57a-434a-9403-90cef85843ab"]
}
]
*)

