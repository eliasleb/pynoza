import numpy as np


def cartesian_from_real_spherical(l, m):
    """Returns a dictionary to find the Cartesian moments corresponding to the given real spherical harmonic l, m"""
    result = dict()
    if m < 0:
        for k, v in SPHERICAL_TO_CARTESIAN[(l, -m)].items():
            coeff = np.sqrt(2) * (-1)**m * np.real(v)
            if np.abs(coeff) > 1e-30:
                result[k] = coeff
        return result
    if m == 0:
        for k, v in SPHERICAL_TO_CARTESIAN[(l, m)].items():
            result[k] = np.imag(v)
        return result
    for k, v in SPHERICAL_TO_CARTESIAN[(l, -m)].items():
        coeff = np.sqrt(2) * (-1) ** m * np.imag(v)
        if np.abs(coeff) > 1e-30:
            result[k] = coeff
    return result


# {(?<a1>d+?), (?<a2>-?d+?)}  -->  (${a1}, ${a2})
# {(?<a1>d+?),s(?<a2>-?d+?),s(?<a3>-?d+?)}  -->  (${a1}, ${a2}, ${a3})

SPHERICAL_TO_CARTESIAN = {(0, 0):
                              {(0, 0, 0): complex(0, -1) / np.sqrt(np.pi),
                               }, (1, -1):
                              {(1, 0, 0): (complex(0, 0.5) * np.sqrt(1.5)) / np.power(np.pi, 1.5),
                               (0, 1, 0): np.sqrt(1.5) / (2. * np.power(np.pi, 1.5)),
                               }, (1, 0):
                              {(0, 0, 1): (complex(0, 0.5) * np.sqrt(3)) / np.power(np.pi, 1.5),
                               }, (1, 1):
                              {(1, 0, 0): (complex(0, -0.5) * np.sqrt(1.5)) / np.power(np.pi, 1.5),
                               (0, 1, 0): np.sqrt(1.5) / (2. * np.power(np.pi, 1.5)),
                               }, (2, -2):
                              {(2, 0, 0): (complex(0, -0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (1, 1, 0): -0.25 * np.sqrt(7.5) / np.power(np.pi, 2.5),
                               (0, 2, 0): (complex(0, 0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               }, (2, -1):
                              {(1, 0, 1): (complex(0, -0.25) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (0, 1, 1): -0.25 * np.sqrt(7.5) / np.power(np.pi, 2.5),
                               }, (2, 0):
                              {(2, 0, 0): (complex(0, 0.125) * np.sqrt(5)) / np.power(np.pi, 2.5),
                               (0, 2, 0): (complex(0, 0.125) * np.sqrt(5)) / np.power(np.pi, 2.5),
                               (0, 0, 2): (complex(0, -0.25) * np.sqrt(5)) / np.power(np.pi, 2.5),
                               }, (2, 1):
                              {(1, 0, 1): (complex(0, 0.25) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (0, 1, 1): -0.25 * np.sqrt(7.5) / np.power(np.pi, 2.5),
                               }, (2, 2):
                              {(2, 0, 0): (complex(0, -0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               (1, 1, 0): np.sqrt(7.5) / (4. * np.power(np.pi, 2.5)),
                               (0, 2, 0): (complex(0, 0.125) * np.sqrt(7.5)) / np.power(np.pi, 2.5),
                               }, (3, -3):
                              {(3, 0, 0): (complex(0, 0.03125) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (2, 1, 0): (3 * np.sqrt(35)) / (32. * np.power(np.pi, 3.5)),
                               (1, 2, 0): (complex(0, -0.09375) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(35) / np.power(np.pi, 3.5),
                               }, (3, -2):
                              {(2, 0, 1): (complex(0, 0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               (1, 1, 1): np.sqrt(52.5) / (8. * np.power(np.pi, 3.5)),
                               (0, 2, 1): (complex(0, -0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               }, (3, -1):
                              {(3, 0, 0): (complex(0, -0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (2, 1, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (1, 2, 0): (complex(0, -0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (1, 0, 2): (complex(0, 0.125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (0, 1, 2): np.sqrt(21) / (8. * np.power(np.pi, 3.5)),
                               }, (3, 0):
                              {(2, 0, 1): (complex(0, -0.1875) * np.sqrt(7)) / np.power(np.pi, 3.5),
                               (0, 2, 1): (complex(0, -0.1875) * np.sqrt(7)) / np.power(np.pi, 3.5),
                               (0, 0, 3): (complex(0, 0.125) * np.sqrt(7)) / np.power(np.pi, 3.5),
                               }, (3, 1):
                              {(3, 0, 0): (complex(0, 0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (2, 1, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (1, 2, 0): (complex(0, 0.03125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (1, 0, 2): (complex(0, -0.125) * np.sqrt(21)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(21) / np.power(np.pi, 3.5),
                               (0, 1, 2): np.sqrt(21) / (8. * np.power(np.pi, 3.5)),
                               }, (3, 2):
                              {(2, 0, 1): (complex(0, 0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               (1, 1, 1): -0.125 * np.sqrt(52.5) / np.power(np.pi, 3.5),
                               (0, 2, 1): (complex(0, -0.0625) * np.sqrt(52.5)) / np.power(np.pi, 3.5),
                               }, (3, 3):
                              {(3, 0, 0): (complex(0, -0.03125) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (2, 1, 0): (3 * np.sqrt(35)) / (32. * np.power(np.pi, 3.5)),
                               (1, 2, 0): (complex(0, 0.09375) * np.sqrt(35)) / np.power(np.pi, 3.5),
                               (0, 3, 0): -0.03125 * np.sqrt(35) / np.power(np.pi, 3.5),
                               }, (4, -4):
                              {(4, 0, 0): (complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (-3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 2, 0): (complex(0, 0.140625) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               }, (4, -3):
                              {(3, 0, 1): (complex(0, -0.046875) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (-9 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (complex(0, 0.140625) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (3 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               }, (4, -2):
                              {(4, 0, 0): (complex(0, 0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 0, 2): (complex(0, -0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (1, 1, 2): (-9 * np.sqrt(2.5)) / (16. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (complex(0, -0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (0, 2, 2): (complex(0, 0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               }, (4, -1):
                              {(3, 0, 1): (complex(0, 0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (complex(0, 0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (1, 0, 3): (complex(0, -0.1875) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (0, 1, 3): (-3 * np.sqrt(5)) / (16. * np.power(np.pi, 4.5)),
                               }, (4, 0):
                              {(4, 0, 0): complex(0, -0.0703125) / np.power(np.pi, 4.5),
                               (2, 2, 0): complex(0, -0.140625) / np.power(np.pi, 4.5),
                               (2, 0, 2): complex(0, 0.5625) / np.power(np.pi, 4.5),
                               (0, 4, 0): complex(0, -0.0703125) / np.power(np.pi, 4.5),
                               (0, 2, 2): complex(0, 0.5625) / np.power(np.pi, 4.5),
                               (0, 0, 4): complex(0, -0.1875) / np.power(np.pi, 4.5),
                               }, (4, 1):
                              {(3, 0, 1): (complex(0, -0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (complex(0, -0.140625) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (1, 0, 3): (complex(0, 0.1875) * np.sqrt(5)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (9 * np.sqrt(5)) / (64. * np.power(np.pi, 4.5)),
                               (0, 1, 3): (-3 * np.sqrt(5)) / (16. * np.power(np.pi, 4.5)),
                               }, (4, 2):
                              {(4, 0, 0): (complex(0, 0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (-3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 0, 2): (complex(0, -0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (-3 * np.sqrt(2.5)) / (32. * np.power(np.pi, 4.5)),
                               (1, 1, 2): (9 * np.sqrt(2.5)) / (16. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (complex(0, -0.046875) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               (0, 2, 2): (complex(0, 0.28125) * np.sqrt(2.5)) / np.power(np.pi, 4.5),
                               }, (4, 3):
                              {(3, 0, 1): (complex(0, 0.046875) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (2, 1, 1): (-9 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               (1, 2, 1): (complex(0, -0.140625) * np.sqrt(35)) / np.power(np.pi, 4.5),
                               (0, 3, 1): (3 * np.sqrt(35)) / (64. * np.power(np.pi, 4.5)),
                               }, (4, 4):
                              {(4, 0, 0): (complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (3, 1, 0): (3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (2, 2, 0): (complex(0, 0.140625) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               (1, 3, 0): (-3 * np.sqrt(17.5)) / (32. * np.power(np.pi, 4.5)),
                               (0, 4, 0): (complex(0, -0.0234375) * np.sqrt(17.5)) / np.power(np.pi, 4.5),
                               }, (5, -5):
                              {(5, 0, 0): (complex(0, 0.005859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (15 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (complex(0, -0.05859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (2, 3, 0): (-15 * np.sqrt(77)) / (256. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (complex(0, 0.029296875) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (0, 5, 0): (3 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               }, (5, -4):
                              {(4, 0, 1): (complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): (3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (2, 2, 1): (complex(0, -0.0703125) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): (-3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 4, 1): (complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               }, (5, -3):
                              {(5, 0, 0): (complex(0, -0.001953125) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (-3 * np.sqrt(385)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (complex(0, 0.00390625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (complex(0, 0.015625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (2, 3, 0): -0.00390625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               (2, 1, 2): (3 * np.sqrt(385)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (complex(0, 0.005859375) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (complex(0, -0.046875) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(385) / (512. * np.power(np.pi, 5.5)),
                               (0, 3, 2): -0.015625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               }, (5, -2):
                              {(4, 0, 1): (complex(0, -0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): -0.015625 * np.sqrt(577.5) / np.power(np.pi, 5.5),
                               (2, 0, 3): (complex(0, 0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): -0.015625 * np.sqrt(577.5) / np.power(np.pi, 5.5),
                               (1, 1, 3): np.sqrt(577.5) / (32. * np.power(np.pi, 5.5)),
                               (0, 4, 1): (complex(0, 0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (0, 2, 3): (complex(0, -0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               }, (5, -1):
                              {(5, 0, 0): (complex(0, 0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (4, 1, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (complex(0, 0.0078125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (complex(0, -0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (2, 3, 0): np.sqrt(82.5) / (128. * np.power(np.pi, 5.5)),
                               (2, 1, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (complex(0, 0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (complex(0, -0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 0, 4): (complex(0, 0.03125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (0, 3, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 1, 4): np.sqrt(82.5) / (32. * np.power(np.pi, 5.5)),
                               }, (5, 0):
                              {(4, 0, 1): (complex(0, 0.05859375) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (2, 2, 1): (complex(0, 0.1171875) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (2, 0, 3): (complex(0, -0.15625) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (0, 4, 1): (complex(0, 0.05859375) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (0, 2, 3): (complex(0, -0.15625) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               (0, 0, 5): (complex(0, 0.03125) * np.sqrt(11)) / np.power(np.pi, 5.5),
                               }, (5, 1):
                              {(5, 0, 0): (complex(0, -0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (4, 1, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (complex(0, -0.0078125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (complex(0, 0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (2, 3, 0): np.sqrt(82.5) / (128. * np.power(np.pi, 5.5)),
                               (2, 1, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (complex(0, -0.00390625) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (complex(0, 0.046875) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (1, 0, 4): (complex(0, -0.03125) * np.sqrt(82.5)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(82.5) / (256. * np.power(np.pi, 5.5)),
                               (0, 3, 2): (-3 * np.sqrt(82.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 1, 4): np.sqrt(82.5) / (32. * np.power(np.pi, 5.5)),
                               }, (5, 2):
                              {(4, 0, 1): (complex(0, -0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): np.sqrt(577.5) / (64. * np.power(np.pi, 5.5)),
                               (2, 0, 3): (complex(0, 0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): np.sqrt(577.5) / (64. * np.power(np.pi, 5.5)),
                               (1, 1, 3): -0.03125 * np.sqrt(577.5) / np.power(np.pi, 5.5),
                               (0, 4, 1): (complex(0, 0.0078125) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               (0, 2, 3): (complex(0, -0.015625) * np.sqrt(577.5)) / np.power(np.pi, 5.5),
                               }, (5, 3):
                              {(5, 0, 0): (complex(0, 0.001953125) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (-3 * np.sqrt(385)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (complex(0, -0.00390625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (3, 0, 2): (complex(0, -0.015625) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (2, 3, 0): -0.00390625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               (2, 1, 2): (3 * np.sqrt(385)) / (64. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (complex(0, -0.005859375) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (1, 2, 2): (complex(0, 0.046875) * np.sqrt(385)) / np.power(np.pi, 5.5),
                               (0, 5, 0): np.sqrt(385) / (512. * np.power(np.pi, 5.5)),
                               (0, 3, 2): -0.015625 * np.sqrt(385) / np.power(np.pi, 5.5),
                               }, (5, 4):
                              {(4, 0, 1): (complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (3, 1, 1): (-3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (2, 2, 1): (complex(0, -0.0703125) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               (1, 3, 1): (3 * np.sqrt(192.5)) / (64. * np.power(np.pi, 5.5)),
                               (0, 4, 1): (complex(0, 0.01171875) * np.sqrt(192.5)) / np.power(np.pi, 5.5),
                               }, (5, 5):
                              {(5, 0, 0): (complex(0, -0.005859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (4, 1, 0): (15 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               (3, 2, 0): (complex(0, 0.05859375) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (2, 3, 0): (-15 * np.sqrt(77)) / (256. * np.power(np.pi, 5.5)),
                               (1, 4, 0): (complex(0, -0.029296875) * np.sqrt(77)) / np.power(np.pi, 5.5),
                               (0, 5, 0): (3 * np.sqrt(77)) / (512. * np.power(np.pi, 5.5)),
                               }, (6, -6):
                              {(6, 0, 0): (complex(0, -0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (-3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (complex(0, 0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (3, 3, 0): (5 * np.sqrt(3003)) / (512. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (complex(0, -0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (-3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (complex(0, 0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               }, (6, -5):
                              {(5, 0, 1): (complex(0, -0.0029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-15 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (complex(0, 0.029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (15 * np.sqrt(1001)) / (512. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (complex(0, -0.0146484375) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               }, (6, -4):
                              {(6, 0, 0): (complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (3, 1, 2): (-15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (2, 2, 2): (complex(0, 0.17578125) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (-3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (1, 3, 2): (15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               }, (6, -3):
                              {(5, 0, 1): (complex(0, 0.0029296875) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (9 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (complex(0, -0.005859375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (3 * np.sqrt(1365)) / (512. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (-3 * np.sqrt(1365)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (complex(0, -0.0087890625) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (complex(0, 0.0234375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 3, 3): np.sqrt(1365) / (128. * np.power(np.pi, 6.5)),
                               }, (6, -2):
                              {(6, 0, 0): (complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (5, 1, 0): -0.0009765625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (4, 2, 0): (complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 3, 0): -0.001953125 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (3, 1, 2): np.sqrt(1365) / (64. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 0, 4): (complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 5, 0): -0.0009765625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (1, 3, 2): np.sqrt(1365) / (64. * np.power(np.pi, 6.5)),
                               (1, 1, 4): -0.015625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (0, 6, 0): (complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 2, 4): (complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               }, (6, -1):
                              {(5, 0, 1): (complex(0, -0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (complex(0, -0.01953125) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (complex(0, 0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (-5 * np.sqrt(136.5)) / (256. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (complex(0, -0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (complex(0, 0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 0, 5): (complex(0, -0.015625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (0, 3, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 1, 5): -0.015625 * np.sqrt(136.5) / np.power(np.pi, 6.5),
                               }, (6, 0):
                              {(6, 0, 0): (complex(0, 0.0048828125) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (4, 2, 0): (complex(0, 0.0146484375) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (complex(0, -0.087890625) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (2, 4, 0): (complex(0, 0.0146484375) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (2, 2, 2): (complex(0, -0.17578125) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (2, 0, 4): (complex(0, 0.1171875) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 6, 0): (complex(0, 0.0048828125) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (complex(0, -0.087890625) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 2, 4): (complex(0, 0.1171875) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               (0, 0, 6): (complex(0, -0.015625) * np.sqrt(13)) / np.power(np.pi, 6.5),
                               }, (6, 1):
                              {(5, 0, 1): (complex(0, 0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (complex(0, 0.01953125) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (complex(0, -0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (-5 * np.sqrt(136.5)) / (256. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (complex(0, 0.009765625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (complex(0, -0.0390625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (1, 0, 5): (complex(0, 0.015625) * np.sqrt(136.5)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-5 * np.sqrt(136.5)) / (512. * np.power(np.pi, 6.5)),
                               (0, 3, 3): (5 * np.sqrt(136.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 1, 5): -0.015625 * np.sqrt(136.5) / np.power(np.pi, 6.5),
                               }, (6, 2):
                              {(6, 0, 0): (complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (5, 1, 0): np.sqrt(1365) / (1024. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (complex(0, -0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 3, 0): np.sqrt(1365) / (512. * np.power(np.pi, 6.5)),
                               (3, 1, 2): -0.015625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (2, 4, 0): (complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 0, 4): (complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 5, 0): np.sqrt(1365) / (1024. * np.power(np.pi, 6.5)),
                               (1, 3, 2): -0.015625 * np.sqrt(1365) / np.power(np.pi, 6.5),
                               (1, 1, 4): np.sqrt(1365) / (64. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (complex(0, 0.00048828125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (complex(0, -0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 2, 4): (complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               }, (6, 3):
                              {(5, 0, 1): (complex(0, -0.0029296875) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (9 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (complex(0, 0.005859375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (3, 0, 3): (complex(0, 0.0078125) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (3 * np.sqrt(1365)) / (512. * np.power(np.pi, 6.5)),
                               (2, 1, 3): (-3 * np.sqrt(1365)) / (128. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (complex(0, 0.0087890625) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (1, 2, 3): (complex(0, -0.0234375) * np.sqrt(1365)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1365)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 3, 3): np.sqrt(1365) / (128. * np.power(np.pi, 6.5)),
                               }, (6, 4):
                              {(6, 0, 0): (complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (-3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (4, 0, 2): (complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (3, 1, 2): (15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (complex(0, -0.0146484375) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (2, 2, 2): (complex(0, 0.17578125) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (3 * np.sqrt(45.5)) / (256. * np.power(np.pi, 6.5)),
                               (1, 3, 2): (-15 * np.sqrt(45.5)) / (128. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (complex(0, 0.0029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               (0, 4, 2): (complex(0, -0.029296875) * np.sqrt(45.5)) / np.power(np.pi, 6.5),
                               }, (6, 5):
                              {(5, 0, 1): (complex(0, 0.0029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (4, 1, 1): (-15 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               (3, 2, 1): (complex(0, -0.029296875) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (2, 3, 1): (15 * np.sqrt(1001)) / (512. * np.power(np.pi, 6.5)),
                               (1, 4, 1): (complex(0, 0.0146484375) * np.sqrt(1001)) / np.power(np.pi, 6.5),
                               (0, 5, 1): (-3 * np.sqrt(1001)) / (1024. * np.power(np.pi, 6.5)),
                               }, (6, 6):
                              {(6, 0, 0): (complex(0, -0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (5, 1, 0): (3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (4, 2, 0): (complex(0, 0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (3, 3, 0): (-5 * np.sqrt(3003)) / (512. * np.power(np.pi, 6.5)),
                               (2, 4, 0): (complex(0, -0.00732421875) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               (1, 5, 0): (3 * np.sqrt(3003)) / (1024. * np.power(np.pi, 6.5)),
                               (0, 6, 0): (complex(0, 0.00048828125) * np.sqrt(3003)) / np.power(np.pi, 6.5),
                               }, (7, -7):
                              {(7, 0, 0): (complex(0, 0.000732421875) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (21 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, -0.015380859375) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (-105 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, 0.025634765625) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (63 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, -0.005126953125) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-3 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               }, (7, -6):
                              {(6, 0, 1): (complex(0, 0.000732421875) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               (5, 1, 1): (9 * np.sqrt(5005)) / (2048. * np.power(np.pi, 7.5)),
                               (4, 2, 1): (complex(0, -0.010986328125) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               (3, 3, 1): (-15 * np.sqrt(5005)) / (1024. * np.power(np.pi, 7.5)),
                               (2, 4, 1): (complex(0, 0.010986328125) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               (1, 5, 1): (9 * np.sqrt(5005)) / (2048. * np.power(np.pi, 7.5)),
                               (0, 6, 1): (complex(0, -0.000732421875) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               }, (7, -5):
                              {(7, 0, 0): (complex(0, -0.000732421875) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (-15 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, 0.006591796875) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (5, 0, 2): (complex(0, 0.0087890625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (15 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (4, 1, 2): (45 * np.sqrt(192.5)) / (1024. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, 0.003662109375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (3, 2, 2): (complex(0, -0.087890625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (27 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (2, 3, 2): (-45 * np.sqrt(192.5)) / (512. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, -0.003662109375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (1, 4, 2): (complex(0, 0.0439453125) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-3 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (0, 5, 2): (9 * np.sqrt(192.5)) / (1024. * np.power(np.pi, 7.5)),
                               }, (7, -4):
                              {(6, 0, 1): (complex(0, -0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (5, 1, 1): (-9 * np.sqrt(192.5)) / (512. * np.power(np.pi, 7.5)),
                               (4, 2, 1): (complex(0, 0.02197265625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (4, 0, 3): (complex(0, 0.0146484375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (3, 1, 3): (15 * np.sqrt(192.5)) / (256. * np.power(np.pi, 7.5)),
                               (2, 4, 1): (complex(0, 0.02197265625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (2, 2, 3): (complex(0, -0.087890625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (1, 5, 1): (9 * np.sqrt(192.5)) / (512. * np.power(np.pi, 7.5)),
                               (1, 3, 3): (-15 * np.sqrt(192.5)) / (256. * np.power(np.pi, 7.5)),
                               (0, 6, 1): (complex(0, -0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (0, 4, 3): (complex(0, 0.0146484375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               }, (7, -3):
                              {(7, 0, 0): (complex(0, 0.002197265625) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (27 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, -0.002197265625) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (5, 0, 2): (complex(0, -0.0439453125) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (45 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (4, 1, 2): (-135 * np.sqrt(17.5)) / (1024. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, -0.010986328125) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (3, 2, 2): (complex(0, 0.087890625) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (3, 0, 4): (complex(0, 0.05859375) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (9 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (2, 3, 2): (-45 * np.sqrt(17.5)) / (512. * np.power(np.pi, 7.5)),
                               (2, 1, 4): (45 * np.sqrt(17.5)) / (256. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, -0.006591796875) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (1, 4, 2): (complex(0, 0.1318359375) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (1, 2, 4): (complex(0, -0.17578125) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-9 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (0, 5, 2): (45 * np.sqrt(17.5)) / (1024. * np.power(np.pi, 7.5)),
                               (0, 3, 4): (-15 * np.sqrt(17.5)) / (256. * np.power(np.pi, 7.5)),
                               }, (7, -2):
                              {(6, 0, 1): (complex(0, 0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (5, 1, 1): (45 * np.sqrt(35)) / (2048. * np.power(np.pi, 7.5)),
                               (4, 2, 1): (complex(0, 0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (4, 0, 3): (complex(0, -0.05859375) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (3, 3, 1): (45 * np.sqrt(35)) / (1024. * np.power(np.pi, 7.5)),
                               (3, 1, 3): (-15 * np.sqrt(35)) / (128. * np.power(np.pi, 7.5)),
                               (2, 4, 1): (complex(0, -0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (2, 0, 5): (complex(0, 0.03515625) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (1, 5, 1): (45 * np.sqrt(35)) / (2048. * np.power(np.pi, 7.5)),
                               (1, 3, 3): (-15 * np.sqrt(35)) / (128. * np.power(np.pi, 7.5)),
                               (1, 1, 5): (9 * np.sqrt(35)) / (128. * np.power(np.pi, 7.5)),
                               (0, 6, 1): (complex(0, -0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (0, 4, 3): (complex(0, 0.05859375) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (0, 2, 5): (complex(0, -0.03515625) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               }, (7, -1):
                              {(7, 0, 0): (complex(0, -0.001220703125) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (-5 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, -0.003662109375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (5, 0, 2): (complex(0, 0.029296875) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (-15 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (4, 1, 2): (15 * np.sqrt(52.5)) / (512. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, -0.003662109375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (3, 2, 2): (complex(0, 0.05859375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (3, 0, 4): (complex(0, -0.05859375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (-15 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (2, 3, 2): (15 * np.sqrt(52.5)) / (256. * np.power(np.pi, 7.5)),
                               (2, 1, 4): (-15 * np.sqrt(52.5)) / (256. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, -0.001220703125) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (1, 4, 2): (complex(0, 0.029296875) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (1, 2, 4): (complex(0, -0.05859375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (1, 0, 6): (complex(0, 0.015625) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-5 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (0, 5, 2): (15 * np.sqrt(52.5)) / (512. * np.power(np.pi, 7.5)),
                               (0, 3, 4): (-15 * np.sqrt(52.5)) / (256. * np.power(np.pi, 7.5)),
                               (0, 1, 6): np.sqrt(52.5) / (64. * np.power(np.pi, 7.5)),
                               }, (7, 0):
                              {(6, 0, 1): (complex(0, -0.01708984375) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (4, 2, 1): (complex(0, -0.05126953125) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (4, 0, 3): (complex(0, 0.1025390625) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (2, 4, 1): (complex(0, -0.05126953125) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (2, 2, 3): (complex(0, 0.205078125) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (2, 0, 5): (complex(0, -0.08203125) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (0, 6, 1): (complex(0, -0.01708984375) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (0, 4, 3): (complex(0, 0.1025390625) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (0, 2, 5): (complex(0, -0.08203125) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               (0, 0, 7): (complex(0, 0.0078125) * np.sqrt(15)) / np.power(np.pi, 7.5),
                               }, (7, 1):
                              {(7, 0, 0): (complex(0, 0.001220703125) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (-5 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, 0.003662109375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (5, 0, 2): (complex(0, -0.029296875) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (-15 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (4, 1, 2): (15 * np.sqrt(52.5)) / (512. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, 0.003662109375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (3, 2, 2): (complex(0, -0.05859375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (3, 0, 4): (complex(0, 0.05859375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (-15 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (2, 3, 2): (15 * np.sqrt(52.5)) / (256. * np.power(np.pi, 7.5)),
                               (2, 1, 4): (-15 * np.sqrt(52.5)) / (256. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, 0.001220703125) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (1, 4, 2): (complex(0, -0.029296875) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (1, 2, 4): (complex(0, 0.05859375) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (1, 0, 6): (complex(0, -0.015625) * np.sqrt(52.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-5 * np.sqrt(52.5)) / (4096. * np.power(np.pi, 7.5)),
                               (0, 5, 2): (15 * np.sqrt(52.5)) / (512. * np.power(np.pi, 7.5)),
                               (0, 3, 4): (-15 * np.sqrt(52.5)) / (256. * np.power(np.pi, 7.5)),
                               (0, 1, 6): np.sqrt(52.5) / (64. * np.power(np.pi, 7.5)),
                               }, (7, 2):
                              {(6, 0, 1): (complex(0, 0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (5, 1, 1): (-45 * np.sqrt(35)) / (2048. * np.power(np.pi, 7.5)),
                               (4, 2, 1): (complex(0, 0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (4, 0, 3): (complex(0, -0.05859375) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (3, 3, 1): (-45 * np.sqrt(35)) / (1024. * np.power(np.pi, 7.5)),
                               (3, 1, 3): (15 * np.sqrt(35)) / (128. * np.power(np.pi, 7.5)),
                               (2, 4, 1): (complex(0, -0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (2, 0, 5): (complex(0, 0.03515625) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (1, 5, 1): (-45 * np.sqrt(35)) / (2048. * np.power(np.pi, 7.5)),
                               (1, 3, 3): (15 * np.sqrt(35)) / (128. * np.power(np.pi, 7.5)),
                               (1, 1, 5): (-9 * np.sqrt(35)) / (128. * np.power(np.pi, 7.5)),
                               (0, 6, 1): (complex(0, -0.010986328125) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (0, 4, 3): (complex(0, 0.05859375) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               (0, 2, 5): (complex(0, -0.03515625) * np.sqrt(35)) / np.power(np.pi, 7.5),
                               }, (7, 3):
                              {(7, 0, 0): (complex(0, -0.002197265625) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (27 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, 0.002197265625) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (5, 0, 2): (complex(0, 0.0439453125) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (45 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (4, 1, 2): (-135 * np.sqrt(17.5)) / (1024. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, 0.010986328125) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (3, 2, 2): (complex(0, -0.087890625) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (3, 0, 4): (complex(0, -0.05859375) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (9 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (2, 3, 2): (-45 * np.sqrt(17.5)) / (512. * np.power(np.pi, 7.5)),
                               (2, 1, 4): (45 * np.sqrt(17.5)) / (256. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, 0.006591796875) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (1, 4, 2): (complex(0, -0.1318359375) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (1, 2, 4): (complex(0, 0.17578125) * np.sqrt(17.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-9 * np.sqrt(17.5)) / (4096. * np.power(np.pi, 7.5)),
                               (0, 5, 2): (45 * np.sqrt(17.5)) / (1024. * np.power(np.pi, 7.5)),
                               (0, 3, 4): (-15 * np.sqrt(17.5)) / (256. * np.power(np.pi, 7.5)),
                               }, (7, 4):
                              {(6, 0, 1): (complex(0, -0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (5, 1, 1): (9 * np.sqrt(192.5)) / (512. * np.power(np.pi, 7.5)),
                               (4, 2, 1): (complex(0, 0.02197265625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (4, 0, 3): (complex(0, 0.0146484375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (3, 1, 3): (-15 * np.sqrt(192.5)) / (256. * np.power(np.pi, 7.5)),
                               (2, 4, 1): (complex(0, 0.02197265625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (2, 2, 3): (complex(0, -0.087890625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (1, 5, 1): (-9 * np.sqrt(192.5)) / (512. * np.power(np.pi, 7.5)),
                               (1, 3, 3): (15 * np.sqrt(192.5)) / (256. * np.power(np.pi, 7.5)),
                               (0, 6, 1): (complex(0, -0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (0, 4, 3): (complex(0, 0.0146484375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               }, (7, 5):
                              {(7, 0, 0): (complex(0, 0.000732421875) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (-15 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, -0.006591796875) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (5, 0, 2): (complex(0, -0.0087890625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (15 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (4, 1, 2): (45 * np.sqrt(192.5)) / (1024. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, -0.003662109375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (3, 2, 2): (complex(0, 0.087890625) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (27 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (2, 3, 2): (-45 * np.sqrt(192.5)) / (512. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, 0.003662109375) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (1, 4, 2): (complex(0, -0.0439453125) * np.sqrt(192.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-3 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 7.5)),
                               (0, 5, 2): (9 * np.sqrt(192.5)) / (1024. * np.power(np.pi, 7.5)),
                               }, (7, 6):
                              {(6, 0, 1): (complex(0, 0.000732421875) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               (5, 1, 1): (-9 * np.sqrt(5005)) / (2048. * np.power(np.pi, 7.5)),
                               (4, 2, 1): (complex(0, -0.010986328125) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               (3, 3, 1): (15 * np.sqrt(5005)) / (1024. * np.power(np.pi, 7.5)),
                               (2, 4, 1): (complex(0, 0.010986328125) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               (1, 5, 1): (-9 * np.sqrt(5005)) / (2048. * np.power(np.pi, 7.5)),
                               (0, 6, 1): (complex(0, -0.000732421875) * np.sqrt(5005)) / np.power(np.pi, 7.5),
                               }, (7, 7):
                              {(7, 0, 0): (complex(0, -0.000732421875) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (6, 1, 0): (21 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               (5, 2, 0): (complex(0, 0.015380859375) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (4, 3, 0): (-105 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               (3, 4, 0): (complex(0, -0.025634765625) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (2, 5, 0): (63 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               (1, 6, 0): (complex(0, 0.005126953125) * np.sqrt(357.5)) / np.power(np.pi, 7.5),
                               (0, 7, 0): (-3 * np.sqrt(357.5)) / (4096. * np.power(np.pi, 7.5)),
                               }, (8, -8):
                              {(8, 0, 0): (complex(0, -0.000091552734375) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),

                               (7, 1, 0): (-3 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, 0.0025634765625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (21 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (4, 4, 0): (complex(0, -0.00640869140625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (-21 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, 0.0025634765625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (3 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.000091552734375) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               }, (8, -7):
                              {(7, 0, 1): (complex(0, -0.0003662109375) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (-21 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, 0.0076904296875) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (105 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, -0.0128173828125) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (-63 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, 0.0025634765625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (3 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               }, (8, -6):
                              {(8, 0, 0): (complex(0, 0.00006103515625) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (7, 1, 0): (3 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, -0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, -0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (-7 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 1, 2): (-21 * np.sqrt(7293)) / (4096. * np.power(np.pi, 8.5)),
                               (4, 2, 2): (complex(0, 0.0128173828125) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (-7 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (3, 3, 2): (35 * np.sqrt(7293)) / (2048. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, 0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, -0.0128173828125) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (3 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (1, 5, 2): (-21 * np.sqrt(7293)) / (4096. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.00006103515625) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               }, (8, -5):
                              {(7, 0, 1): (complex(0, 0.0003662109375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (15 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, -0.0032958984375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (5, 0, 3): (complex(0, -0.00146484375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (-15 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (4, 1, 3): (-15 * np.sqrt(8508.5)) / (2048. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, -0.0018310546875) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (3, 2, 3): (complex(0, 0.0146484375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (-27 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (2, 3, 3): (15 * np.sqrt(8508.5)) / (1024. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, 0.0018310546875) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (1, 4, 3): (complex(0, -0.00732421875) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (3 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (0, 5, 3): (-3 * np.sqrt(8508.5)) / (2048. * np.power(np.pi, 8.5)),
                               }, (8, -4):
                              {(8, 0, 0): (complex(0, -0.00018310546875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (7, 1, 0): (-3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, 0.000732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, 0.00439453125) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (-3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (5, 1, 2): (9 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (4, 4, 0): (complex(0, 0.0018310546875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (4, 2, 2): (complex(0, -0.02197265625) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (4, 0, 4): (complex(0, -0.00732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (3, 1, 4): (-15 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, 0.000732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, -0.02197265625) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (2, 2, 4): (complex(0, 0.0439453125) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (1, 5, 2): (-9 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (1, 3, 4): (15 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.00018310546875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.00439453125) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (0, 4, 4): (complex(0, -0.00732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               }, (8, -3):
                              {(7, 0, 1): (complex(0, -0.0003662109375) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (-9 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, 0.0003662109375) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (5, 0, 3): (complex(0, 0.00244140625) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (-15 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (4, 1, 3): (15 * np.sqrt(9817.5)) / (2048. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, 0.0018310546875) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (3, 2, 3): (complex(0, -0.0048828125) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (3, 0, 5): (complex(0, -0.001953125) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (-3 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (2, 3, 3): (5 * np.sqrt(9817.5)) / (1024. * np.power(np.pi, 8.5)),
                               (2, 1, 5): (-3 * np.sqrt(9817.5)) / (512. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, 0.0010986328125) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (1, 4, 3): (complex(0, -0.00732421875) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (1, 2, 5): (complex(0, 0.005859375) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (3 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (0, 5, 3): (-5 * np.sqrt(9817.5)) / (2048. * np.power(np.pi, 8.5)),
                               (0, 3, 5): np.sqrt(9817.5) / (512. * np.power(np.pi, 8.5)),
                               }, (8, -2):
                              {(8, 0, 0): (complex(0, 0.00018310546875) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (7, 1, 0): (3 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, 0.0003662109375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, -0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (9 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 1, 2): (-45 * np.sqrt(595)) / (4096. * np.power(np.pi, 8.5)),
                               (4, 2, 2): (complex(0, -0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (4, 0, 4): (complex(0, 0.0146484375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (9 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (3, 3, 2): (-45 * np.sqrt(595)) / (2048. * np.power(np.pi, 8.5)),
                               (3, 1, 4): (15 * np.sqrt(595)) / (512. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, -0.0003662109375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, 0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (2, 0, 6): (complex(0, -0.005859375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (3 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (1, 5, 2): (-45 * np.sqrt(595)) / (4096. * np.power(np.pi, 8.5)),
                               (1, 3, 4): (15 * np.sqrt(595)) / (512. * np.power(np.pi, 8.5)),
                               (1, 1, 6): (-3 * np.sqrt(595)) / (256. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.00018310546875) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (0, 4, 4): (complex(0, -0.0146484375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (0, 2, 6): (complex(0, 0.005859375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               }, (8, -1):
                              {(7, 0, 1): (complex(0, 0.0128173828125) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (105 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, 0.0384521484375) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (5, 0, 3): (complex(0, -0.1025390625) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (315 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (4, 1, 3): (-105 * np.sqrt(8.5)) / (1024. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, 0.0384521484375) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (3, 2, 3): (complex(0, -0.205078125) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (3, 0, 5): (complex(0, 0.123046875) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (315 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (2, 3, 3): (-105 * np.sqrt(8.5)) / (512. * np.power(np.pi, 8.5)),
                               (2, 1, 5): (63 * np.sqrt(8.5)) / (512. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, 0.0128173828125) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (1, 4, 3): (complex(0, -0.1025390625) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (1, 2, 5): (complex(0, 0.123046875) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (1, 0, 7): (complex(0, -0.0234375) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (105 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (0, 5, 3): (-105 * np.sqrt(8.5)) / (1024. * np.power(np.pi, 8.5)),
                               (0, 3, 5): (63 * np.sqrt(8.5)) / (512. * np.power(np.pi, 8.5)),
                               (0, 1, 7): (-3 * np.sqrt(8.5)) / (128. * np.power(np.pi, 8.5)),
                               }, (8, 0):
                              {(8, 0, 0): (complex(0, -0.001068115234375) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (6, 2, 0): (complex(0, -0.0042724609375) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, 0.0341796875) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (4, 4, 0): (complex(0, -0.00640869140625) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (4, 2, 2): (complex(0, 0.1025390625) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (4, 0, 4): (complex(0, -0.1025390625) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (2, 6, 0): (complex(0, -0.0042724609375) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, 0.1025390625) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (2, 2, 4): (complex(0, -0.205078125) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (2, 0, 6): (complex(0, 0.0546875) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (0, 8, 0): (complex(0, -0.001068115234375) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.0341796875) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (0, 4, 4): (complex(0, -0.1025390625) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (0, 2, 6): (complex(0, 0.0546875) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               (0, 0, 8): (complex(0, -0.00390625) * np.sqrt(17)) / np.power(np.pi, 8.5),
                               }, (8, 1):
                              {(7, 0, 1): (complex(0, -0.0128173828125) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (105 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, -0.0384521484375) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (5, 0, 3): (complex(0, 0.1025390625) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (315 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (4, 1, 3): (-105 * np.sqrt(8.5)) / (1024. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, -0.0384521484375) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (3, 2, 3): (complex(0, 0.205078125) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (3, 0, 5): (complex(0, -0.123046875) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (315 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (2, 3, 3): (-105 * np.sqrt(8.5)) / (512. * np.power(np.pi, 8.5)),
                               (2, 1, 5): (63 * np.sqrt(8.5)) / (512. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, -0.0128173828125) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (1, 4, 3): (complex(0, 0.1025390625) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (1, 2, 5): (complex(0, -0.123046875) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (1, 0, 7): (complex(0, 0.0234375) * np.sqrt(8.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (105 * np.sqrt(8.5)) / (8192. * np.power(np.pi, 8.5)),
                               (0, 5, 3): (-105 * np.sqrt(8.5)) / (1024. * np.power(np.pi, 8.5)),
                               (0, 3, 5): (63 * np.sqrt(8.5)) / (512. * np.power(np.pi, 8.5)),
                               (0, 1, 7): (-3 * np.sqrt(8.5)) / (128. * np.power(np.pi, 8.5)),
                               }, (8, 2):
                              {(8, 0, 0): (complex(0, 0.00018310546875) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (7, 1, 0): (-3 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, 0.0003662109375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, -0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (-9 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 1, 2): (45 * np.sqrt(595)) / (4096. * np.power(np.pi, 8.5)),
                               (4, 2, 2): (complex(0, -0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (4, 0, 4): (complex(0, 0.0146484375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (-9 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (3, 3, 2): (45 * np.sqrt(595)) / (2048. * np.power(np.pi, 8.5)),
                               (3, 1, 4): (-15 * np.sqrt(595)) / (512. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, -0.0003662109375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, 0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (2, 0, 6): (complex(0, -0.005859375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (-3 * np.sqrt(595)) / (8192. * np.power(np.pi, 8.5)),
                               (1, 5, 2): (45 * np.sqrt(595)) / (4096. * np.power(np.pi, 8.5)),
                               (1, 3, 4): (-15 * np.sqrt(595)) / (512. * np.power(np.pi, 8.5)),
                               (1, 1, 6): (3 * np.sqrt(595)) / (256. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.00018310546875) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.0054931640625) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (0, 4, 4): (complex(0, -0.0146484375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               (0, 2, 6): (complex(0, 0.005859375) * np.sqrt(595)) / np.power(np.pi, 8.5),
                               }, (8, 3):
                              {(7, 0, 1): (complex(0, 0.0003662109375) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (-9 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, -0.0003662109375) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (5, 0, 3): (complex(0, -0.00244140625) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (-15 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (4, 1, 3): (15 * np.sqrt(9817.5)) / (2048. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, -0.0018310546875) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (3, 2, 3): (complex(0, 0.0048828125) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (3, 0, 5): (complex(0, 0.001953125) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (-3 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (2, 3, 3): (5 * np.sqrt(9817.5)) / (1024. * np.power(np.pi, 8.5)),
                               (2, 1, 5): (-3 * np.sqrt(9817.5)) / (512. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, -0.0010986328125) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (1, 4, 3): (complex(0, 0.00732421875) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (1, 2, 5): (complex(0, -0.005859375) * np.sqrt(9817.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (3 * np.sqrt(9817.5)) / (8192. * np.power(np.pi, 8.5)),
                               (0, 5, 3): (-5 * np.sqrt(9817.5)) / (2048. * np.power(np.pi, 8.5)),
                               (0, 3, 5): np.sqrt(9817.5) / (512. * np.power(np.pi, 8.5)),
                               }, (8, 4):
                              {(8, 0, 0): (complex(0, -0.00018310546875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (7, 1, 0): (3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, 0.000732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, 0.00439453125) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (5, 1, 2): (-9 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (4, 4, 0): (complex(0, 0.0018310546875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (4, 2, 2): (complex(0, -0.02197265625) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (4, 0, 4): (complex(0, -0.00732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (-3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (3, 1, 4): (15 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, 0.000732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, -0.02197265625) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (2, 2, 4): (complex(0, 0.0439453125) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (-3 * np.sqrt(654.5)) / (4096. * np.power(np.pi, 8.5)),
                               (1, 5, 2): (9 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (1, 3, 4): (-15 * np.sqrt(654.5)) / (512. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.00018310546875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.00439453125) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               (0, 4, 4): (complex(0, -0.00732421875) * np.sqrt(654.5)) / np.power(np.pi, 8.5),
                               }, (8, 5):
                              {(7, 0, 1): (complex(0, -0.0003662109375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (15 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, 0.0032958984375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (5, 0, 3): (complex(0, 0.00146484375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (-15 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (4, 1, 3): (-15 * np.sqrt(8508.5)) / (2048. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, 0.0018310546875) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (3, 2, 3): (complex(0, -0.0146484375) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (-27 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (2, 3, 3): (15 * np.sqrt(8508.5)) / (1024. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, -0.0018310546875) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (1, 4, 3): (complex(0, 0.00732421875) * np.sqrt(8508.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (3 * np.sqrt(8508.5)) / (8192. * np.power(np.pi, 8.5)),
                               (0, 5, 3): (-3 * np.sqrt(8508.5)) / (2048. * np.power(np.pi, 8.5)),
                               }, (8, 6):
                              {(8, 0, 0): (complex(0, 0.00006103515625) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (7, 1, 0): (-3 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, -0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (6, 0, 2): (complex(0, -0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (7 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 1, 2): (21 * np.sqrt(7293)) / (4096. * np.power(np.pi, 8.5)),
                               (4, 2, 2): (complex(0, 0.0128173828125) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (7 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (3, 3, 2): (-35 * np.sqrt(7293)) / (2048. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, 0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (2, 4, 2): (complex(0, -0.0128173828125) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (-3 * np.sqrt(7293)) / (8192. * np.power(np.pi, 8.5)),
                               (1, 5, 2): (21 * np.sqrt(7293)) / (4096. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.00006103515625) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               (0, 6, 2): (complex(0, 0.0008544921875) * np.sqrt(7293)) / np.power(np.pi, 8.5),
                               }, (8, 7):
                              {(7, 0, 1): (complex(0, 0.0003662109375) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (6, 1, 1): (-21 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               (5, 2, 1): (complex(0, -0.0076904296875) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (4, 3, 1): (105 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               (3, 4, 1): (complex(0, 0.0128173828125) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (2, 5, 1): (-63 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               (1, 6, 1): (complex(0, -0.0025634765625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (0, 7, 1): (3 * np.sqrt(6077.5)) / (8192. * np.power(np.pi, 8.5)),
                               }, (8, 8):
                              {(8, 0, 0): (complex(0, -0.000091552734375) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),

                               (7, 1, 0): (3 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (6, 2, 0): (complex(0, 0.0025634765625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (5, 3, 0): (-21 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (4, 4, 0): (complex(0, -0.00640869140625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (3, 5, 0): (21 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (2, 6, 0): (complex(0, 0.0025634765625) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               (1, 7, 0): (-3 * np.sqrt(6077.5)) / (4096. * np.power(np.pi, 8.5)),
                               (0, 8, 0): (complex(0, -0.000091552734375) * np.sqrt(6077.5)) / np.power(np.pi, 8.5),
                               }, (9, -9):
                              {(9, 0, 0): (complex(0, 7.62939453125e-6) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (9 * np.sqrt(230945)) / (131072. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, -0.000274658203125) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (6, 3, 0): (-21 * np.sqrt(230945)) / (32768. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, 0.0009613037109375) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (63 * np.sqrt(230945)) / (65536. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, -0.000640869140625) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (-9 * np.sqrt(230945)) / (32768. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, 0.00006866455078125) * np.sqrt(230945)) / np.power(np.pi, 9.5),

                               (0, 9, 0): np.sqrt(230945) / (131072. * np.power(np.pi, 9.5)),
                               }, (9, -8):
                              {(8, 0, 1): (complex(0, 0.0000457763671875) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),
                               (7, 1, 1): (3 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, -0.00128173828125) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),

                               (5, 3, 1): (-21 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 4, 1): (complex(0, 0.003204345703125) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),

                               (3, 5, 1): (21 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, -0.00128173828125) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (-3 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.0000457763671875) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),
                               }, (9, -7):
                              {(9, 0, 0): (complex(0, -0.00002288818359375) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (-21 * np.sqrt(13585)) / (131072. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, 0.000457763671875) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (7, 0, 2): (complex(0, 0.0003662109375) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (6, 3, 0): (21 * np.sqrt(13585)) / (32768. * np.power(np.pi, 9.5)),
                               (6, 1, 2): (21 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, -0.0003204345703125) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, -0.0076904296875) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (21 * np.sqrt(13585)) / (65536. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (-105 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, -0.000640869140625) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (3, 4, 2): (complex(0, 0.0128173828125) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (-15 * np.sqrt(13585)) / (32768. * np.power(np.pi, 9.5)),
                               (2, 5, 2): (63 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, 0.00016021728515625) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, -0.0025634765625) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (0, 9, 0): (3 * np.sqrt(13585)) / (131072. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-3 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               }, (9, -6):
                              {(8, 0, 1): (complex(0, -0.000091552734375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (7, 1, 1): (-9 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, 0.00128173828125) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, 0.00042724609375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (5, 3, 1): (21 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 1, 3): (21 * np.sqrt(40755)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 2, 3): (complex(0, -0.00640869140625) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (3, 5, 1): (21 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (3, 3, 3): (-35 * np.sqrt(40755)) / (4096. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, -0.00128173828125) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, 0.00640869140625) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (-9 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (1, 5, 3): (21 * np.sqrt(40755)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.000091552734375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.00042724609375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               }, (9, -5):
                              {(9, 0, 0): (complex(0, 0.0000457763671875) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (15 * np.sqrt(2717)) / (65536. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, -0.0003662109375) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (7, 0, 2): (complex(0, -0.00128173828125) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (6, 1, 2): (-105 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, -0.000640869140625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, 0.01153564453125) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (5, 0, 4): (complex(0, 0.0025634765625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (-21 * np.sqrt(2717)) / (32768. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (105 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (4, 1, 4): (105 * np.sqrt(2717)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 4, 2): (complex(0, 0.00640869140625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (3, 2, 4): (complex(0, -0.025634765625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (-3 * np.sqrt(2717)) / (8192. * np.power(np.pi, 9.5)),
                               (2, 5, 2): (189 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (2, 3, 4): (-105 * np.sqrt(2717)) / (4096. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, 0.0002288818359375) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, -0.00640869140625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (1, 4, 4): (complex(0, 0.0128173828125) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (0, 9, 0): (3 * np.sqrt(2717)) / (65536. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-21 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (0, 5, 4): (21 * np.sqrt(2717)) / (8192. * np.power(np.pi, 9.5)),
                               }, (9, -4):
                              {(8, 0, 1): (complex(0, 0.000091552734375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),

                               (7, 1, 1): (3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, -0.0003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, -0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (5, 3, 1): (3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (5, 1, 3): (-3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (4, 4, 1): (complex(0, -0.00091552734375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (4, 2, 3): (complex(0, 0.003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (4, 0, 5): (complex(0, 0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (3, 5, 1): (-3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 1, 5): (3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, -0.0003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, 0.003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (2, 2, 5): (complex(0, -0.00439453125) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (-3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (1, 5, 3): (3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (1, 3, 5): (-3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.000091552734375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (0, 4, 5): (complex(0, 0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               }, (9, -3):
                              {(9, 0, 0): (complex(0, -0.0000152587890625) * np.sqrt(21945)) / np.power(np.pi, 9.5),

                               (8, 1, 0): (-3 * np.sqrt(21945)) / (65536. * np.power(np.pi, 9.5)),
                               (7, 0, 2): (complex(0, 0.00054931640625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (6, 3, 0): -0.0001220703125 * np.sqrt(21945) / np.power(np.pi, 9.5),
                               (6, 1, 2): (27 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, 0.000091552734375) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, -0.00054931640625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (5, 0, 4): (complex(0, -0.0018310546875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (-3 * np.sqrt(21945)) / (32768. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (45 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (4, 1, 4): (-45 * np.sqrt(21945)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, 0.0001220703125) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (3, 4, 2): (complex(0, -0.00274658203125) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (3, 2, 4): (complex(0, 0.003662109375) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (3, 0, 6): (complex(0, 0.0009765625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (2, 5, 2): (9 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (2, 3, 4): (-15 * np.sqrt(21945)) / (4096. * np.power(np.pi, 9.5)),
                               (2, 1, 6): (3 * np.sqrt(21945)) / (1024. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, 0.0000457763671875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, -0.00164794921875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (1, 4, 4): (complex(0, 0.0054931640625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (1, 2, 6): (complex(0, -0.0029296875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (0, 9, 0): np.sqrt(21945) / (65536. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-9 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (0, 5, 4): (15 * np.sqrt(21945)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 3, 6): -0.0009765625 * np.sqrt(21945) / np.power(np.pi, 9.5),
                               }, (9, -2):
                              {(8, 0, 1): (complex(0, -0.000640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (7, 1, 1): (-21 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, -0.00128173828125) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, 0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (5, 3, 1): (-63 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 1, 3): (105 * np.sqrt(1045)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 2, 3): (complex(0, 0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (4, 0, 5): (complex(0, -0.01025390625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (3, 5, 1): (-63 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (3, 3, 3): (105 * np.sqrt(1045)) / (4096. * np.power(np.pi, 9.5)),
                               (3, 1, 5): (-21 * np.sqrt(1045)) / (1024. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, 0.00128173828125) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, -0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (2, 0, 7): (complex(0, 0.0029296875) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (-21 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (1, 5, 3): (105 * np.sqrt(1045)) / (8192. * np.power(np.pi, 9.5)),
                               (1, 3, 5): (-21 * np.sqrt(1045)) / (1024. * np.power(np.pi, 9.5)),
                               (1, 1, 7): (3 * np.sqrt(1045)) / (512. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.000640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (0, 4, 5): (complex(0, 0.01025390625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (0, 2, 7): (complex(0, -0.0029296875) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               }, (9, -1):
                              {(9, 0, 0): (complex(0, 0.0003204345703125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (21 * np.sqrt(47.5)) / (65536. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, 0.00128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (7, 0, 2): (complex(0, -0.0128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (6, 3, 0): (21 * np.sqrt(47.5)) / (16384. * np.power(np.pi, 9.5)),
                               (6, 1, 2): (-105 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, 0.001922607421875) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, -0.0384521484375) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (5, 0, 4): (complex(0, 0.05126953125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (63 * np.sqrt(47.5)) / (32768. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (-315 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 1, 4): (105 * np.sqrt(47.5)) / (2048. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, 0.00128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (3, 4, 2): (complex(0, -0.0384521484375) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (3, 2, 4): (complex(0, 0.1025390625) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (3, 0, 6): (complex(0, -0.041015625) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (21 * np.sqrt(47.5)) / (16384. * np.power(np.pi, 9.5)),
                               (2, 5, 2): (-315 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (2, 3, 4): (105 * np.sqrt(47.5)) / (1024. * np.power(np.pi, 9.5)),
                               (2, 1, 6): (-21 * np.sqrt(47.5)) / (512. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, 0.0003204345703125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, -0.0128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 4, 4): (complex(0, 0.05126953125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 2, 6): (complex(0, -0.041015625) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 0, 8): (complex(0, 0.005859375) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (0, 9, 0): (21 * np.sqrt(47.5)) / (65536. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-105 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 5, 4): (105 * np.sqrt(47.5)) / (2048. * np.power(np.pi, 9.5)),
                               (0, 3, 6): (-21 * np.sqrt(47.5)) / (512. * np.power(np.pi, 9.5)),
                               (0, 1, 8): (3 * np.sqrt(47.5)) / (512. * np.power(np.pi, 9.5)),
                               }, (9, 0):
                              {(8, 0, 1): (complex(0, 0.0048065185546875) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (6, 2, 1): (complex(0, 0.01922607421875) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, -0.05126953125) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (4, 4, 1): (complex(0, 0.028839111328125) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (4, 2, 3): (complex(0, -0.15380859375) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (4, 0, 5): (complex(0, 0.09228515625) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (2, 6, 1): (complex(0, 0.01922607421875) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, -0.15380859375) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (2, 2, 5): (complex(0, 0.1845703125) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (2, 0, 7): (complex(0, -0.03515625) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (0, 8, 1): (complex(0, 0.0048065185546875) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.05126953125) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (0, 4, 5): (complex(0, 0.09228515625) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (0, 2, 7): (complex(0, -0.03515625) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               (0, 0, 9): (complex(0, 0.001953125) * np.sqrt(19)) / np.power(np.pi, 9.5),
                               }, (9, 1):
                              {(9, 0, 0): (complex(0, -0.0003204345703125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (21 * np.sqrt(47.5)) / (65536. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, -0.00128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (7, 0, 2): (complex(0, 0.0128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (6, 3, 0): (21 * np.sqrt(47.5)) / (16384. * np.power(np.pi, 9.5)),
                               (6, 1, 2): (-105 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, -0.001922607421875) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, 0.0384521484375) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (5, 0, 4): (complex(0, -0.05126953125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (63 * np.sqrt(47.5)) / (32768. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (-315 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 1, 4): (105 * np.sqrt(47.5)) / (2048. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, -0.00128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (3, 4, 2): (complex(0, 0.0384521484375) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (3, 2, 4): (complex(0, -0.1025390625) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (3, 0, 6): (complex(0, 0.041015625) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (21 * np.sqrt(47.5)) / (16384. * np.power(np.pi, 9.5)),
                               (2, 5, 2): (-315 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (2, 3, 4): (105 * np.sqrt(47.5)) / (1024. * np.power(np.pi, 9.5)),
                               (2, 1, 6): (-21 * np.sqrt(47.5)) / (512. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, -0.0003204345703125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, 0.0128173828125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 4, 4): (complex(0, -0.05126953125) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 2, 6): (complex(0, 0.041015625) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (1, 0, 8): (complex(0, -0.005859375) * np.sqrt(47.5)) / np.power(np.pi, 9.5),
                               (0, 9, 0): (21 * np.sqrt(47.5)) / (65536. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-105 * np.sqrt(47.5)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 5, 4): (105 * np.sqrt(47.5)) / (2048. * np.power(np.pi, 9.5)),
                               (0, 3, 6): (-21 * np.sqrt(47.5)) / (512. * np.power(np.pi, 9.5)),
                               (0, 1, 8): (3 * np.sqrt(47.5)) / (512. * np.power(np.pi, 9.5)),
                               }, (9, 2):
                              {(8, 0, 1): (complex(0, -0.000640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (7, 1, 1): (21 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, -0.00128173828125) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, 0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (5, 3, 1): (63 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 1, 3): (-105 * np.sqrt(1045)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 2, 3): (complex(0, 0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (4, 0, 5): (complex(0, -0.01025390625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (3, 5, 1): (63 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (3, 3, 3): (-105 * np.sqrt(1045)) / (4096. * np.power(np.pi, 9.5)),
                               (3, 1, 5): (21 * np.sqrt(1045)) / (1024. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, 0.00128173828125) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, -0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (2, 0, 7): (complex(0, 0.0029296875) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (21 * np.sqrt(1045)) / (16384. * np.power(np.pi, 9.5)),
                               (1, 5, 3): (-105 * np.sqrt(1045)) / (8192. * np.power(np.pi, 9.5)),
                               (1, 3, 5): (21 * np.sqrt(1045)) / (1024. * np.power(np.pi, 9.5)),
                               (1, 1, 7): (-3 * np.sqrt(1045)) / (512. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.000640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.00640869140625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (0, 4, 5): (complex(0, 0.01025390625) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               (0, 2, 7): (complex(0, -0.0029296875) * np.sqrt(1045)) / np.power(np.pi, 9.5),
                               }, (9, 3):
                              {(9, 0, 0): (complex(0, 0.0000152587890625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (-3 * np.sqrt(21945)) / (65536. * np.power(np.pi, 9.5)),
                               (7, 0, 2): (complex(0, -0.00054931640625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (6, 3, 0): -0.0001220703125 * np.sqrt(21945) / np.power(np.pi, 9.5),
                               (6, 1, 2): (27 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, -0.000091552734375) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, 0.00054931640625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (5, 0, 4): (complex(0, 0.0018310546875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (-3 * np.sqrt(21945)) / (32768. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (45 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (4, 1, 4): (-45 * np.sqrt(21945)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, -0.0001220703125) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (3, 4, 2): (complex(0, 0.00274658203125) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (3, 2, 4): (complex(0, -0.003662109375) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (3, 0, 6): (complex(0, -0.0009765625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (2, 5, 2): (9 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (2, 3, 4): (-15 * np.sqrt(21945)) / (4096. * np.power(np.pi, 9.5)),
                               (2, 1, 6): (3 * np.sqrt(21945)) / (1024. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, -0.0000457763671875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, 0.00164794921875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (1, 4, 4): (complex(0, -0.0054931640625) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (1, 2, 6): (complex(0, 0.0029296875) * np.sqrt(21945)) / np.power(np.pi, 9.5),
                               (0, 9, 0): np.sqrt(21945) / (65536. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-9 * np.sqrt(21945)) / (16384. * np.power(np.pi, 9.5)),
                               (0, 5, 4): (15 * np.sqrt(21945)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 3, 6): -0.0009765625 * np.sqrt(21945) / np.power(np.pi, 9.5),
                               }, (9, 4):
                              {(8, 0, 1): (complex(0, 0.000091552734375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),

                               (7, 1, 1): (-3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, -0.0003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, -0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (5, 3, 1): (-3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (5, 1, 3): (3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (4, 4, 1): (complex(0, -0.00091552734375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (4, 2, 3): (complex(0, 0.003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (4, 0, 5): (complex(0, 0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (3, 5, 1): (3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 1, 5): (-3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, -0.0003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, 0.003662109375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (2, 2, 5): (complex(0, -0.00439453125) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (3 * np.sqrt(47547.5)) / (8192. * np.power(np.pi, 9.5)),
                               (1, 5, 3): (-3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (1, 3, 5): (3 * np.sqrt(47547.5)) / (1024. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.000091552734375) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               (0, 4, 5): (complex(0, 0.000732421875) * np.sqrt(47547.5)) / np.power(np.pi, 9.5),
                               }, (9, 5):
                              {(9, 0, 0): (complex(0, -0.0000457763671875) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (15 * np.sqrt(2717)) / (65536. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, 0.0003662109375) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (7, 0, 2): (complex(0, 0.00128173828125) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (6, 1, 2): (-105 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, 0.000640869140625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, -0.01153564453125) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (5, 0, 4): (complex(0, -0.0025634765625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (-21 * np.sqrt(2717)) / (32768. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (105 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (4, 1, 4): (105 * np.sqrt(2717)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 4, 2): (complex(0, -0.00640869140625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (3, 2, 4): (complex(0, 0.025634765625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (-3 * np.sqrt(2717)) / (8192. * np.power(np.pi, 9.5)),
                               (2, 5, 2): (189 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (2, 3, 4): (-105 * np.sqrt(2717)) / (4096. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, -0.0002288818359375) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (1, 6, 2): (complex(0, 0.00640869140625) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (1, 4, 4): (complex(0, -0.0128173828125) * np.sqrt(2717)) / np.power(np.pi, 9.5),
                               (0, 9, 0): (3 * np.sqrt(2717)) / (65536. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-21 * np.sqrt(2717)) / (16384. * np.power(np.pi, 9.5)),
                               (0, 5, 4): (21 * np.sqrt(2717)) / (8192. * np.power(np.pi, 9.5)),
                               }, (9, 6):
                              {(8, 0, 1): (complex(0, -0.000091552734375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (7, 1, 1): (9 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, 0.00128173828125) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (6, 0, 3): (complex(0, 0.00042724609375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (5, 3, 1): (-21 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (5, 1, 3): (-21 * np.sqrt(40755)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 2, 3): (complex(0, -0.00640869140625) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (3, 5, 1): (-21 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (3, 3, 3): (35 * np.sqrt(40755)) / (4096. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, -0.00128173828125) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (2, 4, 3): (complex(0, 0.00640869140625) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (1, 7, 1): (9 * np.sqrt(40755)) / (16384. * np.power(np.pi, 9.5)),
                               (1, 5, 3): (-21 * np.sqrt(40755)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.000091552734375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               (0, 6, 3): (complex(0, -0.00042724609375) * np.sqrt(40755)) / np.power(np.pi, 9.5),
                               }, (9, 7):
                              {(9, 0, 0): (complex(0, 0.00002288818359375) * np.sqrt(13585)) / np.power(np.pi, 9.5),

                               (8, 1, 0): (-21 * np.sqrt(13585)) / (131072. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, -0.000457763671875) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (7, 0, 2): (complex(0, -0.0003662109375) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (6, 3, 0): (21 * np.sqrt(13585)) / (32768. * np.power(np.pi, 9.5)),
                               (6, 1, 2): (21 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, 0.0003204345703125) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (5, 2, 2): (complex(0, 0.0076904296875) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (4, 5, 0): (21 * np.sqrt(13585)) / (65536. * np.power(np.pi, 9.5)),
                               (4, 3, 2): (-105 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, 0.000640869140625) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (3, 4, 2): (complex(0, -0.0128173828125) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (-15 * np.sqrt(13585)) / (32768. * np.power(np.pi, 9.5)),
                               (2, 5, 2): (63 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, -0.00016021728515625) * np.sqrt(13585)) / np.power(np.pi, 9.5),

                               (1, 6, 2): (complex(0, 0.0025634765625) * np.sqrt(13585)) / np.power(np.pi, 9.5),
                               (0, 9, 0): (3 * np.sqrt(13585)) / (131072. * np.power(np.pi, 9.5)),
                               (0, 7, 2): (-3 * np.sqrt(13585)) / (8192. * np.power(np.pi, 9.5)),
                               }, (9, 8):
                              {(8, 0, 1): (complex(0, 0.0000457763671875) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),
                               (7, 1, 1): (-3 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (6, 2, 1): (complex(0, -0.00128173828125) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),

                               (5, 3, 1): (21 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (4, 4, 1): (complex(0, 0.003204345703125) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),

                               (3, 5, 1): (-21 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (2, 6, 1): (complex(0, -0.00128173828125) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),

                               (1, 7, 1): (3 * np.sqrt(115472.5)) / (8192. * np.power(np.pi, 9.5)),
                               (0, 8, 1): (complex(0, 0.0000457763671875) * np.sqrt(115472.5)) / np.power(np.pi, 9.5),
                               }, (9, 9):
                              {(9, 0, 0): (complex(0, -7.62939453125e-6) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (8, 1, 0): (9 * np.sqrt(230945)) / (131072. * np.power(np.pi, 9.5)),
                               (7, 2, 0): (complex(0, 0.000274658203125) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (6, 3, 0): (-21 * np.sqrt(230945)) / (32768. * np.power(np.pi, 9.5)),
                               (5, 4, 0): (complex(0, -0.0009613037109375) * np.sqrt(230945)) / np.power(np.pi, 9.5),

                               (4, 5, 0): (63 * np.sqrt(230945)) / (65536. * np.power(np.pi, 9.5)),
                               (3, 6, 0): (complex(0, 0.000640869140625) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (2, 7, 0): (-9 * np.sqrt(230945)) / (32768. * np.power(np.pi, 9.5)),
                               (1, 8, 0): (complex(0, -0.00006866455078125) * np.sqrt(230945)) / np.power(np.pi, 9.5),
                               (0, 9, 0): np.sqrt(230945) / (131072. * np.power(np.pi, 9.5)),
                               }, (10, -10):
                              {(10, 0, 0): (complex(0, -1.9073486328125e-6) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (-5 * np.sqrt(969969)) / (262144. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, 0.0000858306884765625) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (15 * np.sqrt(969969)) / (65536. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, -0.000400543212890625) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (5, 5, 0): (-63 * np.sqrt(969969)) / (131072. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, 0.000400543212890625) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (15 * np.sqrt(969969)) / (65536. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.0000858306884765625) * np.sqrt(969969)) / np.power(np.pi,
                                                                                                            10.5),
                               (1, 9, 0): (-5 * np.sqrt(969969)) / (262144. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 1.9073486328125e-6) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               }, (10, -9):
                              {(9, 0, 1): (complex(0, -3.814697265625e-6) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (-9 * np.sqrt(4849845)) / (262144. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, 0.0001373291015625) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (21 * np.sqrt(4849845)) / (65536. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, -0.00048065185546875) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (-63 * np.sqrt(4849845)) / (131072. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, 0.0003204345703125) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (9 * np.sqrt(4849845)) / (65536. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, -0.000034332275390625) * np.sqrt(4849845)) / np.power(np.pi,
                                                                                                            10.5),
                               (0, 9, 1): -3.814697265625e-6 * np.sqrt(4849845) / np.power(np.pi, 10.5),
                               }, (10, -8):
                              {(10, 0, 0): (complex(0, 3.814697265625e-6) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (9, 1, 0): np.sqrt(127627.5) / (32768. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, -0.000102996826171875) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                             10.5),
                               (8, 0, 2): (complex(0, -0.00006866455078125) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                            10.5),
                               (7, 3, 0): (-3 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (-9 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, 0.00016021728515625) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, 0.001922607421875) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (5, 3, 2): (63 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, 0.00016021728515625) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (4, 4, 2): (complex(0, -0.0048065185546875) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (3 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (-63 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.000102996826171875) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                             10.5),
                               (2, 6, 2): (complex(0, 0.001922607421875) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (1, 9, 0): -0.000030517578125 * np.sqrt(127627.5) / np.power(np.pi, 10.5),
                               (1, 7, 2): (9 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 3.814697265625e-6) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.00006866455078125) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                            10.5),
                               }, (10, -7):
                              {(9, 0, 1): (complex(0, 0.000034332275390625) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (63 * np.sqrt(85085)) / (262144. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, -0.0006866455078125) * np.sqrt(85085)) / np.power(np.pi, 10.5),

                               (7, 0, 3): (complex(0, -0.00018310546875) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (-63 * np.sqrt(85085)) / (65536. * np.power(np.pi, 10.5)),
                               (6, 1, 3): (-21 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, 0.00048065185546875) * np.sqrt(85085)) / np.power(np.pi, 10.5),

                               (5, 2, 3): (complex(0, 0.00384521484375) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (-63 * np.sqrt(85085)) / (131072. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (105 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, 0.0009613037109375) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (3, 4, 3): (complex(0, -0.00640869140625) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (45 * np.sqrt(85085)) / (65536. * np.power(np.pi, 10.5)),
                               (2, 5, 3): (-63 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, -0.000240325927734375) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (1, 6, 3): (complex(0, 0.00128173828125) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-9 * np.sqrt(85085)) / (262144. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (3 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               }, (10, -6):
                              {(10, 0, 0): (complex(0, -0.0000171661376953125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (-27 * np.sqrt(5005)) / (262144. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, 0.0002231597900390625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, 0.00054931640625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (9 * np.sqrt(5005)) / (65536. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (27 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, 0.000240325927734375) * np.sqrt(5005)) / np.power(np.pi, 10.5),

                               (6, 2, 2): (complex(0, -0.0076904296875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, -0.00128173828125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (5, 5, 0): (63 * np.sqrt(5005)) / (131072. * np.power(np.pi, 10.5)),
                               (5, 3, 2): (-63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (5, 1, 4): (-63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, -0.000240325927734375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (4, 2, 4): (complex(0, 0.01922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (9 * np.sqrt(5005)) / (65536. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (-63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (3, 3, 4): (105 * np.sqrt(5005)) / (4096. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.0002231597900390625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, 0.0076904296875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, -0.01922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 9, 0): (-27 * np.sqrt(5005)) / (262144. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (27 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 5, 4): (-63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 0.0000171661376953125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.00054931640625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.00128173828125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               }, (10, -5):
                              {(9, 0, 1): (complex(0, -0.00034332275390625) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (-225 * np.sqrt(1001)) / (131072. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, 0.00274658203125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (7, 0, 3): (complex(0, 0.003204345703125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (6, 1, 3): (525 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, 0.0048065185546875) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (5, 2, 3): (complex(0, -0.028839111328125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (5, 0, 5): (complex(0, -0.00384521484375) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (315 * np.sqrt(1001)) / (65536. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (-525 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (4, 1, 5): (-315 * np.sqrt(1001)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 4, 3): (complex(0, -0.016021728515625) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (3, 2, 5): (complex(0, 0.0384521484375) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (45 * np.sqrt(1001)) / (16384. * np.power(np.pi, 10.5)),
                               (2, 5, 3): (-945 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (2, 3, 5): (315 * np.sqrt(1001)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, -0.00171661376953125) * np.sqrt(1001)) / np.power(np.pi, 10.5),

                               (1, 6, 3): (complex(0, 0.016021728515625) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (1, 4, 5): (complex(0, -0.01922607421875) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-45 * np.sqrt(1001)) / (131072. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (105 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (0, 5, 5): (-63 * np.sqrt(1001)) / (16384. * np.power(np.pi, 10.5)),
                               }, (10, -4):
                              {(10, 0, 0): (complex(0, 0.00002288818359375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (3 * np.sqrt(2502.5)) / (32768. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, -0.00006866455078125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, -0.0009613037109375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (3 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (-63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, -0.0003204345703125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (5, 3, 2): (-63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (5, 1, 4): (63 * np.sqrt(2502.5)) / (4096. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, -0.0003204345703125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (4, 4, 2): (complex(0, 0.009613037109375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (4, 2, 4): (complex(0, -0.01922607421875) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (4, 0, 6): (complex(0, -0.0025634765625) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (-3 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 1, 6): (-21 * np.sqrt(2502.5)) / (2048. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.00006866455078125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, -0.01922607421875) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (2, 2, 6): (complex(0, 0.015380859375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (1, 9, 0): (-3 * np.sqrt(2502.5)) / (32768. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (1, 5, 4): (-63 * np.sqrt(2502.5)) / (4096. * np.power(np.pi, 10.5)),
                               (1, 3, 6): (21 * np.sqrt(2502.5)) / (2048. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 0.00002288818359375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.0009613037109375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (0, 4, 6): (complex(0, -0.0025634765625) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               }, (10, -3):
                              {(9, 0, 1): (complex(0, 0.00016021728515625) * np.sqrt(5005)) / np.power(np.pi, 10.5),

                               (8, 1, 1): (63 * np.sqrt(5005)) / (131072. * np.power(np.pi, 10.5)),
                               (7, 0, 3): (complex(0, -0.001922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (21 * np.sqrt(5005)) / (16384. * np.power(np.pi, 10.5)),
                               (6, 1, 3): (-189 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, -0.0009613037109375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (5, 2, 3): (complex(0, 0.001922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (5, 0, 5): (complex(0, 0.00384521484375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (63 * np.sqrt(5005)) / (65536. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (-315 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (4, 1, 5): (189 * np.sqrt(5005)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, -0.00128173828125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 4, 3): (complex(0, 0.009613037109375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 2, 5): (complex(0, -0.0076904296875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 0, 7): (complex(0, -0.00146484375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (2, 5, 3): (-63 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (2, 3, 5): (63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (2, 1, 7): (-9 * np.sqrt(5005)) / (2048. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, -0.00048065185546875) * np.sqrt(5005)) / np.power(np.pi, 10.5),

                               (1, 6, 3): (complex(0, 0.005767822265625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 4, 5): (complex(0, -0.01153564453125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 2, 7): (complex(0, 0.00439453125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-21 * np.sqrt(5005)) / (131072. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (63 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (0, 5, 5): (-63 * np.sqrt(5005)) / (16384. * np.power(np.pi, 10.5)),
                               (0, 3, 7): (3 * np.sqrt(5005)) / (2048. * np.power(np.pi, 10.5)),
                               }, (10, -2):
                              {(10, 0, 0): (complex(0, -0.000080108642578125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (-21 * np.sqrt(192.5)) / (131072. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, -0.000240325927734375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, 0.00384521484375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (-21 * np.sqrt(192.5)) / (32768. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (63 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, -0.00016021728515625) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, 0.0076904296875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, -0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (5, 5, 0): (-63 * np.sqrt(192.5)) / (65536. * np.power(np.pi, 10.5)),
                               (5, 3, 2): (189 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (5, 1, 4): (-315 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, 0.00016021728515625) * np.sqrt(192.5)) / np.power(np.pi, 10.5),

                               (4, 2, 4): (complex(0, -0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (4, 0, 6): (complex(0, 0.0205078125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (-21 * np.sqrt(192.5)) / (32768. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (189 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (3, 3, 4): (-315 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 10.5)),
                               (3, 1, 6): (21 * np.sqrt(192.5)) / (512. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, 0.000240325927734375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, -0.0076904296875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, 0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (2, 0, 8): (complex(0, -0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (1, 9, 0): (-21 * np.sqrt(192.5)) / (131072. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (63 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 5, 4): (-315 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 3, 6): (21 * np.sqrt(192.5)) / (512. * np.power(np.pi, 10.5)),
                               (1, 1, 8): (-9 * np.sqrt(192.5)) / (1024. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 0.000080108642578125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.00384521484375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 4, 6): (complex(0, -0.0205078125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 2, 8): (complex(0, 0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               }, (10, -1):
                              {(9, 0, 1): (complex(0, -0.00048065185546875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (-63 * np.sqrt(577.5)) / (131072. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, -0.001922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (7, 0, 3): (complex(0, 0.00640869140625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (-63 * np.sqrt(577.5)) / (32768. * np.power(np.pi, 10.5)),
                               (6, 1, 3): (105 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, -0.0028839111328125) * np.sqrt(577.5)) / np.power(np.pi, 10.5),

                               (5, 2, 3): (complex(0, 0.01922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (5, 0, 5): (complex(0, -0.015380859375) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (-189 * np.sqrt(577.5)) / (65536. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (315 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (4, 1, 5): (-63 * np.sqrt(577.5)) / (4096. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, -0.001922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (3, 4, 3): (complex(0, 0.01922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (3, 2, 5): (complex(0, -0.03076171875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (3, 0, 7): (complex(0, 0.0087890625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (-63 * np.sqrt(577.5)) / (32768. * np.power(np.pi, 10.5)),
                               (2, 5, 3): (315 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (2, 3, 5): (-63 * np.sqrt(577.5)) / (2048. * np.power(np.pi, 10.5)),
                               (2, 1, 7): (9 * np.sqrt(577.5)) / (1024. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, -0.00048065185546875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 6, 3): (complex(0, 0.00640869140625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 4, 5): (complex(0, -0.015380859375) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 2, 7): (complex(0, 0.0087890625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 0, 9): (complex(0, -0.0009765625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-63 * np.sqrt(577.5)) / (131072. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (105 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (0, 5, 5): (-63 * np.sqrt(577.5)) / (4096. * np.power(np.pi, 10.5)),
                               (0, 3, 7): (9 * np.sqrt(577.5)) / (1024. * np.power(np.pi, 10.5)),
                               (0, 1, 9): -0.0009765625 * np.sqrt(577.5) / np.power(np.pi, 10.5),
                               }, (10, 0):
                              {(10, 0, 0): (complex(0, 0.000240325927734375) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (8, 2, 0): (complex(0, 0.001201629638671875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, -0.01201629638671875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (6, 4, 0): (complex(0, 0.00240325927734375) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, -0.048065185546875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, 0.0640869140625) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (4, 6, 0): (complex(0, 0.00240325927734375) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (4, 4, 2): (complex(0, -0.0720977783203125) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (4, 2, 4): (complex(0, 0.1922607421875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (4, 0, 6): (complex(0, -0.076904296875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (2, 8, 0): (complex(0, 0.001201629638671875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, -0.048065185546875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, 0.1922607421875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (2, 2, 6): (complex(0, -0.15380859375) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (2, 0, 8): (complex(0, 0.02197265625) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (0, 10, 0): (complex(0, 0.000240325927734375) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.01201629638671875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.0640869140625) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (0, 4, 6): (complex(0, -0.076904296875) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (0, 2, 8): (complex(0, 0.02197265625) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               (0, 0, 10): (complex(0, -0.0009765625) * np.sqrt(21)) / np.power(np.pi, 10.5),
                               }, (10, 1):
                              {(9, 0, 1): (complex(0, 0.00048065185546875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (-63 * np.sqrt(577.5)) / (131072. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, 0.001922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (7, 0, 3): (complex(0, -0.00640869140625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (-63 * np.sqrt(577.5)) / (32768. * np.power(np.pi, 10.5)),
                               (6, 1, 3): (105 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, 0.0028839111328125) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (5, 2, 3): (complex(0, -0.01922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (5, 0, 5): (complex(0, 0.015380859375) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (-189 * np.sqrt(577.5)) / (65536. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (315 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (4, 1, 5): (-63 * np.sqrt(577.5)) / (4096. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, 0.001922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (3, 4, 3): (complex(0, -0.01922607421875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (3, 2, 5): (complex(0, 0.03076171875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (3, 0, 7): (complex(0, -0.0087890625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (-63 * np.sqrt(577.5)) / (32768. * np.power(np.pi, 10.5)),
                               (2, 5, 3): (315 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (2, 3, 5): (-63 * np.sqrt(577.5)) / (2048. * np.power(np.pi, 10.5)),
                               (2, 1, 7): (9 * np.sqrt(577.5)) / (1024. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, 0.00048065185546875) * np.sqrt(577.5)) / np.power(np.pi, 10.5),

                               (1, 6, 3): (complex(0, -0.00640869140625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 4, 5): (complex(0, 0.015380859375) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 2, 7): (complex(0, -0.0087890625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (1, 0, 9): (complex(0, 0.0009765625) * np.sqrt(577.5)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-63 * np.sqrt(577.5)) / (131072. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (105 * np.sqrt(577.5)) / (16384. * np.power(np.pi, 10.5)),
                               (0, 5, 5): (-63 * np.sqrt(577.5)) / (4096. * np.power(np.pi, 10.5)),
                               (0, 3, 7): (9 * np.sqrt(577.5)) / (1024. * np.power(np.pi, 10.5)),
                               (0, 1, 9): -0.0009765625 * np.sqrt(577.5) / np.power(np.pi, 10.5),
                               }, (10, 2):
                              {(10, 0, 0): (complex(0, -0.000080108642578125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (21 * np.sqrt(192.5)) / (131072. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, -0.000240325927734375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, 0.00384521484375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (21 * np.sqrt(192.5)) / (32768. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (-63 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, -0.00016021728515625) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, 0.0076904296875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, -0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (5, 5, 0): (63 * np.sqrt(192.5)) / (65536. * np.power(np.pi, 10.5)),
                               (5, 3, 2): (-189 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (5, 1, 4): (315 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, 0.00016021728515625) * np.sqrt(192.5)) / np.power(np.pi, 10.5),

                               (4, 2, 4): (complex(0, -0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (4, 0, 6): (complex(0, 0.0205078125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (21 * np.sqrt(192.5)) / (32768. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (-189 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (3, 3, 4): (315 * np.sqrt(192.5)) / (4096. * np.power(np.pi, 10.5)),
                               (3, 1, 6): (-21 * np.sqrt(192.5)) / (512. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, 0.000240325927734375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, -0.0076904296875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, 0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (2, 0, 8): (complex(0, -0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (1, 9, 0): (21 * np.sqrt(192.5)) / (131072. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (-63 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 5, 4): (315 * np.sqrt(192.5)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 3, 6): (-21 * np.sqrt(192.5)) / (512. * np.power(np.pi, 10.5)),
                               (1, 1, 8): (9 * np.sqrt(192.5)) / (1024. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 0.000080108642578125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.00384521484375) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.01922607421875) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 4, 6): (complex(0, -0.0205078125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               (0, 2, 8): (complex(0, 0.00439453125) * np.sqrt(192.5)) / np.power(np.pi, 10.5),
                               }, (10, 3):
                              {(9, 0, 1): (complex(0, -0.00016021728515625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (63 * np.sqrt(5005)) / (131072. * np.power(np.pi, 10.5)),
                               (7, 0, 3): (complex(0, 0.001922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (21 * np.sqrt(5005)) / (16384. * np.power(np.pi, 10.5)),
                               (6, 1, 3): (-189 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, 0.0009613037109375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (5, 2, 3): (complex(0, -0.001922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (5, 0, 5): (complex(0, -0.00384521484375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (63 * np.sqrt(5005)) / (65536. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (-315 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (4, 1, 5): (189 * np.sqrt(5005)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, 0.00128173828125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 4, 3): (complex(0, -0.009613037109375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 2, 5): (complex(0, 0.0076904296875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 0, 7): (complex(0, 0.00146484375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (2, 5, 3): (-63 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (2, 3, 5): (63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (2, 1, 7): (-9 * np.sqrt(5005)) / (2048. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, 0.00048065185546875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 6, 3): (complex(0, -0.005767822265625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 4, 5): (complex(0, 0.01153564453125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 2, 7): (complex(0, -0.00439453125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-21 * np.sqrt(5005)) / (131072. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (63 * np.sqrt(5005)) / (32768. * np.power(np.pi, 10.5)),
                               (0, 5, 5): (-63 * np.sqrt(5005)) / (16384. * np.power(np.pi, 10.5)),
                               (0, 3, 7): (3 * np.sqrt(5005)) / (2048. * np.power(np.pi, 10.5)),
                               }, (10, 4):
                              {(10, 0, 0): (complex(0, 0.00002288818359375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (-3 * np.sqrt(2502.5)) / (32768. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, -0.00006866455078125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, -0.0009613037109375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (-3 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, -0.0003204345703125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (5, 3, 2): (63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (5, 1, 4): (-63 * np.sqrt(2502.5)) / (4096. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, -0.0003204345703125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (4, 4, 2): (complex(0, 0.009613037109375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (4, 2, 4): (complex(0, -0.01922607421875) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (4, 0, 6): (complex(0, -0.0025634765625) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (3 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (-63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 1, 6): (21 * np.sqrt(2502.5)) / (2048. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.00006866455078125) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, -0.01922607421875) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (2, 2, 6): (complex(0, 0.015380859375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (1, 9, 0): (3 * np.sqrt(2502.5)) / (32768. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (-63 * np.sqrt(2502.5)) / (16384. * np.power(np.pi, 10.5)),
                               (1, 5, 4): (63 * np.sqrt(2502.5)) / (4096. * np.power(np.pi, 10.5)),
                               (1, 3, 6): (-21 * np.sqrt(2502.5)) / (2048. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 0.00002288818359375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.0009613037109375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.00384521484375) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               (0, 4, 6): (complex(0, -0.0025634765625) * np.sqrt(2502.5)) / np.power(np.pi, 10.5),
                               }, (10, 5):
                              {(9, 0, 1): (complex(0, 0.00034332275390625) * np.sqrt(1001)) / np.power(np.pi, 10.5),

                               (8, 1, 1): (-225 * np.sqrt(1001)) / (131072. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, -0.00274658203125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (7, 0, 3): (complex(0, -0.003204345703125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (6, 1, 3): (525 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, -0.0048065185546875) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (5, 2, 3): (complex(0, 0.028839111328125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (5, 0, 5): (complex(0, 0.00384521484375) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (315 * np.sqrt(1001)) / (65536. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (-525 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (4, 1, 5): (-315 * np.sqrt(1001)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 4, 3): (complex(0, 0.016021728515625) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (3, 2, 5): (complex(0, -0.0384521484375) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (45 * np.sqrt(1001)) / (16384. * np.power(np.pi, 10.5)),
                               (2, 5, 3): (-945 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (2, 3, 5): (315 * np.sqrt(1001)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, 0.00171661376953125) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (1, 6, 3): (complex(0, -0.016021728515625) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (1, 4, 5): (complex(0, 0.01922607421875) * np.sqrt(1001)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-45 * np.sqrt(1001)) / (131072. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (105 * np.sqrt(1001)) / (32768. * np.power(np.pi, 10.5)),
                               (0, 5, 5): (-63 * np.sqrt(1001)) / (16384. * np.power(np.pi, 10.5)),
                               }, (10, 6):
                              {(10, 0, 0): (complex(0, -0.0000171661376953125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (27 * np.sqrt(5005)) / (262144. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, 0.0002231597900390625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (8, 0, 2): (complex(0, 0.00054931640625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (-9 * np.sqrt(5005)) / (65536. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (-27 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, 0.000240325927734375) * np.sqrt(5005)) / np.power(np.pi, 10.5),

                               (6, 2, 2): (complex(0, -0.0076904296875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (6, 0, 4): (complex(0, -0.00128173828125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (5, 5, 0): (-63 * np.sqrt(5005)) / (131072. * np.power(np.pi, 10.5)),
                               (5, 3, 2): (63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (5, 1, 4): (63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, -0.000240325927734375) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (4, 2, 4): (complex(0, 0.01922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (-9 * np.sqrt(5005)) / (65536. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (3, 3, 4): (-105 * np.sqrt(5005)) / (4096. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.0002231597900390625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (2, 6, 2): (complex(0, 0.0076904296875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (2, 4, 4): (complex(0, -0.01922607421875) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (1, 9, 0): (27 * np.sqrt(5005)) / (262144. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (-27 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (1, 5, 4): (63 * np.sqrt(5005)) / (8192. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 0.0000171661376953125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.00054931640625) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               (0, 6, 4): (complex(0, 0.00128173828125) * np.sqrt(5005)) / np.power(np.pi, 10.5),
                               }, (10, 7):
                              {(9, 0, 1): (complex(0, -0.000034332275390625) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (63 * np.sqrt(85085)) / (262144. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, 0.0006866455078125) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (7, 0, 3): (complex(0, 0.00018310546875) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (-63 * np.sqrt(85085)) / (65536. * np.power(np.pi, 10.5)),
                               (6, 1, 3): (-21 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, -0.00048065185546875) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (5, 2, 3): (complex(0, -0.00384521484375) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (-63 * np.sqrt(85085)) / (131072. * np.power(np.pi, 10.5)),
                               (4, 3, 3): (105 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, -0.0009613037109375) * np.sqrt(85085)) / np.power(np.pi, 10.5),

                               (3, 4, 3): (complex(0, 0.00640869140625) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (45 * np.sqrt(85085)) / (65536. * np.power(np.pi, 10.5)),
                               (2, 5, 3): (-63 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, 0.000240325927734375) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (1, 6, 3): (complex(0, -0.00128173828125) * np.sqrt(85085)) / np.power(np.pi, 10.5),
                               (0, 9, 1): (-9 * np.sqrt(85085)) / (262144. * np.power(np.pi, 10.5)),
                               (0, 7, 3): (3 * np.sqrt(85085)) / (16384. * np.power(np.pi, 10.5)),
                               }, (10, 8):
                              {(10, 0, 0): (complex(0, 3.814697265625e-6) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (9, 1, 0): -0.000030517578125 * np.sqrt(127627.5) / np.power(np.pi, 10.5),
                               (8, 2, 0): (complex(0, -0.000102996826171875) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                             10.5),
                               (8, 0, 2): (complex(0, -0.00006866455078125) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                            10.5),
                               (7, 3, 0): (3 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (7, 1, 2): (9 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, 0.00016021728515625) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (6, 2, 2): (complex(0, 0.001922607421875) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (5, 3, 2): (-63 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, 0.00016021728515625) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (4, 4, 2): (complex(0, -0.0048065185546875) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (-3 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (3, 5, 2): (63 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.000102996826171875) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                             10.5),
                               (2, 6, 2): (complex(0, 0.001922607421875) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (1, 9, 0): np.sqrt(127627.5) / (32768. * np.power(np.pi, 10.5)),
                               (1, 7, 2): (-9 * np.sqrt(127627.5)) / (16384. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 3.814697265625e-6) * np.sqrt(127627.5)) / np.power(np.pi, 10.5),
                               (0, 8, 2): (complex(0, -0.00006866455078125) * np.sqrt(127627.5)) / np.power(np.pi,
                                                                                                            10.5),
                               }, (10, 9):
                              {(9, 0, 1): (complex(0, 3.814697265625e-6) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (8, 1, 1): (-9 * np.sqrt(4849845)) / (262144. * np.power(np.pi, 10.5)),
                               (7, 2, 1): (complex(0, -0.0001373291015625) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (6, 3, 1): (21 * np.sqrt(4849845)) / (65536. * np.power(np.pi, 10.5)),
                               (5, 4, 1): (complex(0, 0.00048065185546875) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (4, 5, 1): (-63 * np.sqrt(4849845)) / (131072. * np.power(np.pi, 10.5)),
                               (3, 6, 1): (complex(0, -0.0003204345703125) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (2, 7, 1): (9 * np.sqrt(4849845)) / (65536. * np.power(np.pi, 10.5)),
                               (1, 8, 1): (complex(0, 0.000034332275390625) * np.sqrt(4849845)) / np.power(np.pi, 10.5),
                               (0, 9, 1): -3.814697265625e-6 * np.sqrt(4849845) / np.power(np.pi, 10.5),
                               }, (10, 10):
                              {(10, 0, 0): (complex(0, -1.9073486328125e-6) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (9, 1, 0): (5 * np.sqrt(969969)) / (262144. * np.power(np.pi, 10.5)),
                               (8, 2, 0): (complex(0, 0.0000858306884765625) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (7, 3, 0): (-15 * np.sqrt(969969)) / (65536. * np.power(np.pi, 10.5)),
                               (6, 4, 0): (complex(0, -0.000400543212890625) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (5, 5, 0): (63 * np.sqrt(969969)) / (131072. * np.power(np.pi, 10.5)),
                               (4, 6, 0): (complex(0, 0.000400543212890625) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               (3, 7, 0): (-15 * np.sqrt(969969)) / (65536. * np.power(np.pi, 10.5)),
                               (2, 8, 0): (complex(0, -0.0000858306884765625) * np.sqrt(969969)) / np.power(np.pi,
                                                                                                            10.5),
                               (1, 9, 0): (5 * np.sqrt(969969)) / (262144. * np.power(np.pi, 10.5)),
                               (0, 10, 0): (complex(0, 1.9073486328125e-6) * np.sqrt(969969)) / np.power(np.pi, 10.5),
                               }}

if __name__ == "__main__":
    res = cartesian_from_real_spherical(2, -1)
    print(res)
    res = cartesian_from_real_spherical(2, 0)
    print(res)
    res = cartesian_from_real_spherical(2, 1)
    print(res)

